---
http_interactions:
- request:
    method: get
    uri: https://raw.githubusercontent.com/relaton/relaton-data-itu-r/master/index-v1.zip
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - keep-alive
      Content-Length:
      - '14735'
      Cache-Control:
      - max-age=300
      Content-Security-Policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      Content-Type:
      - application/zip
      Etag:
      - W/"fd47d9ea393079a90b8358b06389cc1d23a0ff5df87af8500442441482ed9795"
      Strict-Transport-Security:
      - max-age=31536000
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      X-Xss-Protection:
      - 1; mode=block
      X-Github-Request-Id:
      - 6892:33953E:CDB46:F9D2A:658D856D
      Accept-Ranges:
      - bytes
      Date:
      - Thu, 28 Dec 2023 14:25:51 GMT
      Via:
      - 1.1 varnish
      X-Served-By:
      - cache-mel11244-MEL
      X-Cache:
      - MISS
      X-Cache-Hits:
      - '0'
      X-Timer:
      - S1703773552.577163,VS0,VE275
      Vary:
      - Authorization,Accept-Encoding,Origin
      Access-Control-Allow-Origin:
      - "*"
      Cross-Origin-Resource-Policy:
      - cross-origin
      X-Fastly-Request-Id:
      - 1a642020ca203525be473e4c859d745e7f7694a2
      Expires:
      - Thu, 28 Dec 2023 14:30:51 GMT
      Source-Age:
      - '0'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        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
  recorded_at: Thu, 28 Dec 2023 14:25:51 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/relaton/relaton-data-itu-r/master/index-v1.zip
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - keep-alive
      Content-Length:
      - '14735'
      Cache-Control:
      - max-age=300
      Content-Security-Policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      Content-Type:
      - application/zip
      Etag:
      - W/"fd47d9ea393079a90b8358b06389cc1d23a0ff5df87af8500442441482ed9795"
      Strict-Transport-Security:
      - max-age=31536000
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      X-Xss-Protection:
      - 1; mode=block
      X-Github-Request-Id:
      - 6892:33953E:CDB46:F9D2A:658D856D
      Accept-Ranges:
      - bytes
      Date:
      - Thu, 28 Dec 2023 14:25:51 GMT
      Via:
      - 1.1 varnish
      X-Served-By:
      - cache-mel11251-MEL
      X-Cache:
      - HIT
      X-Cache-Hits:
      - '1'
      X-Timer:
      - S1703773552.583434,VS0,VE269
      Vary:
      - Authorization,Accept-Encoding,Origin
      Access-Control-Allow-Origin:
      - "*"
      Cross-Origin-Resource-Policy:
      - cross-origin
      X-Fastly-Request-Id:
      - 4ccb88390fedb5c6f1457fe6022bd3953a032a00
      Expires:
      - Thu, 28 Dec 2023 14:30:51 GMT
      Source-Age:
      - '0'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 28 Dec 2023 14:25:51 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/relaton/relaton-data-ieee/main/data/IEEE_194-1977.yaml
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.7.12
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - keep-alive
      Content-Length:
      - '2578'
      Cache-Control:
      - max-age=300
      Content-Security-Policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      Content-Type:
      - text/plain; charset=utf-8
      Etag:
      - W/"9f966dcdbec1bd6766559aabbd7855c1a6e82a91dc2e64627df824df95478b99"
      Strict-Transport-Security:
      - max-age=31536000
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      X-Xss-Protection:
      - 1; mode=block
      X-Github-Request-Id:
      - 8C50:33900E:9F502:C06E9:658D5008
      Accept-Ranges:
      - bytes
      Date:
      - Thu, 28 Dec 2023 14:25:51 GMT
      Via:
      - 1.1 varnish
      X-Served-By:
      - cache-mel11266-MEL
      X-Cache:
      - HIT
      X-Cache-Hits:
      - '1'
      X-Timer:
      - S1703773552.582720,VS0,VE322
      Vary:
      - Authorization,Accept-Encoding,Origin
      Access-Control-Allow-Origin:
      - "*"
      Cross-Origin-Resource-Policy:
      - cross-origin
      X-Fastly-Request-Id:
      - be7ae7002c74ea0ab98cc75c2f322b0ce9472e28
      Expires:
      - Thu, 28 Dec 2023 14:30:51 GMT
      Source-Age:
      - '0'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        LS0tCnNjaGVtYS12ZXJzaW9uOiB2MS4yLjMKaWQ6IElFRUUxOTQtMTk3Nwp0aXRsZToKLSBjb250ZW50OiBJRUVFIFN0YW5kYXJkIFB1bHNlIFRlcm1zIGFuZCBEZWZpbml0aW9ucwogIGZvcm1hdDogdGV4dC9wbGFpbgogIHR5cGU6IG1haW4KbGluazoKLSBjb250ZW50OiBodHRwczovL2llZWV4cGxvcmUuaWVlZS5vcmcvZG9jdW1lbnQvMjkwMTUKICB0eXBlOiBzcmMKdHlwZTogc3RhbmRhcmQKZG9jaWQ6Ci0gaWQ6IElFRUUgMTk0LTE5NzcKICB0eXBlOiBJRUVFCiAgcHJpbWFyeTogdHJ1ZQotIGlkOiBJRUVFIDE5NOKEoi0xOTc3CiAgdHlwZTogSUVFRQogIHNjb3BlOiB0cmFkZW1hcmsKICBwcmltYXJ5OiB0cnVlCi0gaWQ6IDAtNzM4MS00MzUwLTIKICB0eXBlOiBJU0JOCi0gaWQ6IDEwLjExMDkvSUVFRVNURC4xOTc3LjgxMDk4CiAgdHlwZTogRE9JCmRvY251bWJlcjogSUVFRSAxOTQtMTk3NwpkYXRlOgotIHR5cGU6IGNyZWF0ZWQKICB2YWx1ZTogJzE5NzcnCi0gdHlwZTogcHVibGlzaGVkCiAgdmFsdWU6ICcyMDAyLTEyLTEwJwotIHR5cGU6IGlzc3VlZAogIHZhbHVlOiAnMTk3NS0wMi0xNycKY29udHJpYnV0b3I6Ci0gb3JnYW5pemF0aW9uOgogICAgbmFtZToKICAgIC0gY29udGVudDogSW5zdGl0dXRlIG9mIEVsZWN0cmljYWwgYW5kIEVsZWN0cm9uaWNzIEVuZ2luZWVycwogICAgYWJicmV2aWF0aW9uOgogICAgICBjb250ZW50OiBJRUVFCiAgICB1cmw6IGh0dHA6Ly93d3cuaWVlZS5vcmcKICAgIGNvbnRhY3Q6CiAgICAtIGFkZHJlc3M6CiAgICAgICAgY2l0eTogTmV3IFlvcmsKICAgICAgICBjb3VudHJ5OiBVU0EKICByb2xlOgogIC0gdHlwZTogcHVibGlzaGVyCnJldmRhdGU6ICcyMDAyLTEyLTEwJwpsYW5ndWFnZToKLSBlbgpzY3JpcHQ6Ci0gTGF0bgphYnN0cmFjdDoKLSBjb250ZW50OiAnVGhpcyBzdGFuZGFyZCBwcm92aWRlcyBmdW5kYW1lbnRhbCBkZWZpbml0aW9ucyBmb3IgZ2VuZXJhbCB1c2UgaW4gdGltZQogICAgZG9tYWluIHB1bHNlIHRlY2hub2xvZ3kuIEl0IGRlZmluZXMgdGVybXMgZm9yIHB1bHNlIHBoZW5vbWVuYSBhbmQgcHVsc2UgcGFyYW1ldGVycwogICAgd2hpY2ggYXJlIHByZXJlcXVpc2l0ZSB0bzogZWZmaWNpZW50IGNvbW11bmljYXRpb24gb2YgdGVjaG5pY2FsIGluZm9ybWF0aW9uOyBzdGFuZGFyZHMKICAgIGZvciBtZXRob2RzIG9mIHB1bHNlIHBhcmFtZXRlciBtZWFzdXJlbWVudDsgc3RhbmRhcmRzIGZvciBwdWxzZSBhcHBhcmF0dXM7IGFuZAogICAgc3RhbmRhcmRzIGZvciBhcHBhcmF0dXMgd2hpY2ggZW1wbG95cyBwdWxzZSB0ZWNobmlxdWVzLiBXaXRoIGl0cyBzY29wZSwgdGhlIG9iamVjdAogICAgb2YgdGhpcyBzdGFuZGFyZCBpcyB0aGUgZGVmaW5pdGlvbiBvZiBhbiBpbnRlcm5hbGx5IGNvbnNpc3RlbnQsIG1hdGhlbWF0aWNhbGx5CiAgICByaWdvcm91cywgYW5kIGdlbmVyYWwgc2V0IG9mIHB1bHNlIHRlcm1zIHdoaWNoIGFyZSBhcHBsaWNhYmxlIHRvOiBoeXBvdGhldGljYWwKICAgIGFuZCBwcmFjdGljYWwgcHVsc2VzIHJlZ2FyZGxlc3Mgb2YgYWNjdXJhY3kgb3IgcHJlY2lzaW9uOyB0byBhIHdpZGUgcmFuZ2Ugb2YgdGVjaG5vbG9naWVzCiAgICBhbmQgZGlzY2lwbGluZXM7IGFuZCwgaW4gYSBtZWFzdXJlbWVudCBzaXR1YXRpb24sIHJlZ2FyZGxlc3Mgb2YgdGhlIG1lYW5zIG9mIG1lYXN1cmVtZW50CiAgICBvciB0aGUgbWVhbnMgZm9yIHdhdmVmb3JtIGV2YWx1YXRpb24gZW1wbG95ZWQuPDxFVFg+PicKICBsYW5ndWFnZToKICAtIGVuCiAgc2NyaXB0OgogIC0gTGF0bgogIGZvcm1hdDogdGV4dC9wbGFpbgpkb2NzdGF0dXM6CiAgc3RhZ2U6CiAgICB2YWx1ZTogd2l0aGRyYXduCmNvcHlyaWdodDoKLSBvd25lcjoKICAtIG5hbWU6CiAgICAtIGNvbnRlbnQ6IEluc3RpdHV0ZSBvZiBFbGVjdHJpY2FsIGFuZCBFbGVjdHJvbmljcyBFbmdpbmVlcnMKICAgIGFiYnJldmlhdGlvbjoKICAgICAgY29udGVudDogSUVFRQogICAgdXJsOiBodHRwOi8vd3d3LmllZWUub3JnCiAgZnJvbTogJzE5NzcnCmtleXdvcmQ6Ci0gY29udGVudDogTWVhc3VyZW1lbnQgc3RhbmRhcmRzCi0gY29udGVudDogVGVybWlub2xvZ3kKLSBjb250ZW50OiBQdWxzZSBjaXJjdWl0cwotIGNvbnRlbnQ6IFB1bHNlIGdlbmVyYXRpb24KLSBjb250ZW50OiBTdGFuZGFyZHMKZG9jdHlwZTogc3RhbmRhcmQKZWRpdG9yaWFsZ3JvdXA6CiAgY29tbWl0dGVlOgogIC0gSW50ZXJuYXRpb25hbCBFbGVjdHJvdGVjaG5pY2FsIENvbW1pc3Npb24gVGVjaG5pY2FsIENvbW1pdHRlZSA2NgppY3M6Ci0gY29kZTogMDEuMDQwLjE3CiAgdGV4dDogTWV0cm9sb2d5IGFuZCBtZWFzdXJlbWVudC4gUGh5c2ljYWwgcGhlbm9tZW5hIChWb2NhYnVsYXJpZXMpCi0gY29kZTogMTcuMjIwLjIwCiAgdGV4dDogTWVhc3VyZW1lbnQgb2YgZWxlY3RyaWNhbCBhbmQgbWFnbmV0aWMgcXVhbnRpdGllcwpleHQ6CiAgc2NoZW1hLXZlcnNpb246IHYxLjAuMAogIHN0YW5kYXJkX3N0YXR1czogSW5hY3RpdmUKICBzdGFuZGFyZF9tb2RpZmllZDogV2l0aGRyYXduCiAgcHVic3RhdHVzOiBBY3RpdmUKICBob2xkc3RhdHVzOiBQdWJsaXNoCg==
  recorded_at: Thu, 28 Dec 2023 14:25:51 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/relaton/relaton-data-ieee/main/data/IEEE_194-1977.yaml
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.7.12
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - keep-alive
      Content-Length:
      - '2578'
      Cache-Control:
      - max-age=300
      Content-Security-Policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      Content-Type:
      - text/plain; charset=utf-8
      Etag:
      - W/"9f966dcdbec1bd6766559aabbd7855c1a6e82a91dc2e64627df824df95478b99"
      Strict-Transport-Security:
      - max-age=31536000
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      X-Xss-Protection:
      - 1; mode=block
      X-Github-Request-Id:
      - 8C50:33900E:9F502:C06E9:658D5008
      Accept-Ranges:
      - bytes
      Date:
      - Thu, 28 Dec 2023 14:25:51 GMT
      Via:
      - 1.1 varnish
      X-Served-By:
      - cache-mel11257-MEL
      X-Cache:
      - HIT
      X-Cache-Hits:
      - '1'
      X-Timer:
      - S1703773552.891923,VS0,VE14
      Vary:
      - Authorization,Accept-Encoding,Origin
      Access-Control-Allow-Origin:
      - "*"
      Cross-Origin-Resource-Policy:
      - cross-origin
      X-Fastly-Request-Id:
      - cb53b7b27ae4ee0492c3d346688d607d8d33fd15
      Expires:
      - Thu, 28 Dec 2023 14:30:51 GMT
      Source-Age:
      - '0'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        LS0tCnNjaGVtYS12ZXJzaW9uOiB2MS4yLjMKaWQ6IElFRUUxOTQtMTk3Nwp0aXRsZToKLSBjb250ZW50OiBJRUVFIFN0YW5kYXJkIFB1bHNlIFRlcm1zIGFuZCBEZWZpbml0aW9ucwogIGZvcm1hdDogdGV4dC9wbGFpbgogIHR5cGU6IG1haW4KbGluazoKLSBjb250ZW50OiBodHRwczovL2llZWV4cGxvcmUuaWVlZS5vcmcvZG9jdW1lbnQvMjkwMTUKICB0eXBlOiBzcmMKdHlwZTogc3RhbmRhcmQKZG9jaWQ6Ci0gaWQ6IElFRUUgMTk0LTE5NzcKICB0eXBlOiBJRUVFCiAgcHJpbWFyeTogdHJ1ZQotIGlkOiBJRUVFIDE5NOKEoi0xOTc3CiAgdHlwZTogSUVFRQogIHNjb3BlOiB0cmFkZW1hcmsKICBwcmltYXJ5OiB0cnVlCi0gaWQ6IDAtNzM4MS00MzUwLTIKICB0eXBlOiBJU0JOCi0gaWQ6IDEwLjExMDkvSUVFRVNURC4xOTc3LjgxMDk4CiAgdHlwZTogRE9JCmRvY251bWJlcjogSUVFRSAxOTQtMTk3NwpkYXRlOgotIHR5cGU6IGNyZWF0ZWQKICB2YWx1ZTogJzE5NzcnCi0gdHlwZTogcHVibGlzaGVkCiAgdmFsdWU6ICcyMDAyLTEyLTEwJwotIHR5cGU6IGlzc3VlZAogIHZhbHVlOiAnMTk3NS0wMi0xNycKY29udHJpYnV0b3I6Ci0gb3JnYW5pemF0aW9uOgogICAgbmFtZToKICAgIC0gY29udGVudDogSW5zdGl0dXRlIG9mIEVsZWN0cmljYWwgYW5kIEVsZWN0cm9uaWNzIEVuZ2luZWVycwogICAgYWJicmV2aWF0aW9uOgogICAgICBjb250ZW50OiBJRUVFCiAgICB1cmw6IGh0dHA6Ly93d3cuaWVlZS5vcmcKICAgIGNvbnRhY3Q6CiAgICAtIGFkZHJlc3M6CiAgICAgICAgY2l0eTogTmV3IFlvcmsKICAgICAgICBjb3VudHJ5OiBVU0EKICByb2xlOgogIC0gdHlwZTogcHVibGlzaGVyCnJldmRhdGU6ICcyMDAyLTEyLTEwJwpsYW5ndWFnZToKLSBlbgpzY3JpcHQ6Ci0gTGF0bgphYnN0cmFjdDoKLSBjb250ZW50OiAnVGhpcyBzdGFuZGFyZCBwcm92aWRlcyBmdW5kYW1lbnRhbCBkZWZpbml0aW9ucyBmb3IgZ2VuZXJhbCB1c2UgaW4gdGltZQogICAgZG9tYWluIHB1bHNlIHRlY2hub2xvZ3kuIEl0IGRlZmluZXMgdGVybXMgZm9yIHB1bHNlIHBoZW5vbWVuYSBhbmQgcHVsc2UgcGFyYW1ldGVycwogICAgd2hpY2ggYXJlIHByZXJlcXVpc2l0ZSB0bzogZWZmaWNpZW50IGNvbW11bmljYXRpb24gb2YgdGVjaG5pY2FsIGluZm9ybWF0aW9uOyBzdGFuZGFyZHMKICAgIGZvciBtZXRob2RzIG9mIHB1bHNlIHBhcmFtZXRlciBtZWFzdXJlbWVudDsgc3RhbmRhcmRzIGZvciBwdWxzZSBhcHBhcmF0dXM7IGFuZAogICAgc3RhbmRhcmRzIGZvciBhcHBhcmF0dXMgd2hpY2ggZW1wbG95cyBwdWxzZSB0ZWNobmlxdWVzLiBXaXRoIGl0cyBzY29wZSwgdGhlIG9iamVjdAogICAgb2YgdGhpcyBzdGFuZGFyZCBpcyB0aGUgZGVmaW5pdGlvbiBvZiBhbiBpbnRlcm5hbGx5IGNvbnNpc3RlbnQsIG1hdGhlbWF0aWNhbGx5CiAgICByaWdvcm91cywgYW5kIGdlbmVyYWwgc2V0IG9mIHB1bHNlIHRlcm1zIHdoaWNoIGFyZSBhcHBsaWNhYmxlIHRvOiBoeXBvdGhldGljYWwKICAgIGFuZCBwcmFjdGljYWwgcHVsc2VzIHJlZ2FyZGxlc3Mgb2YgYWNjdXJhY3kgb3IgcHJlY2lzaW9uOyB0byBhIHdpZGUgcmFuZ2Ugb2YgdGVjaG5vbG9naWVzCiAgICBhbmQgZGlzY2lwbGluZXM7IGFuZCwgaW4gYSBtZWFzdXJlbWVudCBzaXR1YXRpb24sIHJlZ2FyZGxlc3Mgb2YgdGhlIG1lYW5zIG9mIG1lYXN1cmVtZW50CiAgICBvciB0aGUgbWVhbnMgZm9yIHdhdmVmb3JtIGV2YWx1YXRpb24gZW1wbG95ZWQuPDxFVFg+PicKICBsYW5ndWFnZToKICAtIGVuCiAgc2NyaXB0OgogIC0gTGF0bgogIGZvcm1hdDogdGV4dC9wbGFpbgpkb2NzdGF0dXM6CiAgc3RhZ2U6CiAgICB2YWx1ZTogd2l0aGRyYXduCmNvcHlyaWdodDoKLSBvd25lcjoKICAtIG5hbWU6CiAgICAtIGNvbnRlbnQ6IEluc3RpdHV0ZSBvZiBFbGVjdHJpY2FsIGFuZCBFbGVjdHJvbmljcyBFbmdpbmVlcnMKICAgIGFiYnJldmlhdGlvbjoKICAgICAgY29udGVudDogSUVFRQogICAgdXJsOiBodHRwOi8vd3d3LmllZWUub3JnCiAgZnJvbTogJzE5NzcnCmtleXdvcmQ6Ci0gY29udGVudDogTWVhc3VyZW1lbnQgc3RhbmRhcmRzCi0gY29udGVudDogVGVybWlub2xvZ3kKLSBjb250ZW50OiBQdWxzZSBjaXJjdWl0cwotIGNvbnRlbnQ6IFB1bHNlIGdlbmVyYXRpb24KLSBjb250ZW50OiBTdGFuZGFyZHMKZG9jdHlwZTogc3RhbmRhcmQKZWRpdG9yaWFsZ3JvdXA6CiAgY29tbWl0dGVlOgogIC0gSW50ZXJuYXRpb25hbCBFbGVjdHJvdGVjaG5pY2FsIENvbW1pc3Npb24gVGVjaG5pY2FsIENvbW1pdHRlZSA2NgppY3M6Ci0gY29kZTogMDEuMDQwLjE3CiAgdGV4dDogTWV0cm9sb2d5IGFuZCBtZWFzdXJlbWVudC4gUGh5c2ljYWwgcGhlbm9tZW5hIChWb2NhYnVsYXJpZXMpCi0gY29kZTogMTcuMjIwLjIwCiAgdGV4dDogTWVhc3VyZW1lbnQgb2YgZWxlY3RyaWNhbCBhbmQgbWFnbmV0aWMgcXVhbnRpdGllcwpleHQ6CiAgc2NoZW1hLXZlcnNpb246IHYxLjAuMAogIHN0YW5kYXJkX3N0YXR1czogSW5hY3RpdmUKICBzdGFuZGFyZF9tb2RpZmllZDogV2l0aGRyYXduCiAgcHVic3RhdHVzOiBBY3RpdmUKICBob2xkc3RhdHVzOiBQdWJsaXNoCg==
  recorded_at: Thu, 28 Dec 2023 14:25:51 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/relaton/relaton-data-iec/main/data/iec_60050_1975.yaml
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - raw.githubusercontent.com
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - keep-alive
      Content-Length:
      - '1508'
      Cache-Control:
      - max-age=300
      Content-Security-Policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      Content-Type:
      - text/plain; charset=utf-8
      Etag:
      - W/"4c99b2353fc7ad9b9d1efc2464de4372d1438dbf9c9d23e76cee5dc7a91c2847"
      Strict-Transport-Security:
      - max-age=31536000
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      X-Xss-Protection:
      - 1; mode=block
      X-Github-Request-Id:
      - 49E4:342C54:BF61A:E85DC:658D7642
      Accept-Ranges:
      - bytes
      Date:
      - Thu, 28 Dec 2023 14:25:51 GMT
      Via:
      - 1.1 varnish
      X-Served-By:
      - cache-mel11263-MEL
      X-Cache:
      - HIT
      X-Cache-Hits:
      - '1'
      X-Timer:
      - S1703773552.708328,VS0,VE289
      Vary:
      - Authorization,Accept-Encoding,Origin
      Access-Control-Allow-Origin:
      - "*"
      Cross-Origin-Resource-Policy:
      - cross-origin
      X-Fastly-Request-Id:
      - 50a6330a25dc6a0fa1dcc853766936048ea02d29
      Expires:
      - Thu, 28 Dec 2023 14:30:51 GMT
      Source-Age:
      - '0'
    body:
      encoding: ASCII-8BIT
      string: |
        ---
        schema-version: v1.2.3
        id: IEC60050-1975
        title:
        - content: International Electrotechnical Vocabulary (IEV) - Index
          language:
          - en
          script:
          - Latn
          format: text/plain
          type: main
        - content: Vocabulaire Electrotechnique International (IEV) - Index
          language:
          - fr
          script:
          - Latn
          format: text/plain
          type: main
        link:
        - content: https://webstore.iec.ch/publication/12502
          type: src
        type: standard
        docid:
        - id: IEC 60050:1975
          type: IEC
          primary: true
        - id: 'urn:iec:std:iec:60050:1975-01:::'
          type: URN
        date:
        - type: published
          value: '1975-01-01'
        contributor:
        - organization:
            name:
            - content: International Electrotechnical Commission
            abbreviation:
              content: IEC
            url: www.iec.ch
          role:
          - type: publisher
        edition:
          content: '3'
        revdate: '1975-01-01'
        language:
        - en
        - fr
        script:
        - Latn
        docstatus:
          stage:
            value: REVISED
        copyright:
        - owner:
          - name:
            - content: International Electrotechnical Commission
            abbreviation:
              content: IEC
            url: www.iec.ch
          from: '1975'
        relation:
        - type: updates
          bibitem:
            id: IEC60050-1970
            type: standard
            docid:
            - id: IEC 60050:1970
              type: IEC
              primary: true
            formattedref:
              content: IEC 60050:1970
              format: text/plain
        place:
        - Geneva
        doctype: international-standard
        editorialgroup:
          technical_committee:
          - name: TC 1
            number: 1
            type: technicalCommittee
        structuredidentifier:
          project_number: '60050'
          type: IEC
        ext:
          schema-version: v1.0.0
        price_code: iec:M
  recorded_at: Thu, 28 Dec 2023 14:25:51 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/relaton/relaton-data-iec/main/data/iec_60050_1975.yaml
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - raw.githubusercontent.com
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - keep-alive
      Content-Length:
      - '1508'
      Cache-Control:
      - max-age=300
      Content-Security-Policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      Content-Type:
      - text/plain; charset=utf-8
      Etag:
      - W/"4c99b2353fc7ad9b9d1efc2464de4372d1438dbf9c9d23e76cee5dc7a91c2847"
      Strict-Transport-Security:
      - max-age=31536000
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      X-Xss-Protection:
      - 1; mode=block
      X-Github-Request-Id:
      - 49E4:342C54:BF61A:E85DC:658D7642
      Accept-Ranges:
      - bytes
      Date:
      - Thu, 28 Dec 2023 14:25:51 GMT
      Via:
      - 1.1 varnish
      X-Served-By:
      - cache-mel11228-MEL
      X-Cache:
      - HIT
      X-Cache-Hits:
      - '1'
      X-Timer:
      - S1703773552.708526,VS0,VE288
      Vary:
      - Authorization,Accept-Encoding,Origin
      Access-Control-Allow-Origin:
      - "*"
      Cross-Origin-Resource-Policy:
      - cross-origin
      X-Fastly-Request-Id:
      - b24e62a8b26a559cac0209bdb6ad4709028aefa4
      Expires:
      - Thu, 28 Dec 2023 14:30:51 GMT
      Source-Age:
      - '0'
    body:
      encoding: ASCII-8BIT
      string: |
        ---
        schema-version: v1.2.3
        id: IEC60050-1975
        title:
        - content: International Electrotechnical Vocabulary (IEV) - Index
          language:
          - en
          script:
          - Latn
          format: text/plain
          type: main
        - content: Vocabulaire Electrotechnique International (IEV) - Index
          language:
          - fr
          script:
          - Latn
          format: text/plain
          type: main
        link:
        - content: https://webstore.iec.ch/publication/12502
          type: src
        type: standard
        docid:
        - id: IEC 60050:1975
          type: IEC
          primary: true
        - id: 'urn:iec:std:iec:60050:1975-01:::'
          type: URN
        date:
        - type: published
          value: '1975-01-01'
        contributor:
        - organization:
            name:
            - content: International Electrotechnical Commission
            abbreviation:
              content: IEC
            url: www.iec.ch
          role:
          - type: publisher
        edition:
          content: '3'
        revdate: '1975-01-01'
        language:
        - en
        - fr
        script:
        - Latn
        docstatus:
          stage:
            value: REVISED
        copyright:
        - owner:
          - name:
            - content: International Electrotechnical Commission
            abbreviation:
              content: IEC
            url: www.iec.ch
          from: '1975'
        relation:
        - type: updates
          bibitem:
            id: IEC60050-1970
            type: standard
            docid:
            - id: IEC 60050:1970
              type: IEC
              primary: true
            formattedref:
              content: IEC 60050:1970
              format: text/plain
        place:
        - Geneva
        doctype: international-standard
        editorialgroup:
          technical_committee:
          - name: TC 1
            number: 1
            type: technicalCommittee
        structuredidentifier:
          project_number: '60050'
          type: IEC
        ext:
          schema-version: v1.0.0
        price_code: iec:M
  recorded_at: Thu, 28 Dec 2023 14:25:52 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/relaton/relaton-data-ieee/main/data/IEEE_43-2013_REDLINE.yaml
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.7.12
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - keep-alive
      Content-Length:
      - '4419'
      Cache-Control:
      - max-age=300
      Content-Security-Policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      Content-Type:
      - text/plain; charset=utf-8
      Etag:
      - W/"f860eb7acc971b6dcf9b7d5c036682d27927238255a06071492a6349f7075b65"
      Strict-Transport-Security:
      - max-age=31536000
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      X-Xss-Protection:
      - 1; mode=block
      X-Github-Request-Id:
      - 8D50:308DCC:CAEC7:F6C7D:658D8439
      Accept-Ranges:
      - bytes
      Date:
      - Thu, 28 Dec 2023 14:25:52 GMT
      Via:
      - 1.1 varnish
      X-Served-By:
      - cache-mel11248-MEL
      X-Cache:
      - HIT
      X-Cache-Hits:
      - '1'
      X-Timer:
      - S1703773552.782458,VS0,VE278
      Vary:
      - Authorization,Accept-Encoding,Origin
      Access-Control-Allow-Origin:
      - "*"
      Cross-Origin-Resource-Policy:
      - cross-origin
      X-Fastly-Request-Id:
      - 9bd107f64b94d2822b9e16f2ec5988833659171a
      Expires:
      - Thu, 28 Dec 2023 14:30:52 GMT
      Source-Age:
      - '0'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        LS0tCnNjaGVtYS12ZXJzaW9uOiB2MS4yLjMKaWQ6IElFRUU0My0yMDEzUmVkbGluZQp0aXRsZToKLSBjb250ZW50OiBJRUVFIFJlY29tbWVuZGVkIFByYWN0aWNlIGZvciBUZXN0aW5nIEluc3VsYXRpb24gUmVzaXN0YW5jZSBvZiBFbGVjdHJpYwogICAgTWFjaGluZXJ5CiAgZm9ybWF0OiB0ZXh0L3BsYWluCiAgdHlwZTogdGl0bGUtbWFpbgotIGNvbnRlbnQ6IElFRUUgUmVjb21tZW5kZWQgUHJhY3RpY2UgZm9yIFRlc3RpbmcgSW5zdWxhdGlvbiBSZXNpc3RhbmNlIG9mIEVsZWN0cmljCiAgICBNYWNoaW5lcnkgLSBSZWRsaW5lCiAgZm9ybWF0OiB0ZXh0L3BsYWluCiAgdHlwZTogbWFpbgpsaW5rOgotIGNvbnRlbnQ6IGh0dHBzOi8vaWVlZXhwbG9yZS5pZWVlLm9yZy9kb2N1bWVudC82Nzk5OTgzCiAgdHlwZTogc3JjCnR5cGU6IHN0YW5kYXJkCmRvY2lkOgotIGlkOiBJRUVFIDQzLTIwMTMgUmVkbGluZQogIHR5cGU6IElFRUUKICBwcmltYXJ5OiB0cnVlCi0gaWQ6IElFRUUgNDPihKItMjAxMyBSZWRsaW5lCiAgdHlwZTogSUVFRQogIHNjb3BlOiB0cmFkZW1hcmsKICBwcmltYXJ5OiB0cnVlCi0gaWQ6IDk3OC0wLTczODEtOTA5My04CiAgdHlwZTogSVNCTgpkb2NudW1iZXI6IElFRUUgNDMtMjAxMyBSZWRsaW5lCmRhdGU6Ci0gdHlwZTogY3JlYXRlZAogIHZhbHVlOiAnMjAxNCcKLSB0eXBlOiBwdWJsaXNoZWQKICB2YWx1ZTogJzIwMTQtMDQtMTcnCi0gdHlwZTogaXNzdWVkCiAgdmFsdWU6ICcyMDEzLTEyLTExJwpjb250cmlidXRvcjoKLSBvcmdhbml6YXRpb246CiAgICBuYW1lOgogICAgLSBjb250ZW50OiBJbnN0aXR1dGUgb2YgRWxlY3RyaWNhbCBhbmQgRWxlY3Ryb25pY3MgRW5naW5lZXJzCiAgICBhYmJyZXZpYXRpb246CiAgICAgIGNvbnRlbnQ6IElFRUUKICAgIHVybDogaHR0cDovL3d3dy5pZWVlLm9yZwogICAgY29udGFjdDoKICAgIC0gYWRkcmVzczoKICAgICAgICBjaXR5OiBOZXcgWW9yawogICAgICAgIGNvdW50cnk6IFVTQQogIHJvbGU6CiAgLSB0eXBlOiBwdWJsaXNoZXIKcmV2ZGF0ZTogJzIwMTQtMDQtMTcnCmxhbmd1YWdlOgotIGVuCnNjcmlwdDoKLSBMYXRuCmFic3RyYWN0OgotIGNvbnRlbnQ6IFRoZSBkYyB2b2x0YWdlIHRlc3RzIHByb2NlZHVyZXMgZm9yIHRoZSBtZWFzdXJlbWVudCBvZiB0aGUgaW5zdWxhdGlvbiByZXNpc3RhbmNlCiAgICBhbmQgcG9sYXJpemF0aW9uIGluZGV4IG9mIGluc3VsYXRlZCBzdGF0b3IsIGFuZCByb3RvciB3aW5kaW5ncyBhbmQgaG93IHRvIGludGVycHJldAogICAgdGhlIHJlc3VsdHMgYXJlIGRlc2NyaWJlZCBpbiB0aGlzIHJlY29tbWVuZGVkIHByYWN0aWNlLgogIGxhbmd1YWdlOgogIC0gZW4KICBzY3JpcHQ6CiAgLSBMYXRuCiAgZm9ybWF0OiB0ZXh0L3BsYWluCmNvcHlyaWdodDoKLSBvd25lcjoKICAtIG5hbWU6CiAgICAtIGNvbnRlbnQ6IEluc3RpdHV0ZSBvZiBFbGVjdHJpY2FsIGFuZCBFbGVjdHJvbmljcyBFbmdpbmVlcnMKICAgIGFiYnJldmlhdGlvbjoKICAgICAgY29udGVudDogSUVFRQogICAgdXJsOiBodHRwOi8vd3d3LmllZWUub3JnCiAgZnJvbTogJzIwMTQnCnJlbGF0aW9uOgotIHR5cGU6IHVwZGF0ZXMKICBiaWJpdGVtOgogICAgaWQ6IElFRUU0My0yMDAwCiAgICBkb2NpZDoKICAgIC0gaWQ6IElFRUUgNDMtMjAwMAogICAgICB0eXBlOiBJRUVFCiAgICAgIHByaW1hcnk6IHRydWUKICAgIGZvcm1hdHRlZHJlZjoKICAgICAgY29udGVudDogSUVFRSA0My0yMDAwCiAgICAgIGZvcm1hdDogdGV4dC9wbGFpbgogIGRlc2NyaXB0aW9uOgogICAgY29udGVudDogcmV2aXNlcwogICAgbGFuZ3VhZ2U6CiAgICAtIGVuCiAgICBzY3JpcHQ6CiAgICAtIExhdG4KICAgIGZvcm1hdDogdGV4dC9wbGFpbgotIHR5cGU6IHVwZGF0ZXMKICBiaWJpdGVtOgogICAgaWQ6IElFRUU0My0yMDAwCiAgICBkb2NpZDoKICAgIC0gaWQ6IElFRUUgNDMtMjAwMAogICAgICB0eXBlOiBJRUVFCiAgICAgIHByaW1hcnk6IHRydWUKICAgIGZvcm1hdHRlZHJlZjoKICAgICAgY29udGVudDogSUVFRSA0My0yMDAwCiAgICAgIGZvcm1hdDogdGV4dC9wbGFpbgogIGRlc2NyaXB0aW9uOgogICAgY29udGVudDogcmV2aXNlcwogICAgbGFuZ3VhZ2U6CiAgICAtIGVuCiAgICBzY3JpcHQ6CiAgICAtIExhdG4KICAgIGZvcm1hdDogdGV4dC9wbGFpbgotIHR5cGU6IHVwZGF0ZXMKICBiaWJpdGVtOgogICAgaWQ6IElFRUU0My0yMDAwCiAgICBkb2NpZDoKICAgIC0gaWQ6IElFRUUgNDMtMjAwMAogICAgICB0eXBlOiBJRUVFCiAgICAgIHByaW1hcnk6IHRydWUKICAgIGZvcm1hdHRlZHJlZjoKICAgICAgY29udGVudDogSUVFRSA0My0yMDAwCiAgICAgIGZvcm1hdDogdGV4dC9wbGFpbgogIGRlc2NyaXB0aW9uOgogICAgY29udGVudDogcmV2aXNlcwogICAgbGFuZ3VhZ2U6CiAgICAtIGVuCiAgICBzY3JpcHQ6CiAgICAtIExhdG4KICAgIGZvcm1hdDogdGV4dC9wbGFpbgotIHR5cGU6IHVwZGF0ZXMKICBiaWJpdGVtOgogICAgaWQ6IElFRUU0My0yMDAwCiAgICBkb2NpZDoKICAgIC0gaWQ6IElFRUUgNDMtMjAwMAogICAgICB0eXBlOiBJRUVFCiAgICAgIHByaW1hcnk6IHRydWUKICAgIGZvcm1hdHRlZHJlZjoKICAgICAgY29udGVudDogSUVFRSA0My0yMDAwCiAgICAgIGZvcm1hdDogdGV4dC9wbGFpbgogIGRlc2NyaXB0aW9uOgogICAgY29udGVudDogcmV2aXNlcwogICAgbGFuZ3VhZ2U6CiAgICAtIGVuCiAgICBzY3JpcHQ6CiAgICAtIExhdG4KICAgIGZvcm1hdDogdGV4dC9wbGFpbgotIHR5cGU6IHVwZGF0ZXMKICBiaWJpdGVtOgogICAgaWQ6IElFRUU0My0yMDAwCiAgICBkb2NpZDoKICAgIC0gaWQ6IElFRUUgNDMtMjAwMAogICAgICB0eXBlOiBJRUVFCiAgICAgIHByaW1hcnk6IHRydWUKICAgIGZvcm1hdHRlZHJlZjoKICAgICAgY29udGVudDogSUVFRSA0My0yMDAwCiAgICAgIGZvcm1hdDogdGV4dC9wbGFpbgogIGRlc2NyaXB0aW9uOgogICAgY29udGVudDogcmV2aXNlcwogICAgbGFuZ3VhZ2U6CiAgICAtIGVuCiAgICBzY3JpcHQ6CiAgICAtIExhdG4KICAgIGZvcm1hdDogdGV4dC9wbGFpbgotIHR5cGU6IHVwZGF0ZXMKICBiaWJpdGVtOgogICAgaWQ6IElFRUU0My0yMDAwCiAgICBkb2NpZDoKICAgIC0gaWQ6IElFRUUgNDMtMjAwMAogICAgICB0eXBlOiBJRUVFCiAgICAgIHByaW1hcnk6IHRydWUKICAgIGZvcm1hdHRlZHJlZjoKICAgICAgY29udGVudDogSUVFRSA0My0yMDAwCiAgICAgIGZvcm1hdDogdGV4dC9wbGFpbgogIGRlc2NyaXB0aW9uOgogICAgY29udGVudDogcmV2aXNlcwogICAgbGFuZ3VhZ2U6CiAgICAtIGVuCiAgICBzY3JpcHQ6CiAgICAtIExhdG4KICAgIGZvcm1hdDogdGV4dC9wbGFpbgotIHR5cGU6IHVwZGF0ZXMKICBiaWJpdGVtOgogICAgaWQ6IElFRUU0My0yMDAwCiAgICBkb2NpZDoKICAgIC0gaWQ6IElFRUUgNDMtMjAwMAogICAgICB0eXBlOiBJRUVFCiAgICAgIHByaW1hcnk6IHRydWUKICAgIGZvcm1hdHRlZHJlZjoKICAgICAgY29udGVudDogSUVFRSA0My0yMDAwCiAgICAgIGZvcm1hdDogdGV4dC9wbGFpbgogIGRlc2NyaXB0aW9uOgogICAgY29udGVudDogcmV2aXNlcwogICAgbGFuZ3VhZ2U6CiAgICAtIGVuCiAgICBzY3JpcHQ6CiAgICAtIExhdG4KICAgIGZvcm1hdDogdGV4dC9wbGFpbgprZXl3b3JkOgotIGNvbnRlbnQ6IElFRUUgc3RhbmRhcmRzCi0gY29udGVudDogRWxlY3Ryb21lY2hhbmljYWwgZGV2aWNlcwotIGNvbnRlbnQ6IEluc3VsYXRpb24KLSBjb250ZW50OiBSZXNpc3RhbmNlCi0gY29udGVudDogUG9sYXJpemF0aW9uCi0gY29udGVudDogU3RhdG9yIHdpbmRpbmdzCi0gY29udGVudDogVm9sdGFnZSBjb250cm9sCi0gY29udGVudDogQXJtYXR1cmUKLSBjb250ZW50OiBXaW5kaW5ncwotIGNvbnRlbnQ6IERDIG1vdG9ycwotIGNvbnRlbnQ6IGFybWF0dXJlIHdpbmRpbmcKLSBjb250ZW50OiBkYwotIGNvbnRlbnQ6IGZpZWxkIHdpbmRpbmcKLSBjb250ZW50OiBJRUVFIDQzKFRNKQotIGNvbnRlbnQ6IGluc3VsYXRlZAotIGNvbnRlbnQ6IGluc3VsYXRpb24gcmVzaXN0YW5jZQotIGNvbnRlbnQ6IHBvbGFyaXphdGlvbiBpbmRleAotIGNvbnRlbnQ6IHJvdG9yIHdpbmRpbmcKLSBjb250ZW50OiBzdGF0b3Igd2luZGluZwotIGNvbnRlbnQ6IHZvbHRhZ2UKZG9jdHlwZTogcmVkbGluZQplZGl0b3JpYWxncm91cDoKICBjb21taXR0ZWU6CiAgLSBFbGVjdHJpYyBNYWNoaW5lcnkgb2YgdGhlIElFRUUgUG93ZXIgYW5kIEVuZXJneSBTb2NpZXR5CmljczoKLSBjb2RlOiAyOS4xNjAuMDEKICB0ZXh0OiBSb3RhdGluZyBtYWNoaW5lcnkgaW4gZ2VuZXJhbApleHQ6CiAgc2NoZW1hLXZlcnNpb246IHYxLjAuMAogIHN0YW5kYXJkX3N0YXR1czogQWN0aXZlCiAgc3RhbmRhcmRfbW9kaWZpZWQ6IFJlZGxpbmUKICBwdWJzdGF0dXM6IEFjdGl2ZQogIGhvbGRzdGF0dXM6IFB1Ymxpc2gK
  recorded_at: Thu, 28 Dec 2023 14:25:52 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/relaton/relaton-data-ieee/main/data/IEEE_43-2013_REDLINE.yaml
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.7.12
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - keep-alive
      Content-Length:
      - '4419'
      Cache-Control:
      - max-age=300
      Content-Security-Policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      Content-Type:
      - text/plain; charset=utf-8
      Etag:
      - W/"f860eb7acc971b6dcf9b7d5c036682d27927238255a06071492a6349f7075b65"
      Strict-Transport-Security:
      - max-age=31536000
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      X-Xss-Protection:
      - 1; mode=block
      X-Github-Request-Id:
      - 8D50:308DCC:CAEC7:F6C7D:658D8439
      Accept-Ranges:
      - bytes
      Date:
      - Thu, 28 Dec 2023 14:25:52 GMT
      Via:
      - 1.1 varnish
      X-Served-By:
      - cache-mel11237-MEL
      X-Cache:
      - HIT
      X-Cache-Hits:
      - '1'
      X-Timer:
      - S1703773552.891239,VS0,VE169
      Vary:
      - Authorization,Accept-Encoding,Origin
      Access-Control-Allow-Origin:
      - "*"
      Cross-Origin-Resource-Policy:
      - cross-origin
      X-Fastly-Request-Id:
      - 75ca062bed44c2df6fd19a8a19b0c7a8c6037551
      Expires:
      - Thu, 28 Dec 2023 14:30:52 GMT
      Source-Age:
      - '0'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        LS0tCnNjaGVtYS12ZXJzaW9uOiB2MS4yLjMKaWQ6IElFRUU0My0yMDEzUmVkbGluZQp0aXRsZToKLSBjb250ZW50OiBJRUVFIFJlY29tbWVuZGVkIFByYWN0aWNlIGZvciBUZXN0aW5nIEluc3VsYXRpb24gUmVzaXN0YW5jZSBvZiBFbGVjdHJpYwogICAgTWFjaGluZXJ5CiAgZm9ybWF0OiB0ZXh0L3BsYWluCiAgdHlwZTogdGl0bGUtbWFpbgotIGNvbnRlbnQ6IElFRUUgUmVjb21tZW5kZWQgUHJhY3RpY2UgZm9yIFRlc3RpbmcgSW5zdWxhdGlvbiBSZXNpc3RhbmNlIG9mIEVsZWN0cmljCiAgICBNYWNoaW5lcnkgLSBSZWRsaW5lCiAgZm9ybWF0OiB0ZXh0L3BsYWluCiAgdHlwZTogbWFpbgpsaW5rOgotIGNvbnRlbnQ6IGh0dHBzOi8vaWVlZXhwbG9yZS5pZWVlLm9yZy9kb2N1bWVudC82Nzk5OTgzCiAgdHlwZTogc3JjCnR5cGU6IHN0YW5kYXJkCmRvY2lkOgotIGlkOiBJRUVFIDQzLTIwMTMgUmVkbGluZQogIHR5cGU6IElFRUUKICBwcmltYXJ5OiB0cnVlCi0gaWQ6IElFRUUgNDPihKItMjAxMyBSZWRsaW5lCiAgdHlwZTogSUVFRQogIHNjb3BlOiB0cmFkZW1hcmsKICBwcmltYXJ5OiB0cnVlCi0gaWQ6IDk3OC0wLTczODEtOTA5My04CiAgdHlwZTogSVNCTgpkb2NudW1iZXI6IElFRUUgNDMtMjAxMyBSZWRsaW5lCmRhdGU6Ci0gdHlwZTogY3JlYXRlZAogIHZhbHVlOiAnMjAxNCcKLSB0eXBlOiBwdWJsaXNoZWQKICB2YWx1ZTogJzIwMTQtMDQtMTcnCi0gdHlwZTogaXNzdWVkCiAgdmFsdWU6ICcyMDEzLTEyLTExJwpjb250cmlidXRvcjoKLSBvcmdhbml6YXRpb246CiAgICBuYW1lOgogICAgLSBjb250ZW50OiBJbnN0aXR1dGUgb2YgRWxlY3RyaWNhbCBhbmQgRWxlY3Ryb25pY3MgRW5naW5lZXJzCiAgICBhYmJyZXZpYXRpb246CiAgICAgIGNvbnRlbnQ6IElFRUUKICAgIHVybDogaHR0cDovL3d3dy5pZWVlLm9yZwogICAgY29udGFjdDoKICAgIC0gYWRkcmVzczoKICAgICAgICBjaXR5OiBOZXcgWW9yawogICAgICAgIGNvdW50cnk6IFVTQQogIHJvbGU6CiAgLSB0eXBlOiBwdWJsaXNoZXIKcmV2ZGF0ZTogJzIwMTQtMDQtMTcnCmxhbmd1YWdlOgotIGVuCnNjcmlwdDoKLSBMYXRuCmFic3RyYWN0OgotIGNvbnRlbnQ6IFRoZSBkYyB2b2x0YWdlIHRlc3RzIHByb2NlZHVyZXMgZm9yIHRoZSBtZWFzdXJlbWVudCBvZiB0aGUgaW5zdWxhdGlvbiByZXNpc3RhbmNlCiAgICBhbmQgcG9sYXJpemF0aW9uIGluZGV4IG9mIGluc3VsYXRlZCBzdGF0b3IsIGFuZCByb3RvciB3aW5kaW5ncyBhbmQgaG93IHRvIGludGVycHJldAogICAgdGhlIHJlc3VsdHMgYXJlIGRlc2NyaWJlZCBpbiB0aGlzIHJlY29tbWVuZGVkIHByYWN0aWNlLgogIGxhbmd1YWdlOgogIC0gZW4KICBzY3JpcHQ6CiAgLSBMYXRuCiAgZm9ybWF0OiB0ZXh0L3BsYWluCmNvcHlyaWdodDoKLSBvd25lcjoKICAtIG5hbWU6CiAgICAtIGNvbnRlbnQ6IEluc3RpdHV0ZSBvZiBFbGVjdHJpY2FsIGFuZCBFbGVjdHJvbmljcyBFbmdpbmVlcnMKICAgIGFiYnJldmlhdGlvbjoKICAgICAgY29udGVudDogSUVFRQogICAgdXJsOiBodHRwOi8vd3d3LmllZWUub3JnCiAgZnJvbTogJzIwMTQnCnJlbGF0aW9uOgotIHR5cGU6IHVwZGF0ZXMKICBiaWJpdGVtOgogICAgaWQ6IElFRUU0My0yMDAwCiAgICBkb2NpZDoKICAgIC0gaWQ6IElFRUUgNDMtMjAwMAogICAgICB0eXBlOiBJRUVFCiAgICAgIHByaW1hcnk6IHRydWUKICAgIGZvcm1hdHRlZHJlZjoKICAgICAgY29udGVudDogSUVFRSA0My0yMDAwCiAgICAgIGZvcm1hdDogdGV4dC9wbGFpbgogIGRlc2NyaXB0aW9uOgogICAgY29udGVudDogcmV2aXNlcwogICAgbGFuZ3VhZ2U6CiAgICAtIGVuCiAgICBzY3JpcHQ6CiAgICAtIExhdG4KICAgIGZvcm1hdDogdGV4dC9wbGFpbgotIHR5cGU6IHVwZGF0ZXMKICBiaWJpdGVtOgogICAgaWQ6IElFRUU0My0yMDAwCiAgICBkb2NpZDoKICAgIC0gaWQ6IElFRUUgNDMtMjAwMAogICAgICB0eXBlOiBJRUVFCiAgICAgIHByaW1hcnk6IHRydWUKICAgIGZvcm1hdHRlZHJlZjoKICAgICAgY29udGVudDogSUVFRSA0My0yMDAwCiAgICAgIGZvcm1hdDogdGV4dC9wbGFpbgogIGRlc2NyaXB0aW9uOgogICAgY29udGVudDogcmV2aXNlcwogICAgbGFuZ3VhZ2U6CiAgICAtIGVuCiAgICBzY3JpcHQ6CiAgICAtIExhdG4KICAgIGZvcm1hdDogdGV4dC9wbGFpbgotIHR5cGU6IHVwZGF0ZXMKICBiaWJpdGVtOgogICAgaWQ6IElFRUU0My0yMDAwCiAgICBkb2NpZDoKICAgIC0gaWQ6IElFRUUgNDMtMjAwMAogICAgICB0eXBlOiBJRUVFCiAgICAgIHByaW1hcnk6IHRydWUKICAgIGZvcm1hdHRlZHJlZjoKICAgICAgY29udGVudDogSUVFRSA0My0yMDAwCiAgICAgIGZvcm1hdDogdGV4dC9wbGFpbgogIGRlc2NyaXB0aW9uOgogICAgY29udGVudDogcmV2aXNlcwogICAgbGFuZ3VhZ2U6CiAgICAtIGVuCiAgICBzY3JpcHQ6CiAgICAtIExhdG4KICAgIGZvcm1hdDogdGV4dC9wbGFpbgotIHR5cGU6IHVwZGF0ZXMKICBiaWJpdGVtOgogICAgaWQ6IElFRUU0My0yMDAwCiAgICBkb2NpZDoKICAgIC0gaWQ6IElFRUUgNDMtMjAwMAogICAgICB0eXBlOiBJRUVFCiAgICAgIHByaW1hcnk6IHRydWUKICAgIGZvcm1hdHRlZHJlZjoKICAgICAgY29udGVudDogSUVFRSA0My0yMDAwCiAgICAgIGZvcm1hdDogdGV4dC9wbGFpbgogIGRlc2NyaXB0aW9uOgogICAgY29udGVudDogcmV2aXNlcwogICAgbGFuZ3VhZ2U6CiAgICAtIGVuCiAgICBzY3JpcHQ6CiAgICAtIExhdG4KICAgIGZvcm1hdDogdGV4dC9wbGFpbgotIHR5cGU6IHVwZGF0ZXMKICBiaWJpdGVtOgogICAgaWQ6IElFRUU0My0yMDAwCiAgICBkb2NpZDoKICAgIC0gaWQ6IElFRUUgNDMtMjAwMAogICAgICB0eXBlOiBJRUVFCiAgICAgIHByaW1hcnk6IHRydWUKICAgIGZvcm1hdHRlZHJlZjoKICAgICAgY29udGVudDogSUVFRSA0My0yMDAwCiAgICAgIGZvcm1hdDogdGV4dC9wbGFpbgogIGRlc2NyaXB0aW9uOgogICAgY29udGVudDogcmV2aXNlcwogICAgbGFuZ3VhZ2U6CiAgICAtIGVuCiAgICBzY3JpcHQ6CiAgICAtIExhdG4KICAgIGZvcm1hdDogdGV4dC9wbGFpbgotIHR5cGU6IHVwZGF0ZXMKICBiaWJpdGVtOgogICAgaWQ6IElFRUU0My0yMDAwCiAgICBkb2NpZDoKICAgIC0gaWQ6IElFRUUgNDMtMjAwMAogICAgICB0eXBlOiBJRUVFCiAgICAgIHByaW1hcnk6IHRydWUKICAgIGZvcm1hdHRlZHJlZjoKICAgICAgY29udGVudDogSUVFRSA0My0yMDAwCiAgICAgIGZvcm1hdDogdGV4dC9wbGFpbgogIGRlc2NyaXB0aW9uOgogICAgY29udGVudDogcmV2aXNlcwogICAgbGFuZ3VhZ2U6CiAgICAtIGVuCiAgICBzY3JpcHQ6CiAgICAtIExhdG4KICAgIGZvcm1hdDogdGV4dC9wbGFpbgotIHR5cGU6IHVwZGF0ZXMKICBiaWJpdGVtOgogICAgaWQ6IElFRUU0My0yMDAwCiAgICBkb2NpZDoKICAgIC0gaWQ6IElFRUUgNDMtMjAwMAogICAgICB0eXBlOiBJRUVFCiAgICAgIHByaW1hcnk6IHRydWUKICAgIGZvcm1hdHRlZHJlZjoKICAgICAgY29udGVudDogSUVFRSA0My0yMDAwCiAgICAgIGZvcm1hdDogdGV4dC9wbGFpbgogIGRlc2NyaXB0aW9uOgogICAgY29udGVudDogcmV2aXNlcwogICAgbGFuZ3VhZ2U6CiAgICAtIGVuCiAgICBzY3JpcHQ6CiAgICAtIExhdG4KICAgIGZvcm1hdDogdGV4dC9wbGFpbgprZXl3b3JkOgotIGNvbnRlbnQ6IElFRUUgc3RhbmRhcmRzCi0gY29udGVudDogRWxlY3Ryb21lY2hhbmljYWwgZGV2aWNlcwotIGNvbnRlbnQ6IEluc3VsYXRpb24KLSBjb250ZW50OiBSZXNpc3RhbmNlCi0gY29udGVudDogUG9sYXJpemF0aW9uCi0gY29udGVudDogU3RhdG9yIHdpbmRpbmdzCi0gY29udGVudDogVm9sdGFnZSBjb250cm9sCi0gY29udGVudDogQXJtYXR1cmUKLSBjb250ZW50OiBXaW5kaW5ncwotIGNvbnRlbnQ6IERDIG1vdG9ycwotIGNvbnRlbnQ6IGFybWF0dXJlIHdpbmRpbmcKLSBjb250ZW50OiBkYwotIGNvbnRlbnQ6IGZpZWxkIHdpbmRpbmcKLSBjb250ZW50OiBJRUVFIDQzKFRNKQotIGNvbnRlbnQ6IGluc3VsYXRlZAotIGNvbnRlbnQ6IGluc3VsYXRpb24gcmVzaXN0YW5jZQotIGNvbnRlbnQ6IHBvbGFyaXphdGlvbiBpbmRleAotIGNvbnRlbnQ6IHJvdG9yIHdpbmRpbmcKLSBjb250ZW50OiBzdGF0b3Igd2luZGluZwotIGNvbnRlbnQ6IHZvbHRhZ2UKZG9jdHlwZTogcmVkbGluZQplZGl0b3JpYWxncm91cDoKICBjb21taXR0ZWU6CiAgLSBFbGVjdHJpYyBNYWNoaW5lcnkgb2YgdGhlIElFRUUgUG93ZXIgYW5kIEVuZXJneSBTb2NpZXR5CmljczoKLSBjb2RlOiAyOS4xNjAuMDEKICB0ZXh0OiBSb3RhdGluZyBtYWNoaW5lcnkgaW4gZ2VuZXJhbApleHQ6CiAgc2NoZW1hLXZlcnNpb246IHYxLjAuMAogIHN0YW5kYXJkX3N0YXR1czogQWN0aXZlCiAgc3RhbmRhcmRfbW9kaWZpZWQ6IFJlZGxpbmUKICBwdWJzdGF0dXM6IEFjdGl2ZQogIGhvbGRzdGF0dXM6IFB1Ymxpc2gK
  recorded_at: Thu, 28 Dec 2023 14:25:52 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/relaton/relaton-data-w3c/main/data/xml.yaml
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - raw.githubusercontent.com
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - keep-alive
      Content-Length:
      - '919'
      Cache-Control:
      - max-age=300
      Content-Security-Policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      Content-Type:
      - text/plain; charset=utf-8
      Etag:
      - W/"c15cda5552a5c291d9f55dfc55315172f8317df6b35f4ff7e9d1a3acfc9d184e"
      Strict-Transport-Security:
      - max-age=31536000
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      X-Xss-Protection:
      - 1; mode=block
      X-Github-Request-Id:
      - 77E6:342C54:C4292:EE4FA:658D7BEB
      Accept-Ranges:
      - bytes
      Date:
      - Thu, 28 Dec 2023 14:25:52 GMT
      Via:
      - 1.1 varnish
      X-Served-By:
      - cache-mel11272-MEL
      X-Cache:
      - HIT
      X-Cache-Hits:
      - '1'
      X-Timer:
      - S1703773552.890912,VS0,VE304
      Vary:
      - Authorization,Accept-Encoding,Origin
      Access-Control-Allow-Origin:
      - "*"
      Cross-Origin-Resource-Policy:
      - cross-origin
      X-Fastly-Request-Id:
      - b5a97cf72e99e92d0a168eb0fe19e0bc01aa1f93
      Expires:
      - Thu, 28 Dec 2023 14:30:52 GMT
      Source-Age:
      - '0'
    body:
      encoding: ASCII-8BIT
      string: |
        ---
        schema-version: v1.2.7
        id: W3Cxml
        title:
        - content: Extensible Markup Language (XML) 1.0 (Fifth Edition)
          format: text/plain
        link:
        - content: https://www.w3.org/TR/xml/
          type: src
        type: standard
        docid:
        - id: W3C xml
          type: W3C
          primary: true
        docnumber: xml
        language:
        - en
        script:
        - Latn
        docstatus:
          stage:
            value: recommendation
        relation:
        - type: hasEdition
          bibitem:
            id: W3CREC-xml-20060816
            docid:
            - id: W3C REC-xml-20060816
              type: W3C
              primary: true
            formattedref:
              content: W3C REC-xml-20060816
              format: text/plain
        - type: instanceOf
          bibitem:
            id: W3CREC-xml-20081126
            docid:
            - id: W3C REC-xml-20081126
              type: W3C
              primary: true
            formattedref:
              content: W3C REC-xml-20081126
              format: text/plain
        series:
        - title:
            content: W3C REC
            format: text/plain
          number: xml
        doctype:
          type: technicalReport
        ext:
          schema-version: v1.0.0
  recorded_at: Thu, 28 Dec 2023 14:25:52 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/relaton/relaton-data-w3c/main/data/xml.yaml
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - raw.githubusercontent.com
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - keep-alive
      Content-Length:
      - '919'
      Cache-Control:
      - max-age=300
      Content-Security-Policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      Content-Type:
      - text/plain; charset=utf-8
      Etag:
      - W/"c15cda5552a5c291d9f55dfc55315172f8317df6b35f4ff7e9d1a3acfc9d184e"
      Strict-Transport-Security:
      - max-age=31536000
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      X-Xss-Protection:
      - 1; mode=block
      X-Github-Request-Id:
      - 77E6:342C54:C4292:EE4FA:658D7BEB
      Accept-Ranges:
      - bytes
      Date:
      - Thu, 28 Dec 2023 14:25:52 GMT
      Via:
      - 1.1 varnish
      X-Served-By:
      - cache-mel11234-MEL
      X-Cache:
      - HIT
      X-Cache-Hits:
      - '1'
      X-Timer:
      - S1703773552.994947,VS0,VE200
      Vary:
      - Authorization,Accept-Encoding,Origin
      Access-Control-Allow-Origin:
      - "*"
      Cross-Origin-Resource-Policy:
      - cross-origin
      X-Fastly-Request-Id:
      - 8156bd20ef7b83c5892ccfdfc13e42caf4b0b559
      Expires:
      - Thu, 28 Dec 2023 14:30:52 GMT
      Source-Age:
      - '0'
    body:
      encoding: ASCII-8BIT
      string: |
        ---
        schema-version: v1.2.7
        id: W3Cxml
        title:
        - content: Extensible Markup Language (XML) 1.0 (Fifth Edition)
          format: text/plain
        link:
        - content: https://www.w3.org/TR/xml/
          type: src
        type: standard
        docid:
        - id: W3C xml
          type: W3C
          primary: true
        docnumber: xml
        language:
        - en
        script:
        - Latn
        docstatus:
          stage:
            value: recommendation
        relation:
        - type: hasEdition
          bibitem:
            id: W3CREC-xml-20060816
            docid:
            - id: W3C REC-xml-20060816
              type: W3C
              primary: true
            formattedref:
              content: W3C REC-xml-20060816
              format: text/plain
        - type: instanceOf
          bibitem:
            id: W3CREC-xml-20081126
            docid:
            - id: W3C REC-xml-20081126
              type: W3C
              primary: true
            formattedref:
              content: W3C REC-xml-20081126
              format: text/plain
        series:
        - title:
            content: W3C REC
            format: text/plain
          number: xml
        doctype:
          type: technicalReport
        ext:
          schema-version: v1.0.0
  recorded_at: Thu, 28 Dec 2023 14:25:52 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/relaton/relaton-data-etsi/main/data/ETSI_GS_ZSM_012_V1_1_1_2022-12.yaml
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - raw.githubusercontent.com
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - keep-alive
      Content-Length:
      - '2289'
      Cache-Control:
      - max-age=300
      Content-Security-Policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      Content-Type:
      - text/plain; charset=utf-8
      Etag:
      - W/"06907994d85677807df3f924e659901c35ffff5d7d5528f56521d6367307433c"
      Strict-Transport-Security:
      - max-age=31536000
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      X-Xss-Protection:
      - 1; mode=block
      X-Github-Request-Id:
      - 7EEC:341049:BF86C:EA0D1:658D7DB6
      Accept-Ranges:
      - bytes
      Date:
      - Thu, 28 Dec 2023 14:25:52 GMT
      Via:
      - 1.1 varnish
      X-Served-By:
      - cache-mel11263-MEL
      X-Cache:
      - HIT
      X-Cache-Hits:
      - '1'
      X-Timer:
      - S1703773552.308780,VS0,VE113
      Vary:
      - Authorization,Accept-Encoding,Origin
      Access-Control-Allow-Origin:
      - "*"
      Cross-Origin-Resource-Policy:
      - cross-origin
      X-Fastly-Request-Id:
      - ae3f4d323f0b1f1d128a4382483c1e0bd35f7713
      Expires:
      - Thu, 28 Dec 2023 14:30:52 GMT
      Source-Age:
      - '0'
    body:
      encoding: ASCII-8BIT
      string: |
        ---
        schema-version: v1.2.7
        id: ETSIGSZSM012V1.1.12022-12
        title:
        - content: Zero-touch network and Service Management (ZSM); Enablers for Artificial
            Intelligence-based Network and Service Automation
          language:
          - en
          script:
          - Latn
          format: text/plain
        link:
        - content: http://webapp.etsi.org/workprogram/Report_WorkItem.asp?WKI_ID=62010
          type: src
        - content: http://www.etsi.org/deliver/etsi_gs/ZSM/001_099/012/01.01.01_60/gs_ZSM012v010101p.pdf
          type: pdf
        docid:
        - id: ETSI GS ZSM 012 V1.1.1 (2022-12)
          type: ETSI
          primary: true
        docnumber: ETSI GS ZSM 012 V1.1.1 (2022-12)
        date:
        - type: published
          value: 2022-12
        version:
        - draft: 1.1.1
        revdate: 2022-12
        language:
        - en
        script:
        - Latn
        abstract:
        - content: "The work item will specify extensions and new capabilities (so-called
            \"AI enablers\") for the ZSM framework reference architecture providing support
            for the automation of management functionalities and operations based on Artificial
            Intelligence (AI), applicable end-to-end and per management domain. The set of
            AI-enabling capabilities will be specified as management services, complementing
            the existing management services defined in ETSI GS ZSM 002 V1.1.1. The focus
            will be on AI-related areas such as data (including data handling and analytics),
            action, interoperation, governance and execution environment. Furthermore, the
            use and integration in the ZSM framework of externally provided AI-based capabilities
            will be taken into account. \r\nThe work item will consider AI-related scenarios
            defined in ETSI GS ZSM 001 V1.1.1, as well as new scenarios, in order to derive
            AI-specific requirements. The work item will also document deployment aspects
            of the above scenarios to validate the applicability of the AI enablers. Related
            work from standard development organizations, open source projects and other sources
            will be considered and re-used, where applicable, in the development of the specifications."
          language:
          - en
          script:
          - Latn
          format: text/plain
        keyword:
        - content: artificial intelligence
        - content: automation
        - content: NETWORK
        doctype:
          type: Group Specification
          abbreviation: GS
        editorialgroup:
        - name: Zero-touch network and Service Management
        ext:
          schema-version: v0.0.3
  recorded_at: Thu, 28 Dec 2023 14:25:52 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/relaton/relaton-data-etsi/main/data/ETSI_GS_ZSM_012_V1_1_1_2022-12.yaml
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - raw.githubusercontent.com
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - keep-alive
      Content-Length:
      - '2289'
      Cache-Control:
      - max-age=300
      Content-Security-Policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      Content-Type:
      - text/plain; charset=utf-8
      Etag:
      - W/"06907994d85677807df3f924e659901c35ffff5d7d5528f56521d6367307433c"
      Strict-Transport-Security:
      - max-age=31536000
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      X-Xss-Protection:
      - 1; mode=block
      X-Github-Request-Id:
      - 7EEC:341049:BF86C:EA0D1:658D7DB6
      Accept-Ranges:
      - bytes
      Date:
      - Thu, 28 Dec 2023 14:25:52 GMT
      Via:
      - 1.1 varnish
      X-Served-By:
      - cache-mel11256-MEL
      X-Cache:
      - HIT
      X-Cache-Hits:
      - '1'
      X-Timer:
      - S1703773552.130038,VS0,VE299
      Vary:
      - Authorization,Accept-Encoding,Origin
      Access-Control-Allow-Origin:
      - "*"
      Cross-Origin-Resource-Policy:
      - cross-origin
      X-Fastly-Request-Id:
      - f18ad9fc7123741d4f387257c069eb45757e7d87
      Expires:
      - Thu, 28 Dec 2023 14:30:52 GMT
      Source-Age:
      - '0'
    body:
      encoding: ASCII-8BIT
      string: |
        ---
        schema-version: v1.2.7
        id: ETSIGSZSM012V1.1.12022-12
        title:
        - content: Zero-touch network and Service Management (ZSM); Enablers for Artificial
            Intelligence-based Network and Service Automation
          language:
          - en
          script:
          - Latn
          format: text/plain
        link:
        - content: http://webapp.etsi.org/workprogram/Report_WorkItem.asp?WKI_ID=62010
          type: src
        - content: http://www.etsi.org/deliver/etsi_gs/ZSM/001_099/012/01.01.01_60/gs_ZSM012v010101p.pdf
          type: pdf
        docid:
        - id: ETSI GS ZSM 012 V1.1.1 (2022-12)
          type: ETSI
          primary: true
        docnumber: ETSI GS ZSM 012 V1.1.1 (2022-12)
        date:
        - type: published
          value: 2022-12
        version:
        - draft: 1.1.1
        revdate: 2022-12
        language:
        - en
        script:
        - Latn
        abstract:
        - content: "The work item will specify extensions and new capabilities (so-called
            \"AI enablers\") for the ZSM framework reference architecture providing support
            for the automation of management functionalities and operations based on Artificial
            Intelligence (AI), applicable end-to-end and per management domain. The set of
            AI-enabling capabilities will be specified as management services, complementing
            the existing management services defined in ETSI GS ZSM 002 V1.1.1. The focus
            will be on AI-related areas such as data (including data handling and analytics),
            action, interoperation, governance and execution environment. Furthermore, the
            use and integration in the ZSM framework of externally provided AI-based capabilities
            will be taken into account. \r\nThe work item will consider AI-related scenarios
            defined in ETSI GS ZSM 001 V1.1.1, as well as new scenarios, in order to derive
            AI-specific requirements. The work item will also document deployment aspects
            of the above scenarios to validate the applicability of the AI enablers. Related
            work from standard development organizations, open source projects and other sources
            will be considered and re-used, where applicable, in the development of the specifications."
          language:
          - en
          script:
          - Latn
          format: text/plain
        keyword:
        - content: artificial intelligence
        - content: automation
        - content: NETWORK
        doctype:
          type: Group Specification
          abbreviation: GS
        editorialgroup:
        - name: Zero-touch network and Service Management
        ext:
          schema-version: v0.0.3
  recorded_at: Thu, 28 Dec 2023 14:25:52 GMT
- request:
    method: post
    uri: https://jcl49wv5ar-dsn.algolia.net/1/indexes/all_en/query
    body:
      encoding: UTF-8
      string: '{"query":"ISO 639","hitsPerPage":100,"filters":"category:standard"}'
    headers:
      User-Agent:
      - Algolia for Ruby (2.3.4), Ruby (3.2.2)
      X-Algolia-Api-Key:
      - dd1b9e1ab383f4d4817d29cd5e96d3f0
      X-Algolia-Application-Id:
      - JCL49WV5AR
      Content-Type:
      - application/json; charset=utf-8
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      Connection:
      - keep-alive
      Keep-Alive:
      - '30'
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Thu, 28 Dec 2023 14:25:52 GMT
      Content-Type:
      - application/json; charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      X-Alg-Pt:
      - '1'
      Accept-Encoding:
      - deflate, gzip
      Cache-Control:
      - no-store
      Access-Control-Allow-Origin:
      - "*"
      Timing-Allow-Origin:
      - "*"
      X-Content-Type-Options:
      - nosniff
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Content-Disposition:
      - inline; filename=a.txt
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 28 Dec 2023 14:25:52 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/relaton/relaton-data-itu-r/master/data/ITU-R_P_838-3.yaml
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - raw.githubusercontent.com
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - keep-alive
      Content-Length:
      - '617'
      Cache-Control:
      - max-age=300
      Content-Security-Policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      Content-Type:
      - text/plain; charset=utf-8
      Etag:
      - W/"921bba143085fc707a9c25e7441d27560091d1310eebe0e76baa36af237a40f1"
      Strict-Transport-Security:
      - max-age=31536000
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      X-Xss-Protection:
      - 1; mode=block
      X-Github-Request-Id:
      - 5E08:308DCC:CBD94:F7F4A:658D8570
      Accept-Ranges:
      - bytes
      Date:
      - Thu, 28 Dec 2023 14:25:52 GMT
      Via:
      - 1.1 varnish
      X-Served-By:
      - cache-mel11243-MEL
      X-Cache:
      - MISS
      X-Cache-Hits:
      - '0'
      X-Timer:
      - S1703773552.306718,VS0,VE293
      Vary:
      - Authorization,Accept-Encoding,Origin
      Access-Control-Allow-Origin:
      - "*"
      Cross-Origin-Resource-Policy:
      - cross-origin
      X-Fastly-Request-Id:
      - a7057b4444697b25f537a34f7cb780fbd0a60df3
      Expires:
      - Thu, 28 Dec 2023 14:30:52 GMT
      Source-Age:
      - '0'
    body:
      encoding: ASCII-8BIT
      string: |
        ---
        schema-version: v1.2.7
        id: ITU-RP.838-3
        title:
        - content: Specific attenuation model for rain for use in prediction methods
          language:
          - en
          script:
          - Latn
          format: text/plain
          type: main
        link:
        - content: https://extranet.itu.int/brdocsearch/_layouts/15/DocSetHome.aspx?id=/brdocsearch/R-REC/R-REC-P/R-REC-P.838/R-REC-P.838-3-200503-I
          type: src
        type: standard
        docid:
        - id: ITU-R P.838-3
          type: ITU
          primary: true
        date:
        - type: confirmed
          value: '2005-03-08'
        - type: published
          value: '2005'
        revdate: '2005'
        language:
        - en
        script:
        - Latn
        doctype:
          type: recommendation
        ext:
          schema-version: v1.0.0
  recorded_at: Thu, 28 Dec 2023 14:25:52 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/relaton/relaton-data-itu-r/master/data/ITU-R_P_838-3.yaml
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - raw.githubusercontent.com
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - keep-alive
      Content-Length:
      - '617'
      Cache-Control:
      - max-age=300
      Content-Security-Policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      Content-Type:
      - text/plain; charset=utf-8
      Etag:
      - W/"921bba143085fc707a9c25e7441d27560091d1310eebe0e76baa36af237a40f1"
      Strict-Transport-Security:
      - max-age=31536000
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      X-Xss-Protection:
      - 1; mode=block
      X-Github-Request-Id:
      - 5E08:308DCC:CBD94:F7F4A:658D8570
      Accept-Ranges:
      - bytes
      Date:
      - Thu, 28 Dec 2023 14:25:52 GMT
      Via:
      - 1.1 varnish
      X-Served-By:
      - cache-mel11266-MEL
      X-Cache:
      - HIT
      X-Cache-Hits:
      - '1'
      X-Timer:
      - S1703773552.307003,VS0,VE293
      Vary:
      - Authorization,Accept-Encoding,Origin
      Access-Control-Allow-Origin:
      - "*"
      Cross-Origin-Resource-Policy:
      - cross-origin
      X-Fastly-Request-Id:
      - 144bdbac8ce91b8f6a23f2eb27b3be9a80c925a7
      Expires:
      - Thu, 28 Dec 2023 14:30:52 GMT
      Source-Age:
      - '0'
    body:
      encoding: ASCII-8BIT
      string: |
        ---
        schema-version: v1.2.7
        id: ITU-RP.838-3
        title:
        - content: Specific attenuation model for rain for use in prediction methods
          language:
          - en
          script:
          - Latn
          format: text/plain
          type: main
        link:
        - content: https://extranet.itu.int/brdocsearch/_layouts/15/DocSetHome.aspx?id=/brdocsearch/R-REC/R-REC-P/R-REC-P.838/R-REC-P.838-3-200503-I
          type: src
        type: standard
        docid:
        - id: ITU-R P.838-3
          type: ITU
          primary: true
        date:
        - type: confirmed
          value: '2005-03-08'
        - type: published
          value: '2005'
        revdate: '2005'
        language:
        - en
        script:
        - Latn
        doctype:
          type: recommendation
        ext:
          schema-version: v1.0.0
  recorded_at: Thu, 28 Dec 2023 14:25:52 GMT
- request:
    method: post
    uri: https://jcl49wv5ar-dsn.algolia.net/1/indexes/all_en/query
    body:
      encoding: UTF-8
      string: '{"query":"ISO/IEC 2382","hitsPerPage":100,"filters":"category:standard"}'
    headers:
      User-Agent:
      - Algolia for Ruby (2.3.4), Ruby (3.2.2)
      X-Algolia-Api-Key:
      - dd1b9e1ab383f4d4817d29cd5e96d3f0
      X-Algolia-Application-Id:
      - JCL49WV5AR
      Content-Type:
      - application/json; charset=utf-8
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      Connection:
      - keep-alive
      Keep-Alive:
      - '30'
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Thu, 28 Dec 2023 14:25:52 GMT
      Content-Type:
      - application/json; charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      X-Alg-Pt:
      - '1'
      Accept-Encoding:
      - deflate, gzip
      Cache-Control:
      - no-store
      Access-Control-Allow-Origin:
      - "*"
      Timing-Allow-Origin:
      - "*"
      X-Content-Type-Options:
      - nosniff
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Content-Disposition:
      - inline; filename=a.txt
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJoaXRzIjpbeyJjYXRlZ29yeSI6InN0YW5kYXJkIiwicGF0aCI6Ii9zaXRlcy9pc29vcmcvY29udGVudHMvZGF0YS9zdGFuZGFyZC8wNy8zNS83MzUxNCIsInV1aWQiOiJjMWE4MmVhOS01YzQzLTRlNGMtYTk1NC01YjJlY2ZmZGQ5MzkiLCJ0aXRsZSI6IklTTy9JRUMgMjM4Mi0zNzoyMDIyIEluZm9ybWF0aW9uIHRlY2hub2xvZ3kg4oCUIFZvY2FidWxhcnkg4oCUIFBhcnQgMzc6IEJpb21ldHJpY3MiLCJzdGF0dXMiOiJQdWJsaXNoZWQiLCJ5ZWFyIjoyMDIyLCJvcmRlciI6MTEsInRleHQiOiJUaGlzIGRvY3VtZW50IGVzdGFibGlzaGVzIGEgc3lzdGVtYXRpYyBkZXNjcmlwdGlvbiBvZiB0aGUgY29uY2VwdHMgaW4gdGhlIGZpZWxkIG9mIGJpb21ldHJpY3MgcGVydGFpbmluZyB0byByZWNvZ25pdGlvbiBvZiBodW1hbiBiZWluZ3MuIFRoaXMgZG9jdW1lbnQgYWxzbyByZWNvbmNpbGVzIHZhcmlhbnQgdGVybXMgaW4gdXNlIGluIHByZS1leGlzdGluZyBJbnRlcm5hdGlvbmFsIFN0YW5kYXJkcyBvbiBiaW9tZXRyaWNzIGFnYWluc3QgdGhlIHByZWZlcnJlZCB0ZXJtcywgdGhlcmVieSBjbGFyaWZ5aW5nIHRoZSB1c2Ugb2YgdGVybXMgaW4gdGhpcyBmaWVsZC4gVGhpcyBkb2N1bWVudCBkb2VzIG5vdCBjb3ZlciBjb25jZXB0cyAocmVwcmVzZW50ZWQgYnkgdGVybXMpIGZyb20gaW5mb3JtYXRpb24gdGVjaG5vbG9neSwgcGF0dGVybiByZWNvZ25pdGlvbiwgYmlvbG9neSwgbWF0aGVtYXRpY3MsIGV0Yy4gQmlvbWV0cmljcyB1c2VzIHN1Y2ggZmllbGRzIG9mIGtub3dsZWRnZSBhcyBhIGJhc2lzLiBJbiBwcmluY2lwbGUsIG1vZGUtc3BlY2lmaWMgdGVybXMgYXJlIG91dHNpZGUgb2Ygc2NvcGUgb2YgdGhpcyBkb2N1bWVudC4gIiwib2JqZWN0SUQiOiI3MzUxNF8wIiwiX2hpZ2hsaWdodFJlc3VsdCI6eyJ0aXRsZSI6eyJ2YWx1ZSI6IjxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gPGVtPjIzODI8L2VtPi0zNzoyMDIyIEluZm9ybWF0aW9uIHRlY2hub2xvZ3kg4oCUIFZvY2FidWxhcnkg4oCUIFBhcnQgMzc6IEJpb21ldHJpY3MiLCJtYXRjaExldmVsIjoiZnVsbCIsImZ1bGx5SGlnaGxpZ2h0ZWQiOmZhbHNlLCJtYXRjaGVkV29yZHMiOlsiaXNvIiwiaWVjIiwiMjM4MiJdfSwidGV4dCI6eyJ2YWx1ZSI6IlRoaXMgZG9jdW1lbnQgZXN0YWJsaXNoZXMgYSBzeXN0ZW1hdGljIGRlc2NyaXB0aW9uIG9mIHRoZSBjb25jZXB0cyBpbiB0aGUgZmllbGQgb2YgYmlvbWV0cmljcyBwZXJ0YWluaW5nIHRvIHJlY29nbml0aW9uIG9mIGh1bWFuIGJlaW5ncy4gVGhpcyBkb2N1bWVudCBhbHNvIHJlY29uY2lsZXMgdmFyaWFudCB0ZXJtcyBpbiB1c2UgaW4gcHJlLWV4aXN0aW5nIEludGVybmF0aW9uYWwgU3RhbmRhcmRzIG9uIGJpb21ldHJpY3MgYWdhaW5zdCB0aGUgcHJlZmVycmVkIHRlcm1zLCB0aGVyZWJ5IGNsYXJpZnlpbmcgdGhlIHVzZSBvZiB0ZXJtcyBpbiB0aGlzIGZpZWxkLiBUaGlzIGRvY3VtZW50IGRvZXMgbm90IGNvdmVyIGNvbmNlcHRzIChyZXByZXNlbnRlZCBieSB0ZXJtcykgZnJvbSBpbmZvcm1hdGlvbiB0ZWNobm9sb2d5LCBwYXR0ZXJuIHJlY29nbml0aW9uLCBiaW9sb2d5LCBtYXRoZW1hdGljcywgZXRjLiBCaW9tZXRyaWNzIHVzZXMgc3VjaCBmaWVsZHMgb2Yga25vd2xlZGdlIGFzIGEgYmFzaXMuIEluIHByaW5jaXBsZSwgbW9kZS1zcGVjaWZpYyB0ZXJtcyBhcmUgb3V0c2lkZSBvZiBzY29wZSBvZiB0aGlzIGRvY3VtZW50LiAiLCJtYXRjaExldmVsIjoibm9uZSIsIm1hdGNoZWRXb3JkcyI6W119fX0seyJjYXRlZ29yeSI6InN0YW5kYXJkIiwicGF0aCI6Ii9zaXRlcy9pc29vcmcvY29udGVudHMvZGF0YS9zdGFuZGFyZC8wNi8zNS82MzU5OCIsInV1aWQiOiI2MzNkYzQ0Yy05OTg0LTQ3ZTAtODgwMy1lNDg5MmU4NDhiN2QiLCJ0aXRsZSI6IklTTy9JRUMgMjM4MjoyMDE1IEluZm9ybWF0aW9uIHRlY2hub2xvZ3kg4oCUIFZvY2FidWxhcnkiLCJzdGF0dXMiOiJQdWJsaXNoZWQiLCJ5ZWFyIjoyMDIwLCJvcmRlciI6MTEsInRleHQiOiJUaGlzIHN0YW5kYXJkIG9mIHZvY2FidWxhcnkgdGFrZW4gZnJvbSB0aGUgbXVsdGktcGFydCBJU08vSUVDIDIzODIgc3RhbmRhcmQgaXMgcHJlc2VudGVkIGluIGxhbmd1YWdlLXNwZWNpZmljIG9yZGVyIGFuZCBpcyBpbnRlbmRlZCB0byBmYWNpbGl0YXRlIGludGVybmF0aW9uYWwgY29tbXVuaWNhdGlvbiBpbiBpbmZvcm1hdGlvbiB0ZWNobm9sb2d5LiBJdCBwcmVzZW50cywgaW4gdHdvIGxhbmd1YWdlcywgdGVybXMgYW5kIGRlZmluaXRpb25zIG9mIHNlbGVjdGVkIGNvbmNlcHRzIHJlbGV2YW50IHRvIHRoaXMgZmllbGQuIEluIG9yZGVyIHRvIGZhY2lsaXRhdGUgdGhlaXIgdHJhbnNsYXRpb24gaW50byBvdGhlciBsYW5ndWFnZXMsIHRoZSBkZWZpbml0aW9ucyBhcmUgZHJhZnRlZCBzbyBhcyB0byBhdm9pZCwgYXMgZmFyIGFzIHBvc3NpYmxlLCBhbnkgcGVjdWxpYXJpdHkgYXR0YWNoZWQgdG8gYSBsYW5ndWFnZS4gIiwib2JqZWN0SUQiOiI2MzU5OF8wIiwiX2hpZ2hsaWdodFJlc3VsdCI6eyJ0aXRsZSI6eyJ2YWx1ZSI6IjxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gPGVtPjIzODI8L2VtPjoyMDE1IEluZm9ybWF0aW9uIHRlY2hub2xvZ3kg4oCUIFZvY2FidWxhcnkiLCJtYXRjaExldmVsIjoiZnVsbCIsImZ1bGx5SGlnaGxpZ2h0ZWQiOmZhbHNlLCJtYXRjaGVkV29yZHMiOlsiaXNvIiwiaWVjIiwiMjM4MiJdfSwidGV4dCI6eyJ2YWx1ZSI6IlRoaXMgc3RhbmRhcmQgb2Ygdm9jYWJ1bGFyeSB0YWtlbiBmcm9tIHRoZSBtdWx0aS1wYXJ0IDxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gPGVtPjIzODI8L2VtPiBzdGFuZGFyZCBpcyBwcmVzZW50ZWQgaW4gbGFuZ3VhZ2Utc3BlY2lmaWMgb3JkZXIgYW5kIGlzIGludGVuZGVkIHRvIGZhY2lsaXRhdGUgaW50ZXJuYXRpb25hbCBjb21tdW5pY2F0aW9uIGluIGluZm9ybWF0aW9uIHRlY2hub2xvZ3kuIEl0IHByZXNlbnRzLCBpbiB0d28gbGFuZ3VhZ2VzLCB0ZXJtcyBhbmQgZGVmaW5pdGlvbnMgb2Ygc2VsZWN0ZWQgY29uY2VwdHMgcmVsZXZhbnQgdG8gdGhpcyBmaWVsZC4gSW4gb3JkZXIgdG8gZmFjaWxpdGF0ZSB0aGVpciB0cmFuc2xhdGlvbiBpbnRvIG90aGVyIGxhbmd1YWdlcywgdGhlIGRlZmluaXRpb25zIGFyZSBkcmFmdGVkIHNvIGFzIHRvIGF2b2lkLCBhcyBmYXIgYXMgcG9zc2libGUsIGFueSBwZWN1bGlhcml0eSBhdHRhY2hlZCB0byBhIGxhbmd1YWdlLiAiLCJtYXRjaExldmVsIjoiZnVsbCIsImZ1bGx5SGlnaGxpZ2h0ZWQiOmZhbHNlLCJtYXRjaGVkV29yZHMiOlsiaXNvIiwiaWVjIiwiMjM4MiJdfX19LHsiY2F0ZWdvcnkiOiJzdGFuZGFyZCIsInBhdGgiOiIvc2l0ZXMvaXNvb3JnL2NvbnRlbnRzL2RhdGEvc3RhbmRhcmQvMDYvNjYvNjY2OTIiLCJ1dWlkIjoiZWIzY2M5ZjQtMzU5YS00YzY0LWE2ZjItNzQ3Y2M2ZWQ2ZTUxIiwidGl0bGUiOiJJU08vSUVDIDIzODItMzY6MjAxOSBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBWb2NhYnVsYXJ5IOKAlCBQYXJ0IDM2OiBMZWFybmluZywgZWR1Y2F0aW9uIGFuZCB0cmFpbmluZyIsInN0YXR1cyI6IlB1Ymxpc2hlZCIsInllYXIiOjIwMTksIm9yZGVyIjoxMSwidGV4dCI6IlRoaXMgZG9jdW1lbnQgcHJvdmlkZXMgdGVybXMgYW5kIGRlZmluaXRpb25zIGZvciB2b2NhYnVsYXJ5IHVzZWQgaW4gdGhlIGZpZWxkIG9mIGxlYXJuaW5nLCBlZHVjYXRpb24gYW5kIHRyYWluaW5nIChMRVQpIHRvIGZhY2lsaXRhdGUgaW50ZXJuYXRpb25hbCBjb21tdW5pY2F0aW9uIGluIHRoZSBmaWVsZC4gVGhpcyBkb2N1bWVudCBhbHNvIGlkZW50aWZpZXMgYW5kIHByb3ZpZGVzIHRoZSByZWxhdGlvbnNoaXBzIGFtb25nIHRoZSB2b2NhYnVsYXJ5IGVuc3VyaW5nIGEgY29oZXNpdmUgYW5kIGhhcm1vbml6ZWQgYXBwcm9hY2guICIsIm9iamVjdElEIjoiNjY2OTJfMCIsIl9oaWdobGlnaHRSZXN1bHQiOnsidGl0bGUiOnsidmFsdWUiOiI8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDxlbT4yMzgyPC9lbT4tMzY6MjAxOSBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBWb2NhYnVsYXJ5IOKAlCBQYXJ0IDM2OiBMZWFybmluZywgZWR1Y2F0aW9uIGFuZCB0cmFpbmluZyIsIm1hdGNoTGV2ZWwiOiJmdWxsIiwiZnVsbHlIaWdobGlnaHRlZCI6ZmFsc2UsIm1hdGNoZWRXb3JkcyI6WyJpc28iLCJpZWMiLCIyMzgyIl19LCJ0ZXh0Ijp7InZhbHVlIjoiVGhpcyBkb2N1bWVudCBwcm92aWRlcyB0ZXJtcyBhbmQgZGVmaW5pdGlvbnMgZm9yIHZvY2FidWxhcnkgdXNlZCBpbiB0aGUgZmllbGQgb2YgbGVhcm5pbmcsIGVkdWNhdGlvbiBhbmQgdHJhaW5pbmcgKExFVCkgdG8gZmFjaWxpdGF0ZSBpbnRlcm5hdGlvbmFsIGNvbW11bmljYXRpb24gaW4gdGhlIGZpZWxkLiBUaGlzIGRvY3VtZW50IGFsc28gaWRlbnRpZmllcyBhbmQgcHJvdmlkZXMgdGhlIHJlbGF0aW9uc2hpcHMgYW1vbmcgdGhlIHZvY2FidWxhcnkgZW5zdXJpbmcgYSBjb2hlc2l2ZSBhbmQgaGFybW9uaXplZCBhcHByb2FjaC4gIiwibWF0Y2hMZXZlbCI6Im5vbmUiLCJtYXRjaGVkV29yZHMiOltdfX19LHsiY2F0ZWdvcnkiOiJzdGFuZGFyZCIsInBhdGgiOiIvc2l0ZXMvaXNvb3JnL2NvbnRlbnRzL2RhdGEvc3RhbmRhcmQvMDYvNjYvNjY2OTMiLCJ1dWlkIjoiMGIwNjdiNzMtMWY4YS00NTQ4LWFjZDctNzBiYjlhZTFiNWZlIiwidGl0bGUiOiJJU08vSUVDIDIzODItMzc6MjAxNyBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBWb2NhYnVsYXJ5IOKAlCBQYXJ0IDM3OiBCaW9tZXRyaWNzIiwic3RhdHVzIjoiV2l0aGRyYXduIiwieWVhciI6MjAyMiwib3JkZXIiOjEwMCwidGV4dCI6IklTTy9JRUMgMjM4Mi0zNzoyMDE3IGVzdGFibGlzaGVzIGEgc3lzdGVtYXRpYyBkZXNjcmlwdGlvbiBvZiB0aGUgY29uY2VwdHMgaW4gdGhlIGZpZWxkIG9mIGJpb21ldHJpY3MgcGVydGFpbmluZyB0byByZWNvZ25pdGlvbiBvZiBodW1hbiBiZWluZ3MgYW5kIHJlY29uY2lsZXMgdmFyaWFudCB0ZXJtcyBpbiB1c2UgaW4gcHJlLWV4aXN0aW5nIGJpb21ldHJpYyBzdGFuZGFyZHMgYWdhaW5zdCB0aGUgcHJlZmVycmVkIHRlcm1zLCB0aGVyZWJ5IGNsYXJpZnlpbmcgdGhlIHVzZSBvZiB0ZXJtcyBpbiB0aGlzIGZpZWxkLiBFeGNsdWRlZCBmcm9tIHRoZSBzY29wZSBvZiB0aGlzIGRvY3VtZW50IGFyZSBjb25jZXB0cyAocmVwcmVzZW50ZWQgYnkgdGVybXMpIGZyb20gaW5mb3JtYXRpb24gdGVjaG5vbG9neSwgcGF0dGVybiByZWNvZ25pdGlvbiwgYmlvbG9neSwgbWF0aGVtYXRpY3MsIGV0Yy4gQmlvbWV0cmljcyB1c2VzIHN1Y2ggZmllbGRzIG9mIGtub3dsZWRnZSBhcyBhIGJhc2lzLiBJbiBwcmluY2lwbGUsIG1vZGUgc3BlY2lmaWMgdGVybXMgYXJlIG91dHNpZGUgb2Ygc2NvcGUgb2YgdGhpcyBkb2N1bWVudC4gV29yZHMgdGhhdCBhcmUgYm9sZGVkIGFyZSBkZWZpbmVkIGluIHRoaXMgZG9jdW1lbnQuIFdvcmRzIHRoYXQgYXJlIG5vdCBib2xkZWQgYXJlIHVuZGVyc3Rvb2QgaW4gdGhlaXIgbmF0dXJhbCBsYW5ndWFnZSBzZW5zZS4gVGhlIGF1dGhvcml0eSBmb3IgbmF0dXJhbCBsYW5ndWFnZSB1c2Ugb2YgdGVybXMgaW4gdGhpcyBkb2N1bWVudCBpcyB0aGUgQ29uY2lzZSBPeGZvcmQgRW5nbGlzaCBEaWN0aW9uYXJ5LCBUaHVtYiBJbmRleCBFZGl0aW9uICh0ZW50aCBlZGl0aW9uLCByZXZpc2VkLCAyMDAyKS4gV29yZHMgdXNlZCBpbiB0aGVpciBuYXR1cmFsIGxhbmd1YWdlIHNlbnNlIGFyZSBjb25zaWRlcmVkIG91dC1vZi1zY29wZSBmb3IgZnVydGhlciBkZWZpbml0aW9uIGluIHRoaXMgZG9jdW1lbnQuICIsIm9iamVjdElEIjoiNjY2OTNfMCIsIl9oaWdobGlnaHRSZXN1bHQiOnsidGl0bGUiOnsidmFsdWUiOiI8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDxlbT4yMzgyPC9lbT4tMzc6MjAxNyBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBWb2NhYnVsYXJ5IOKAlCBQYXJ0IDM3OiBCaW9tZXRyaWNzIiwibWF0Y2hMZXZlbCI6ImZ1bGwiLCJmdWxseUhpZ2hsaWdodGVkIjpmYWxzZSwibWF0Y2hlZFdvcmRzIjpbImlzbyIsImllYyIsIjIzODIiXX0sInRleHQiOnsidmFsdWUiOiI8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDxlbT4yMzgyPC9lbT4tMzc6MjAxNyBlc3RhYmxpc2hlcyBhIHN5c3RlbWF0aWMgZGVzY3JpcHRpb24gb2YgdGhlIGNvbmNlcHRzIGluIHRoZSBmaWVsZCBvZiBiaW9tZXRyaWNzIHBlcnRhaW5pbmcgdG8gcmVjb2duaXRpb24gb2YgaHVtYW4gYmVpbmdzIGFuZCByZWNvbmNpbGVzIHZhcmlhbnQgdGVybXMgaW4gdXNlIGluIHByZS1leGlzdGluZyBiaW9tZXRyaWMgc3RhbmRhcmRzIGFnYWluc3QgdGhlIHByZWZlcnJlZCB0ZXJtcywgdGhlcmVieSBjbGFyaWZ5aW5nIHRoZSB1c2Ugb2YgdGVybXMgaW4gdGhpcyBmaWVsZC4gRXhjbHVkZWQgZnJvbSB0aGUgc2NvcGUgb2YgdGhpcyBkb2N1bWVudCBhcmUgY29uY2VwdHMgKHJlcHJlc2VudGVkIGJ5IHRlcm1zKSBmcm9tIGluZm9ybWF0aW9uIHRlY2hub2xvZ3ksIHBhdHRlcm4gcmVjb2duaXRpb24sIGJpb2xvZ3ksIG1hdGhlbWF0aWNzLCBldGMuIEJpb21ldHJpY3MgdXNlcyBzdWNoIGZpZWxkcyBvZiBrbm93bGVkZ2UgYXMgYSBiYXNpcy4gSW4gcHJpbmNpcGxlLCBtb2RlIHNwZWNpZmljIHRlcm1zIGFyZSBvdXRzaWRlIG9mIHNjb3BlIG9mIHRoaXMgZG9jdW1lbnQuIFdvcmRzIHRoYXQgYXJlIGJvbGRlZCBhcmUgZGVmaW5lZCBpbiB0aGlzIGRvY3VtZW50LiBXb3JkcyB0aGF0IGFyZSBub3QgYm9sZGVkIGFyZSB1bmRlcnN0b29kIGluIHRoZWlyIG5hdHVyYWwgbGFuZ3VhZ2Ugc2Vuc2UuIFRoZSBhdXRob3JpdHkgZm9yIG5hdHVyYWwgbGFuZ3VhZ2UgdXNlIG9mIHRlcm1zIGluIHRoaXMgZG9jdW1lbnQgaXMgdGhlIENvbmNpc2UgT3hmb3JkIEVuZ2xpc2ggRGljdGlvbmFyeSwgVGh1bWIgSW5kZXggRWRpdGlvbiAodGVudGggZWRpdGlvbiwgcmV2aXNlZCwgMjAwMikuIFdvcmRzIHVzZWQgaW4gdGhlaXIgbmF0dXJhbCBsYW5ndWFnZSBzZW5zZSBhcmUgY29uc2lkZXJlZCBvdXQtb2Ytc2NvcGUgZm9yIGZ1cnRoZXIgZGVmaW5pdGlvbiBpbiB0aGlzIGRvY3VtZW50LiAiLCJtYXRjaExldmVsIjoiZnVsbCIsImZ1bGx5SGlnaGxpZ2h0ZWQiOmZhbHNlLCJtYXRjaGVkV29yZHMiOlsiaXNvIiwiaWVjIiwiMjM4MiJdfX19LHsiY2F0ZWdvcnkiOiJzdGFuZGFyZCIsInBhdGgiOiIvc2l0ZXMvaXNvb3JnL2NvbnRlbnRzL2RhdGEvc3RhbmRhcmQvMDYvMzkvNjM5OTYiLCJ1dWlkIjoiMWFkYzJkMzgtNTNkZi00ODRhLWFjNzEtMzMyNmUzYWZjZTAwIiwidGl0bGUiOiJJU08vSUVDIDIzODItMzY6MjAxMyBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBWb2NhYnVsYXJ5IOKAlCBQYXJ0IDM2OiBMZWFybmluZywgZWR1Y2F0aW9uIGFuZCB0cmFpbmluZyIsInN0YXR1cyI6IldpdGhkcmF3biIsInllYXIiOjIwMTksIm9yZGVyIjoxMDAsInRleHQiOiJJU08vSUVDIDIzODItMzY6MjAxMyBpcyBpbnRlbmRlZCB0byBmYWNpbGl0YXRlIGludGVybmF0aW9uYWwgY29tbXVuaWNhdGlvbiBpbiBpbmZvcm1hdGlvbiB0ZWNobm9sb2d5IGZvciBsZWFybmluZywgZWR1Y2F0aW9uLCBhbmQgdHJhaW5pbmcuIEl0IHByZXNlbnRzLCBpbiB0d28gbGFuZ3VhZ2VzLCB0ZXJtcyBhbmQgZGVmaW5pdGlvbnMgb2Ygc2VsZWN0ZWQgY29uY2VwdHMgcmVsZXZhbnQgdG8gdGhlIGZpZWxkIG9mIGluZm9ybWF0aW9uIHRlY2hub2xvZ3kgZm9yIGxlYXJuaW5nLCBlZHVjYXRpb24sIGFuZCB0cmFpbmluZyBhbmQgaWRlbnRpZmllcyByZWxhdGlvbnNoaXBzIGFtb25nIHRoZSBlbnRyaWVzLiBUcmFuc2xhdGlvbnMgaW50byBvdGhlciBsYW5ndWFnZXMgYXJlIHByb3ZpZGVkIGluIGFubmV4ZXMuICIsIm9iamVjdElEIjoiNjM5OTZfMCIsIl9oaWdobGlnaHRSZXN1bHQiOnsidGl0bGUiOnsidmFsdWUiOiI8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDxlbT4yMzgyPC9lbT4tMzY6MjAxMyBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBWb2NhYnVsYXJ5IOKAlCBQYXJ0IDM2OiBMZWFybmluZywgZWR1Y2F0aW9uIGFuZCB0cmFpbmluZyIsIm1hdGNoTGV2ZWwiOiJmdWxsIiwiZnVsbHlIaWdobGlnaHRlZCI6ZmFsc2UsIm1hdGNoZWRXb3JkcyI6WyJpc28iLCJpZWMiLCIyMzgyIl19LCJ0ZXh0Ijp7InZhbHVlIjoiPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiA8ZW0+MjM4MjwvZW0+LTM2OjIwMTMgaXMgaW50ZW5kZWQgdG8gZmFjaWxpdGF0ZSBpbnRlcm5hdGlvbmFsIGNvbW11bmljYXRpb24gaW4gaW5mb3JtYXRpb24gdGVjaG5vbG9neSBmb3IgbGVhcm5pbmcsIGVkdWNhdGlvbiwgYW5kIHRyYWluaW5nLiBJdCBwcmVzZW50cywgaW4gdHdvIGxhbmd1YWdlcywgdGVybXMgYW5kIGRlZmluaXRpb25zIG9mIHNlbGVjdGVkIGNvbmNlcHRzIHJlbGV2YW50IHRvIHRoZSBmaWVsZCBvZiBpbmZvcm1hdGlvbiB0ZWNobm9sb2d5IGZvciBsZWFybmluZywgZWR1Y2F0aW9uLCBhbmQgdHJhaW5pbmcgYW5kIGlkZW50aWZpZXMgcmVsYXRpb25zaGlwcyBhbW9uZyB0aGUgZW50cmllcy4gVHJhbnNsYXRpb25zIGludG8gb3RoZXIgbGFuZ3VhZ2VzIGFyZSBwcm92aWRlZCBpbiBhbm5leGVzLiAiLCJtYXRjaExldmVsIjoiZnVsbCIsImZ1bGx5SGlnaGxpZ2h0ZWQiOmZhbHNlLCJtYXRjaGVkV29yZHMiOlsiaXNvIiwiaWVjIiwiMjM4MiJdfX19LHsiY2F0ZWdvcnkiOiJzdGFuZGFyZCIsInBhdGgiOiIvc2l0ZXMvaXNvb3JnL2NvbnRlbnRzL2RhdGEvc3RhbmRhcmQvMDUvNTEvNTUxOTQiLCJ1dWlkIjoiYzA1NWE4ZjYtNDMyYS00YWFlLTg2YmItZjczNGUwMzZmNDIxIiwidGl0bGUiOiJJU08vSUVDIDIzODItMzc6MjAxMiBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBWb2NhYnVsYXJ5IOKAlCBQYXJ0IDM3OiBCaW9tZXRyaWNzIiwic3RhdHVzIjoiV2l0aGRyYXduIiwieWVhciI6MjAxNywib3JkZXIiOjEwMCwidGV4dCI6IklTTy9JRUMgMjM4Mi0zNzoyMDEyIGVzdGFibGlzaGVzIGEgc3lzdGVtYXRpYyBkZXNjcmlwdGlvbiBvZiB0aGUgY29uY2VwdHMgaW4gdGhlIGZpZWxkIG9mIGJpb21ldHJpY3MgcGVydGFpbmluZyB0byByZWNvZ25pdGlvbiBvZiBodW1hbiBiZWluZ3MgYW5kIHJlY29uY2lsZXMgdmFyaWFudCB0ZXJtcyBpbiB1c2UgaW4gcHJlLWV4aXN0aW5nIGJpb21ldHJpYyBzdGFuZGFyZHMgYWdhaW5zdCB0aGUgcHJlZmVycmVkIHRlcm1zLCB0aGVyZWJ5IGNsYXJpZnlpbmcgdGhlIHVzZSBvZiB0ZXJtcyBpbiB0aGlzIGZpZWxkLiAiLCJvYmplY3RJRCI6IjU1MTk0XzAiLCJfaGlnaGxpZ2h0UmVzdWx0Ijp7InRpdGxlIjp7InZhbHVlIjoiPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiA8ZW0+MjM4MjwvZW0+LTM3OjIwMTIgSW5mb3JtYXRpb24gdGVjaG5vbG9neSDigJQgVm9jYWJ1bGFyeSDigJQgUGFydCAzNzogQmlvbWV0cmljcyIsIm1hdGNoTGV2ZWwiOiJmdWxsIiwiZnVsbHlIaWdobGlnaHRlZCI6ZmFsc2UsIm1hdGNoZWRXb3JkcyI6WyJpc28iLCJpZWMiLCIyMzgyIl19LCJ0ZXh0Ijp7InZhbHVlIjoiPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiA8ZW0+MjM4MjwvZW0+LTM3OjIwMTIgZXN0YWJsaXNoZXMgYSBzeXN0ZW1hdGljIGRlc2NyaXB0aW9uIG9mIHRoZSBjb25jZXB0cyBpbiB0aGUgZmllbGQgb2YgYmlvbWV0cmljcyBwZXJ0YWluaW5nIHRvIHJlY29nbml0aW9uIG9mIGh1bWFuIGJlaW5ncyBhbmQgcmVjb25jaWxlcyB2YXJpYW50IHRlcm1zIGluIHVzZSBpbiBwcmUtZXhpc3RpbmcgYmlvbWV0cmljIHN0YW5kYXJkcyBhZ2FpbnN0IHRoZSBwcmVmZXJyZWQgdGVybXMsIHRoZXJlYnkgY2xhcmlmeWluZyB0aGUgdXNlIG9mIHRlcm1zIGluIHRoaXMgZmllbGQuICIsIm1hdGNoTGV2ZWwiOiJmdWxsIiwiZnVsbHlIaWdobGlnaHRlZCI6ZmFsc2UsIm1hdGNoZWRXb3JkcyI6WyJpc28iLCJpZWMiLCIyMzgyIl19fX0seyJjYXRlZ29yeSI6InN0YW5kYXJkIiwicGF0aCI6Ii9zaXRlcy9pc29vcmcvY29udGVudHMvZGF0YS9zdGFuZGFyZC8wMC83Mi83MjczIiwidXVpZCI6IjJiOTQwYWViLWE3NzAtNGZjMi05ZWRjLTQyMjRkMTBiMmU5MyIsInRpdGxlIjoiSVNPL0lFQyAyMzgyLTI5OjE5OTkgSW5mb3JtYXRpb24gdGVjaG5vbG9neSDigJQgVm9jYWJ1bGFyeSDigJQgUGFydCAyOTogQXJ0aWZpY2lhbCBpbnRlbGxpZ2VuY2Ug4oCUIFNwZWVjaCByZWNvZ25pdGlvbiBhbmQgc3ludGhlc2lzIiwic3RhdHVzIjoiV2l0aGRyYXduIiwieWVhciI6MjAxNSwib3JkZXIiOjEwMCwib2JqZWN0SUQiOiI3MjczXzAiLCJfaGlnaGxpZ2h0UmVzdWx0Ijp7InRpdGxlIjp7InZhbHVlIjoiPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiA8ZW0+MjM4MjwvZW0+LTI5OjE5OTkgSW5mb3JtYXRpb24gdGVjaG5vbG9neSDigJQgVm9jYWJ1bGFyeSDigJQgUGFydCAyOTogQXJ0aWZpY2lhbCBpbnRlbGxpZ2VuY2Ug4oCUIFNwZWVjaCByZWNvZ25pdGlvbiBhbmQgc3ludGhlc2lzIiwibWF0Y2hMZXZlbCI6ImZ1bGwiLCJmdWxseUhpZ2hsaWdodGVkIjpmYWxzZSwibWF0Y2hlZFdvcmRzIjpbImlzbyIsImllYyIsIjIzODIiXX19fSx7ImNhdGVnb3J5Ijoic3RhbmRhcmQiLCJwYXRoIjoiL3NpdGVzL2lzb29yZy9jb250ZW50cy9kYXRhL3N0YW5kYXJkLzAwLzcyLzcyNzIiLCJ1dWlkIjoiOTNmYjNlODktMWUxNi00YTVhLTljNTMtODcwZmVlMWM3ZDI1IiwidGl0bGUiOiJJU08vSUVDIDIzODItMjg6MTk5NSBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBWb2NhYnVsYXJ5IOKAlCBQYXJ0IDI4OiBBcnRpZmljaWFsIGludGVsbGlnZW5jZSDigJQgQmFzaWMgY29uY2VwdHMgYW5kIGV4cGVydCBzeXN0ZW1zIiwic3RhdHVzIjoiV2l0aGRyYXduIiwieWVhciI6MjAxNSwib3JkZXIiOjEwMCwidGV4dCI6IkRlZmluZXMgYmFzaWMgY29uY2VwdHMgcmVsYXRlZCB0byBhcnRpZmljaWFsIGludGVsbGlnZW5jZSBhbmQgZXhwZXJ0IHN5c3RlbXMuICIsIm9iamVjdElEIjoiNzI3Ml8wIiwiX2hpZ2hsaWdodFJlc3VsdCI6eyJ0aXRsZSI6eyJ2YWx1ZSI6IjxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gPGVtPjIzODI8L2VtPi0yODoxOTk1IEluZm9ybWF0aW9uIHRlY2hub2xvZ3kg4oCUIFZvY2FidWxhcnkg4oCUIFBhcnQgMjg6IEFydGlmaWNpYWwgaW50ZWxsaWdlbmNlIOKAlCBCYXNpYyBjb25jZXB0cyBhbmQgZXhwZXJ0IHN5c3RlbXMiLCJtYXRjaExldmVsIjoiZnVsbCIsImZ1bGx5SGlnaGxpZ2h0ZWQiOmZhbHNlLCJtYXRjaGVkV29yZHMiOlsiaXNvIiwiaWVjIiwiMjM4MiJdfSwidGV4dCI6eyJ2YWx1ZSI6IkRlZmluZXMgYmFzaWMgY29uY2VwdHMgcmVsYXRlZCB0byBhcnRpZmljaWFsIGludGVsbGlnZW5jZSBhbmQgZXhwZXJ0IHN5c3RlbXMuICIsIm1hdGNoTGV2ZWwiOiJub25lIiwibWF0Y2hlZFdvcmRzIjpbXX19fSx7ImNhdGVnb3J5Ijoic3RhbmRhcmQiLCJwYXRoIjoiL3NpdGVzL2lzb29yZy9jb250ZW50cy9kYXRhL3N0YW5kYXJkLzAwLzcyLzcyNzEiLCJ1dWlkIjoiODNmNTNkMDctNzQxZC00N2M1LWEyNGItNmFkMzIyZjMxYTlkIiwidGl0bGUiOiJJU08vSUVDIDIzODItMjc6MTk5NCBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBWb2NhYnVsYXJ5IOKAlCBQYXJ0IDI3OiBPZmZpY2UgYXV0b21hdGlvbiIsInN0YXR1cyI6IldpdGhkcmF3biIsInllYXIiOjIwMTUsIm9yZGVyIjoxMDAsInRleHQiOiJJbnRlbmRlZCB0byBmYWNpbGl0YXRlIGludGVybmF0aW9uYWwgY29tbXVuaWNhdGlvbiBpbiBvZmZpY2UgYXV0b21hdGlvbi4gUHJlc2VudHMsIGluIHR3byBsYW5ndWFnZXMsIHRlcm1zIGFuZCBkZWZpbml0aW9ucyBvZiBzZWxlY3RlZCBjb25jZXB0cyByZWxldmFudCB0byB0aGUgZmllbGQgb2Ygb2ZmaWNlIGF1dG9tYXRpb24gYW5kIGlkZW50aWZpZXMgcmVsYXRpb25zaGlwcyBiZXR3ZWVuIHRoZSBlbnRyaWVzLiBEZWZpbmVzIGNvbmNlcHRzIHJlbGF0ZWQgdG8gb2ZmaWNlIGF1dG9tYXRpb24sIGVsZWN0cm9uaWMgbWFpbCwgYW5kIHRleHQsIHZvaWNlIGFuZCBpbWFnZSB0cmFuc21pc3Npb24uICIsIm9iamVjdElEIjoiNzI3MV8wIiwiX2hpZ2hsaWdodFJlc3VsdCI6eyJ0aXRsZSI6eyJ2YWx1ZSI6IjxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gPGVtPjIzODI8L2VtPi0yNzoxOTk0IEluZm9ybWF0aW9uIHRlY2hub2xvZ3kg4oCUIFZvY2FidWxhcnkg4oCUIFBhcnQgMjc6IE9mZmljZSBhdXRvbWF0aW9uIiwibWF0Y2hMZXZlbCI6ImZ1bGwiLCJmdWxseUhpZ2hsaWdodGVkIjpmYWxzZSwibWF0Y2hlZFdvcmRzIjpbImlzbyIsImllYyIsIjIzODIiXX0sInRleHQiOnsidmFsdWUiOiJJbnRlbmRlZCB0byBmYWNpbGl0YXRlIGludGVybmF0aW9uYWwgY29tbXVuaWNhdGlvbiBpbiBvZmZpY2UgYXV0b21hdGlvbi4gUHJlc2VudHMsIGluIHR3byBsYW5ndWFnZXMsIHRlcm1zIGFuZCBkZWZpbml0aW9ucyBvZiBzZWxlY3RlZCBjb25jZXB0cyByZWxldmFudCB0byB0aGUgZmllbGQgb2Ygb2ZmaWNlIGF1dG9tYXRpb24gYW5kIGlkZW50aWZpZXMgcmVsYXRpb25zaGlwcyBiZXR3ZWVuIHRoZSBlbnRyaWVzLiBEZWZpbmVzIGNvbmNlcHRzIHJlbGF0ZWQgdG8gb2ZmaWNlIGF1dG9tYXRpb24sIGVsZWN0cm9uaWMgbWFpbCwgYW5kIHRleHQsIHZvaWNlIGFuZCBpbWFnZSB0cmFuc21pc3Npb24uICIsIm1hdGNoTGV2ZWwiOiJub25lIiwibWF0Y2hlZFdvcmRzIjpbXX19fSx7ImNhdGVnb3J5Ijoic3RhbmRhcmQiLCJwYXRoIjoiL3NpdGVzL2lzb29yZy9jb250ZW50cy9kYXRhL3N0YW5kYXJkLzAwLzcyLzcyNzAiLCJ1dWlkIjoiYjg1NjAzNzUtZmMwOS00NmYxLTgyZmItMmI2NTAwYTExMWQ4IiwidGl0bGUiOiJJU08vSUVDIDIzODItMjY6MTk5MyBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBWb2NhYnVsYXJ5IOKAlCBQYXJ0IDI2OiBPcGVuIHN5c3RlbXMgaW50ZXJjb25uZWN0aW9uIiwic3RhdHVzIjoiV2l0aGRyYXduIiwieWVhciI6MjAxNSwib3JkZXIiOjEwMCwidGV4dCI6IlByZXNlbnRzLCBpbiBFbmdsaXNoIGFuZCBGcmVuY2gsIDY2IHRlcm1zIGluIHRoZSBmb2xsb3dpbmcgZmllbGRzOiBnZW5lcmFsIHRlcm1zLCBsYXllcnMsIHNlcnZpY2VzIGFuZCBwcm90b2NvbHMsIGNvbm5lY3Rpb24sIGFwcGxpY2F0aW9uIHNlcnZpY2UgZWxlbWVudHMsIG1pc2NlbGxhbmVvdXMuIEluIG9yZGVyIHRvIGZhY2lsaXRhdGUgdGhlaXIgdHJhbnNsYXRpb24gaW50byBvdGhlciBsYW5ndWFnZXMsIHRoZSBkZWZpbml0aW9ucyBhcmUgZHJhZnRlZCBzbyBhcyB0byBhdm9pZCwgYXMgZmFyIGFzIHBvc3NpYmxlLCBhbnkgcGVjdWxpYXJpdHkgYXR0YWNoZWQgdG8gdGhlIGxhbmd1YWdlLiAiLCJvYmplY3RJRCI6IjcyNzBfMCIsIl9oaWdobGlnaHRSZXN1bHQiOnsidGl0bGUiOnsidmFsdWUiOiI8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDxlbT4yMzgyPC9lbT4tMjY6MTk5MyBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBWb2NhYnVsYXJ5IOKAlCBQYXJ0IDI2OiBPcGVuIHN5c3RlbXMgaW50ZXJjb25uZWN0aW9uIiwibWF0Y2hMZXZlbCI6ImZ1bGwiLCJmdWxseUhpZ2hsaWdodGVkIjpmYWxzZSwibWF0Y2hlZFdvcmRzIjpbImlzbyIsImllYyIsIjIzODIiXX0sInRleHQiOnsidmFsdWUiOiJQcmVzZW50cywgaW4gRW5nbGlzaCBhbmQgRnJlbmNoLCA2NiB0ZXJtcyBpbiB0aGUgZm9sbG93aW5nIGZpZWxkczogZ2VuZXJhbCB0ZXJtcywgbGF5ZXJzLCBzZXJ2aWNlcyBhbmQgcHJvdG9jb2xzLCBjb25uZWN0aW9uLCBhcHBsaWNhdGlvbiBzZXJ2aWNlIGVsZW1lbnRzLCBtaXNjZWxsYW5lb3VzLiBJbiBvcmRlciB0byBmYWNpbGl0YXRlIHRoZWlyIHRyYW5zbGF0aW9uIGludG8gb3RoZXIgbGFuZ3VhZ2VzLCB0aGUgZGVmaW5pdGlvbnMgYXJlIGRyYWZ0ZWQgc28gYXMgdG8gYXZvaWQsIGFzIGZhciBhcyBwb3NzaWJsZSwgYW55IHBlY3VsaWFyaXR5IGF0dGFjaGVkIHRvIHRoZSBsYW5ndWFnZS4gIiwibWF0Y2hMZXZlbCI6Im5vbmUiLCJtYXRjaGVkV29yZHMiOltdfX19LHsiY2F0ZWdvcnkiOiJzdGFuZGFyZCIsInBhdGgiOiIvc2l0ZXMvaXNvb3JnL2NvbnRlbnRzL2RhdGEvc3RhbmRhcmQvMDAvNzIvNzI2OSIsInV1aWQiOiI1MWEwNDM5My01MmE4LTQ0NDItODNkZi1kODZjOWQ5ZTFiZGIiLCJ0aXRsZSI6IklTTy9JRUMgMjM4Mi0yNToxOTkyIEluZm9ybWF0aW9uIHRlY2hub2xvZ3kg4oCUIFZvY2FidWxhcnkg4oCUIFBhcnQgMjU6IExvY2FsIGFyZWEgbmV0d29ya3MiLCJzdGF0dXMiOiJXaXRoZHJhd24iLCJ5ZWFyIjoyMDE1LCJvcmRlciI6MTAwLCJ0ZXh0IjoiRGVmaW5lcyBkaWZmZXJlbnQgdHlwZXMgb2YgbG9jYWwgYXJlYSBuZXR3b3JrcywgY29uY2VwdHMgcmVsYXRpbmcgdG8gZGV2aWNlcywgdG8gdHJhbnNtaXNzaW9ucyBhbmQgdGhlIHByb2JsZW1zIHRoYXQgY2FuIGFwcGVhciwgYW5kIGFsc28gcHJvdG9jb2xzIHRoYXQgZ292ZXJuIGV4Y2hhbmdlcywgaW4gdG90YWwgNzUgdGVybXMgaW4gRW5nbGlzaCBhbmQgRnJlbmNoLiBJbmNsdWRlcyBhbHBoYWJldGljIGluZGljZXMgb2YgdGhlIHRlcm1zIGluIEVuZ2xpc2ggYW5kIEZyZW5jaC4gIiwib2JqZWN0SUQiOiI3MjY5XzAiLCJfaGlnaGxpZ2h0UmVzdWx0Ijp7InRpdGxlIjp7InZhbHVlIjoiPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiA8ZW0+MjM4MjwvZW0+LTI1OjE5OTIgSW5mb3JtYXRpb24gdGVjaG5vbG9neSDigJQgVm9jYWJ1bGFyeSDigJQgUGFydCAyNTogTG9jYWwgYXJlYSBuZXR3b3JrcyIsIm1hdGNoTGV2ZWwiOiJmdWxsIiwiZnVsbHlIaWdobGlnaHRlZCI6ZmFsc2UsIm1hdGNoZWRXb3JkcyI6WyJpc28iLCJpZWMiLCIyMzgyIl19LCJ0ZXh0Ijp7InZhbHVlIjoiRGVmaW5lcyBkaWZmZXJlbnQgdHlwZXMgb2YgbG9jYWwgYXJlYSBuZXR3b3JrcywgY29uY2VwdHMgcmVsYXRpbmcgdG8gZGV2aWNlcywgdG8gdHJhbnNtaXNzaW9ucyBhbmQgdGhlIHByb2JsZW1zIHRoYXQgY2FuIGFwcGVhciwgYW5kIGFsc28gcHJvdG9jb2xzIHRoYXQgZ292ZXJuIGV4Y2hhbmdlcywgaW4gdG90YWwgNzUgdGVybXMgaW4gRW5nbGlzaCBhbmQgRnJlbmNoLiBJbmNsdWRlcyBhbHBoYWJldGljIGluZGljZXMgb2YgdGhlIHRlcm1zIGluIEVuZ2xpc2ggYW5kIEZyZW5jaC4gIiwibWF0Y2hMZXZlbCI6Im5vbmUiLCJtYXRjaGVkV29yZHMiOltdfX19LHsiY2F0ZWdvcnkiOiJzdGFuZGFyZCIsInBhdGgiOiIvc2l0ZXMvaXNvb3JnL2NvbnRlbnRzL2RhdGEvc3RhbmRhcmQvMDAvNzIvNzI2OCIsInV1aWQiOiJjNzdhZjYyZC1jYjkxLTQwMmMtODk4Ni1jNDBjZTY1ZGQ1MjAiLCJ0aXRsZSI6IklTTy9JRUMgMjM4Mi0yNDoxOTk1IEluZm9ybWF0aW9uIHRlY2hub2xvZ3kg4oCUIFZvY2FidWxhcnkg4oCUIFBhcnQgMjQ6IENvbXB1dGVyLWludGVncmF0ZWQgbWFudWZhY3R1cmluZyIsInN0YXR1cyI6IldpdGhkcmF3biIsInllYXIiOjIwMTUsIm9yZGVyIjoxMDAsInRleHQiOiJEZWZpbmVzIGNvbmNlcHRzIHJlbGF0ZWQgdG8gY29tcHV0ZXItaW50ZWdyYXRlZCBtYW51ZmFjdHVyaW5nLiAiLCJvYmplY3RJRCI6IjcyNjhfMCIsIl9oaWdobGlnaHRSZXN1bHQiOnsidGl0bGUiOnsidmFsdWUiOiI8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDxlbT4yMzgyPC9lbT4tMjQ6MTk5NSBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBWb2NhYnVsYXJ5IOKAlCBQYXJ0IDI0OiBDb21wdXRlci1pbnRlZ3JhdGVkIG1hbnVmYWN0dXJpbmciLCJtYXRjaExldmVsIjoiZnVsbCIsImZ1bGx5SGlnaGxpZ2h0ZWQiOmZhbHNlLCJtYXRjaGVkV29yZHMiOlsiaXNvIiwiaWVjIiwiMjM4MiJdfSwidGV4dCI6eyJ2YWx1ZSI6IkRlZmluZXMgY29uY2VwdHMgcmVsYXRlZCB0byBjb21wdXRlci1pbnRlZ3JhdGVkIG1hbnVmYWN0dXJpbmcuICIsIm1hdGNoTGV2ZWwiOiJub25lIiwibWF0Y2hlZFdvcmRzIjpbXX19fSx7ImNhdGVnb3J5Ijoic3RhbmRhcmQiLCJwYXRoIjoiL3NpdGVzL2lzb29yZy9jb250ZW50cy9kYXRhL3N0YW5kYXJkLzAwLzcyLzcyNjciLCJ1dWlkIjoiNjMzMDQyODMtMDVmNi00NDE0LTk2NDktNDVjYTM1ZjIxYzY5IiwidGl0bGUiOiJJU08vSUVDIDIzODItMjM6MTk5NCBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBWb2NhYnVsYXJ5IOKAlCBQYXJ0IDIzOiBUZXh0IHByb2Nlc3NpbmciLCJzdGF0dXMiOiJXaXRoZHJhd24iLCJ5ZWFyIjoyMDE1LCJvcmRlciI6MTAwLCJ0ZXh0IjoiUHJlc2VudHMsIGluIEVuZ2xpc2ggYW5kIEZyZW5jaCwgMTA2IHRlcm1zIGluIHRoZSBmb2xsb3dpbmcgZmllbGRzOiB0ZXh0IHByb2Nlc3NpbmcsIHRleHQgZWRpdG9ycywgdGV4dCBvdXRwdXQgYW5kIHRleHQgZWRpdGluZy4gSW4gb3JkZXIgdG8gZmFjaWxpdGF0ZSB0aGVpciB0cmFuc2xhdGlvbiBpbnRvIG90aGVyIGxhbmd1YWdlcywgdGhlIGRlZmluaXRpb25zIGFyZSBkcmFmdGVkIHNvIGFzIHRvIGF2b2lkLCBhcyBmYXIgYXMgcG9zc2libGUsIGFueSBwZWN1bGlhcml0eSBhdHRhY2hlZCB0byB0aGUgbGFuZ3VhZ2UuICIsIm9iamVjdElEIjoiNzI2N18wIiwiX2hpZ2hsaWdodFJlc3VsdCI6eyJ0aXRsZSI6eyJ2YWx1ZSI6IjxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gPGVtPjIzODI8L2VtPi0yMzoxOTk0IEluZm9ybWF0aW9uIHRlY2hub2xvZ3kg4oCUIFZvY2FidWxhcnkg4oCUIFBhcnQgMjM6IFRleHQgcHJvY2Vzc2luZyIsIm1hdGNoTGV2ZWwiOiJmdWxsIiwiZnVsbHlIaWdobGlnaHRlZCI6ZmFsc2UsIm1hdGNoZWRXb3JkcyI6WyJpc28iLCJpZWMiLCIyMzgyIl19LCJ0ZXh0Ijp7InZhbHVlIjoiUHJlc2VudHMsIGluIEVuZ2xpc2ggYW5kIEZyZW5jaCwgMTA2IHRlcm1zIGluIHRoZSBmb2xsb3dpbmcgZmllbGRzOiB0ZXh0IHByb2Nlc3NpbmcsIHRleHQgZWRpdG9ycywgdGV4dCBvdXRwdXQgYW5kIHRleHQgZWRpdGluZy4gSW4gb3JkZXIgdG8gZmFjaWxpdGF0ZSB0aGVpciB0cmFuc2xhdGlvbiBpbnRvIG90aGVyIGxhbmd1YWdlcywgdGhlIGRlZmluaXRpb25zIGFyZSBkcmFmdGVkIHNvIGFzIHRvIGF2b2lkLCBhcyBmYXIgYXMgcG9zc2libGUsIGFueSBwZWN1bGlhcml0eSBhdHRhY2hlZCB0byB0aGUgbGFuZ3VhZ2UuICIsIm1hdGNoTGV2ZWwiOiJub25lIiwibWF0Y2hlZFdvcmRzIjpbXX19fSx7ImNhdGVnb3J5Ijoic3RhbmRhcmQiLCJwYXRoIjoiL3NpdGVzL2lzb29yZy9jb250ZW50cy9kYXRhL3N0YW5kYXJkLzAwLzcyLzcyNjQiLCJ1dWlkIjoiNmYzZjRhOGYtZjc1Ni00NTI5LTk0ZWYtZTUwNzZmYjQ4YTEzIiwidGl0bGUiOiJJU08vSUVDIDIzODItMjA6MTk5MCBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBWb2NhYnVsYXJ5IOKAlCBQYXJ0IDIwOiBTeXN0ZW0gZGV2ZWxvcG1lbnQiLCJzdGF0dXMiOiJXaXRoZHJhd24iLCJ5ZWFyIjoyMDE1LCJvcmRlciI6MTAwLCJ0ZXh0IjoiU3JldmVzIHRvIGZhY2lsaXRhdGUgaW50ZXJuYXRpb25hbCBjb21tdW5pY2F0aW9uIGluIGluZm9ybWF0aW9uIHByb2Nlc3NpbmcuIFByZXNlbnRzIEVuZ2xpc2ggYW5kIEZyZW5jaCB0ZXJtcyBhbmQgZGVmaW5pdGlvbnMgb2Ygc2VsZWN0ZWQgY29uY2VwdHMgYXMgcmVnYXJkcyB0aGUgZmllbGQgb2YgaW5mb3JtYXRpb24gcHJvY2Vzc2luZyBhbmQgZGVmaW5lcyByZWxhdGlvbnNzaGlwcyBiZXR3ZWVuIHRoZSBlbnRyaWVzLiBUaGUgcHJvdmlkZWQgY29uY2VwdHMgY29uY2VybiBhIHN5c3RlbSBsaWZlIGN5Y2xlIHJhbmdpbmcgZnJvbSB0aGUgcmVxdWlyZW1lbnRzIGFuYWx5c2lzIHRvIHRoZSBpbXBsZW1lbnRhdGlvbiBpbmNsdWRpbmcgc3lzdGVtIGRlc2lnbiBhbmQgcXVhbGl0eSBhc3N1cmFuY2UuICIsIm9iamVjdElEIjoiNzI2NF8wIiwiX2hpZ2hsaWdodFJlc3VsdCI6eyJ0aXRsZSI6eyJ2YWx1ZSI6IjxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gPGVtPjIzODI8L2VtPi0yMDoxOTkwIEluZm9ybWF0aW9uIHRlY2hub2xvZ3kg4oCUIFZvY2FidWxhcnkg4oCUIFBhcnQgMjA6IFN5c3RlbSBkZXZlbG9wbWVudCIsIm1hdGNoTGV2ZWwiOiJmdWxsIiwiZnVsbHlIaWdobGlnaHRlZCI6ZmFsc2UsIm1hdGNoZWRXb3JkcyI6WyJpc28iLCJpZWMiLCIyMzgyIl19LCJ0ZXh0Ijp7InZhbHVlIjoiU3JldmVzIHRvIGZhY2lsaXRhdGUgaW50ZXJuYXRpb25hbCBjb21tdW5pY2F0aW9uIGluIGluZm9ybWF0aW9uIHByb2Nlc3NpbmcuIFByZXNlbnRzIEVuZ2xpc2ggYW5kIEZyZW5jaCB0ZXJtcyBhbmQgZGVmaW5pdGlvbnMgb2Ygc2VsZWN0ZWQgY29uY2VwdHMgYXMgcmVnYXJkcyB0aGUgZmllbGQgb2YgaW5mb3JtYXRpb24gcHJvY2Vzc2luZyBhbmQgZGVmaW5lcyByZWxhdGlvbnNzaGlwcyBiZXR3ZWVuIHRoZSBlbnRyaWVzLiBUaGUgcHJvdmlkZWQgY29uY2VwdHMgY29uY2VybiBhIHN5c3RlbSBsaWZlIGN5Y2xlIHJhbmdpbmcgZnJvbSB0aGUgcmVxdWlyZW1lbnRzIGFuYWx5c2lzIHRvIHRoZSBpbXBsZW1lbnRhdGlvbiBpbmNsdWRpbmcgc3lzdGVtIGRlc2lnbiBhbmQgcXVhbGl0eSBhc3N1cmFuY2UuICIsIm1hdGNoTGV2ZWwiOiJub25lIiwibWF0Y2hlZFdvcmRzIjpbXX19fSx7ImNhdGVnb3J5Ijoic3RhbmRhcmQiLCJwYXRoIjoiL3NpdGVzL2lzb29yZy9jb250ZW50cy9kYXRhL3N0YW5kYXJkLzAwLzcyLzcyNTkiLCJ1dWlkIjoiMWQyMjhjMmMtNGY0Yi00MmM4LTkwMjUtOTgwZGI0NGM3NWM1IiwidGl0bGUiOiJJU08vSUVDIDIzODItMTY6MTk5NiBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBWb2NhYnVsYXJ5IOKAlCBQYXJ0IDE2OiBJbmZvcm1hdGlvbiB0aGVvcnkiLCJzdGF0dXMiOiJXaXRoZHJhd24iLCJ5ZWFyIjoyMDE1LCJvcmRlciI6MTAwLCJvYmplY3RJRCI6IjcyNTlfMCIsIl9oaWdobGlnaHRSZXN1bHQiOnsidGl0bGUiOnsidmFsdWUiOiI8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDxlbT4yMzgyPC9lbT4tMTY6MTk5NiBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBWb2NhYnVsYXJ5IOKAlCBQYXJ0IDE2OiBJbmZvcm1hdGlvbiB0aGVvcnkiLCJtYXRjaExldmVsIjoiZnVsbCIsImZ1bGx5SGlnaGxpZ2h0ZWQiOmZhbHNlLCJtYXRjaGVkV29yZHMiOlsiaXNvIiwiaWVjIiwiMjM4MiJdfX19LHsiY2F0ZWdvcnkiOiJzdGFuZGFyZCIsInBhdGgiOiIvc2l0ZXMvaXNvb3JnL2NvbnRlbnRzL2RhdGEvc3RhbmRhcmQvMDAvNzIvNzI1NyIsInV1aWQiOiJmZTAxMWIyMC1lNmY3LTQ5OTAtYTFiMC0xMjNkMmY0NmM0ZmMiLCJ0aXRsZSI6IklTTy9JRUMgMjM4Mi0xNToxOTk5IEluZm9ybWF0aW9uIHRlY2hub2xvZ3kg4oCUIFZvY2FidWxhcnkg4oCUIFBhcnQgMTU6IFByb2dyYW1taW5nIGxhbmd1YWdlcyIsInN0YXR1cyI6IldpdGhkcmF3biIsInllYXIiOjIwMTUsIm9yZGVyIjoxMDAsIm9iamVjdElEIjoiNzI1N18wIiwiX2hpZ2hsaWdodFJlc3VsdCI6eyJ0aXRsZSI6eyJ2YWx1ZSI6IjxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gPGVtPjIzODI8L2VtPi0xNToxOTk5IEluZm9ybWF0aW9uIHRlY2hub2xvZ3kg4oCUIFZvY2FidWxhcnkg4oCUIFBhcnQgMTU6IFByb2dyYW1taW5nIGxhbmd1YWdlcyIsIm1hdGNoTGV2ZWwiOiJmdWxsIiwiZnVsbHlIaWdobGlnaHRlZCI6ZmFsc2UsIm1hdGNoZWRXb3JkcyI6WyJpc28iLCJpZWMiLCIyMzgyIl19fX0seyJjYXRlZ29yeSI6InN0YW5kYXJkIiwicGF0aCI6Ii9zaXRlcy9pc29vcmcvY29udGVudHMvZGF0YS9zdGFuZGFyZC8wMC83Mi83MjU1IiwidXVpZCI6ImQ1MTEwNTE0LTU2Y2ItNGU3Yy04YjM5LTliYzQxZDNhMGFiNCIsInRpdGxlIjoiSVNPL0lFQyAyMzgyLTE0OjE5OTcgSW5mb3JtYXRpb24gdGVjaG5vbG9neSDigJQgVm9jYWJ1bGFyeSDigJQgUGFydCAxNDogUmVsaWFiaWxpdHksIG1haW50YWluYWJpbGl0eSBhbmQgYXZhaWxhYmlsaXR5Iiwic3RhdHVzIjoiV2l0aGRyYXduIiwieWVhciI6MjAxNSwib3JkZXIiOjEwMCwib2JqZWN0SUQiOiI3MjU1XzAiLCJfaGlnaGxpZ2h0UmVzdWx0Ijp7InRpdGxlIjp7InZhbHVlIjoiPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiA8ZW0+MjM4MjwvZW0+LTE0OjE5OTcgSW5mb3JtYXRpb24gdGVjaG5vbG9neSDigJQgVm9jYWJ1bGFyeSDigJQgUGFydCAxNDogUmVsaWFiaWxpdHksIG1haW50YWluYWJpbGl0eSBhbmQgYXZhaWxhYmlsaXR5IiwibWF0Y2hMZXZlbCI6ImZ1bGwiLCJmdWxseUhpZ2hsaWdodGVkIjpmYWxzZSwibWF0Y2hlZFdvcmRzIjpbImlzbyIsImllYyIsIjIzODIiXX19fSx7ImNhdGVnb3J5Ijoic3RhbmRhcmQiLCJwYXRoIjoiL3NpdGVzL2lzb29yZy9jb250ZW50cy9kYXRhL3N0YW5kYXJkLzAwLzcyLzcyNTMiLCJ1dWlkIjoiNzI2NjNjNjItZTliMy00ZWNkLWI0OTEtYWIwZjhlNzdmMjRjIiwidGl0bGUiOiJJU08vSUVDIDIzODItMTM6MTk5NiBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBWb2NhYnVsYXJ5IOKAlCBQYXJ0IDEzOiBDb21wdXRlciBncmFwaGljcyIsInN0YXR1cyI6IldpdGhkcmF3biIsInllYXIiOjIwMTUsIm9yZGVyIjoxMDAsInRleHQiOiJEZWZpbmVzIGNvbmNlcHRzIHJlbGF0ZWQgdG8gY29tcHV0ZXIgZ3JhcGhpY3MgYW5kIHByZXNlbnRzIHRlcm1zIGFuZCBkZWZpbml0aW9ucyBvZiBzZWxlY3RlZCBjb25jZXB0cyByZWxldmFudCB0byB0aGUgZmllbGQgb2YgaW5mb3JtYXRpb24gdGVjaG5vbG9neSBhbmQgaWRlbnRpZmllcyByZWxhdGlvbnNoaXBzIGFtb25nIHRoZSBlbnRyaWVzLiBSZXBsYWNlcyB0aGUgZmlyc3QgZWRpdGlvbi4gIiwib2JqZWN0SUQiOiI3MjUzXzAiLCJfaGlnaGxpZ2h0UmVzdWx0Ijp7InRpdGxlIjp7InZhbHVlIjoiPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiA8ZW0+MjM4MjwvZW0+LTEzOjE5OTYgSW5mb3JtYXRpb24gdGVjaG5vbG9neSDigJQgVm9jYWJ1bGFyeSDigJQgUGFydCAxMzogQ29tcHV0ZXIgZ3JhcGhpY3MiLCJtYXRjaExldmVsIjoiZnVsbCIsImZ1bGx5SGlnaGxpZ2h0ZWQiOmZhbHNlLCJtYXRjaGVkV29yZHMiOlsiaXNvIiwiaWVjIiwiMjM4MiJdfSwidGV4dCI6eyJ2YWx1ZSI6IkRlZmluZXMgY29uY2VwdHMgcmVsYXRlZCB0byBjb21wdXRlciBncmFwaGljcyBhbmQgcHJlc2VudHMgdGVybXMgYW5kIGRlZmluaXRpb25zIG9mIHNlbGVjdGVkIGNvbmNlcHRzIHJlbGV2YW50IHRvIHRoZSBmaWVsZCBvZiBpbmZvcm1hdGlvbiB0ZWNobm9sb2d5IGFuZCBpZGVudGlmaWVzIHJlbGF0aW9uc2hpcHMgYW1vbmcgdGhlIGVudHJpZXMuIFJlcGxhY2VzIHRoZSBmaXJzdCBlZGl0aW9uLiAiLCJtYXRjaExldmVsIjoibm9uZSIsIm1hdGNoZWRXb3JkcyI6W119fX0seyJjYXRlZ29yeSI6InN0YW5kYXJkIiwicGF0aCI6Ii9zaXRlcy9pc29vcmcvY29udGVudHMvZGF0YS9zdGFuZGFyZC8wMC83Mi83MjQzIiwidXVpZCI6IjUyNTU2Mzg1LTQ3MDEtNGViNi04ZTY5LWYwMWY4NmEwNTM3YSIsInRpdGxlIjoiSVNPL0lFQyAyMzgyLTg6MTk5OCBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBWb2NhYnVsYXJ5IOKAlCBQYXJ0IDg6IFNlY3VyaXR5Iiwic3RhdHVzIjoiV2l0aGRyYXduIiwieWVhciI6MjAxNSwib3JkZXIiOjEwMCwib2JqZWN0SUQiOiI3MjQzXzAiLCJfaGlnaGxpZ2h0UmVzdWx0Ijp7InRpdGxlIjp7InZhbHVlIjoiPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiA8ZW0+MjM4MjwvZW0+LTg6MTk5OCBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBWb2NhYnVsYXJ5IOKAlCBQYXJ0IDg6IFNlY3VyaXR5IiwibWF0Y2hMZXZlbCI6ImZ1bGwiLCJmdWxseUhpZ2hsaWdodGVkIjpmYWxzZSwibWF0Y2hlZFdvcmRzIjpbImlzbyIsImllYyIsIjIzODIiXX19fSx7ImNhdGVnb3J5Ijoic3RhbmRhcmQiLCJwYXRoIjoiL3NpdGVzL2lzb29yZy9jb250ZW50cy9kYXRhL3N0YW5kYXJkLzAwLzcyLzcyNDEiLCJ1dWlkIjoiODkwNmZhNmItNmMzOC00NzVhLTg2YjUtZGJiYmE5YWJiOTA3IiwidGl0bGUiOiJJU08vSUVDIDIzODItNzoyMDAwIEluZm9ybWF0aW9uIHRlY2hub2xvZ3kg4oCUIFZvY2FidWxhcnkg4oCUIFBhcnQgNzogQ29tcHV0ZXIgcHJvZ3JhbW1pbmciLCJzdGF0dXMiOiJXaXRoZHJhd24iLCJ5ZWFyIjoyMDE1LCJvcmRlciI6MTAwLCJvYmplY3RJRCI6IjcyNDFfMCIsIl9oaWdobGlnaHRSZXN1bHQiOnsidGl0bGUiOnsidmFsdWUiOiI8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDxlbT4yMzgyPC9lbT4tNzoyMDAwIEluZm9ybWF0aW9uIHRlY2hub2xvZ3kg4oCUIFZvY2FidWxhcnkg4oCUIFBhcnQgNzogQ29tcHV0ZXIgcHJvZ3JhbW1pbmciLCJtYXRjaExldmVsIjoiZnVsbCIsImZ1bGx5SGlnaGxpZ2h0ZWQiOmZhbHNlLCJtYXRjaGVkV29yZHMiOlsiaXNvIiwiaWVjIiwiMjM4MiJdfX19LHsiY2F0ZWdvcnkiOiJzdGFuZGFyZCIsInBhdGgiOiIvc2l0ZXMvaXNvb3JnL2NvbnRlbnRzL2RhdGEvc3RhbmRhcmQvMDAvNzIvNzIyOSIsInV1aWQiOiJlZjcyZTc0MS0yYzc4LTRjZjAtYTc5OC1lOTlmNDU5YTM0ZDciLCJ0aXRsZSI6IklTTy9JRUMgMjM4Mi0xOjE5OTMgSW5mb3JtYXRpb24gdGVjaG5vbG9neSDigJQgVm9jYWJ1bGFyeSDigJQgUGFydCAxOiBGdW5kYW1lbnRhbCB0ZXJtcyIsInN0YXR1cyI6IldpdGhkcmF3biIsInllYXIiOjIwMTUsIm9yZGVyIjoxMDAsInRleHQiOiJQcmVzZW50cywgaW4gRW5nbGlzaCBhbmQgRnJlbmNoLCAxNDQgdGVybXMgaW4gdGhlIGZvbGxvd2luZyBmaWVsZHM6IGdlbmVyYWwgdGVybXMsIGluZm9ybWF0aW9uIHJlcHJlc2VudGF0aW9uLCBoYXJkd2FyZSwgc29mdHdhcmUsIHByb2dyYW1taW5nLCBhcHBsaWNhdGlvbnMgYW5kIGVuZCB1c2VyLCBjb21wdXRlciBzZWN1cml0eSwgZGF0YSBtYW5hZ2VtZW50LiBJbiBvcmRlciB0byBmYWNpbGl0YXRlIHRoZWlyIHRyYW5zbGF0aW9uIGludG8gb3RoZXIgbGFuZ3VhZ2VzLCB0aGUgZGVmaW5pdGlvbnMgYXJlIGRyYWZ0ZWQgc28gYXMgdG8gYXZvaWQsIGFzIGZhciBhcyBwb3NzaWJsZSwgYW55IHBlY3VsaWFyaXR5IGF0dGFjaGVkIHRvIHRoZSBsYW5ndWFnZS4gIiwib2JqZWN0SUQiOiI3MjI5XzAiLCJfaGlnaGxpZ2h0UmVzdWx0Ijp7InRpdGxlIjp7InZhbHVlIjoiPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiA8ZW0+MjM4MjwvZW0+LTE6MTk5MyBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBWb2NhYnVsYXJ5IOKAlCBQYXJ0IDE6IEZ1bmRhbWVudGFsIHRlcm1zIiwibWF0Y2hMZXZlbCI6ImZ1bGwiLCJmdWxseUhpZ2hsaWdodGVkIjpmYWxzZSwibWF0Y2hlZFdvcmRzIjpbImlzbyIsImllYyIsIjIzODIiXX0sInRleHQiOnsidmFsdWUiOiJQcmVzZW50cywgaW4gRW5nbGlzaCBhbmQgRnJlbmNoLCAxNDQgdGVybXMgaW4gdGhlIGZvbGxvd2luZyBmaWVsZHM6IGdlbmVyYWwgdGVybXMsIGluZm9ybWF0aW9uIHJlcHJlc2VudGF0aW9uLCBoYXJkd2FyZSwgc29mdHdhcmUsIHByb2dyYW1taW5nLCBhcHBsaWNhdGlvbnMgYW5kIGVuZCB1c2VyLCBjb21wdXRlciBzZWN1cml0eSwgZGF0YSBtYW5hZ2VtZW50LiBJbiBvcmRlciB0byBmYWNpbGl0YXRlIHRoZWlyIHRyYW5zbGF0aW9uIGludG8gb3RoZXIgbGFuZ3VhZ2VzLCB0aGUgZGVmaW5pdGlvbnMgYXJlIGRyYWZ0ZWQgc28gYXMgdG8gYXZvaWQsIGFzIGZhciBhcyBwb3NzaWJsZSwgYW55IHBlY3VsaWFyaXR5IGF0dGFjaGVkIHRvIHRoZSBsYW5ndWFnZS4gIiwibWF0Y2hMZXZlbCI6Im5vbmUiLCJtYXRjaGVkV29yZHMiOltdfX19LHsiY2F0ZWdvcnkiOiJzdGFuZGFyZCIsInBhdGgiOiIvc2l0ZXMvaXNvb3JnL2NvbnRlbnRzL2RhdGEvc3RhbmRhcmQvMDMvMDgvMzA4NTMiLCJ1dWlkIjoiMWZlNTJkZmQtYjU0NS00MWYzLTk1NDEtYmRkYjI0ODFhZDEzIiwidGl0bGUiOiJJU08vSUVDIDIzODItMTc6MTk5OSBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBWb2NhYnVsYXJ5IOKAlCBQYXJ0IDE3OiBEYXRhYmFzZXMiLCJzdGF0dXMiOiJXaXRoZHJhd24iLCJ5ZWFyIjoyMDE1LCJvcmRlciI6MTAwLCJvYmplY3RJRCI6IjMwODUzXzAiLCJfaGlnaGxpZ2h0UmVzdWx0Ijp7InRpdGxlIjp7InZhbHVlIjoiPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiA8ZW0+MjM4MjwvZW0+LTE3OjE5OTkgSW5mb3JtYXRpb24gdGVjaG5vbG9neSDigJQgVm9jYWJ1bGFyeSDigJQgUGFydCAxNzogRGF0YWJhc2VzIiwibWF0Y2hMZXZlbCI6ImZ1bGwiLCJmdWxseUhpZ2hsaWdodGVkIjpmYWxzZSwibWF0Y2hlZFdvcmRzIjpbImlzbyIsImllYyIsIjIzODIiXX19fSx7ImNhdGVnb3J5Ijoic3RhbmRhcmQiLCJwYXRoIjoiL3NpdGVzL2lzb29yZy9jb250ZW50cy9kYXRhL3N0YW5kYXJkLzAzLzA4LzMwODUxIiwidXVpZCI6IjFkMWJmMWUzLTMzMTItNDdjNC05YzYwLWE0MGYyM2E3OTc5YiIsInRpdGxlIjoiSVNPL0lFQyAyMzgyLTU6MTk5OSBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBWb2NhYnVsYXJ5IOKAlCBQYXJ0IDU6IFJlcHJlc2VudGF0aW9uIG9mIGRhdGEiLCJzdGF0dXMiOiJXaXRoZHJhd24iLCJ5ZWFyIjoyMDE1LCJvcmRlciI6MTAwLCJvYmplY3RJRCI6IjMwODUxXzAiLCJfaGlnaGxpZ2h0UmVzdWx0Ijp7InRpdGxlIjp7InZhbHVlIjoiPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiA8ZW0+MjM4MjwvZW0+LTU6MTk5OSBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBWb2NhYnVsYXJ5IOKAlCBQYXJ0IDU6IFJlcHJlc2VudGF0aW9uIG9mIGRhdGEiLCJtYXRjaExldmVsIjoiZnVsbCIsImZ1bGx5SGlnaGxpZ2h0ZWQiOmZhbHNlLCJtYXRjaGVkV29yZHMiOlsiaXNvIiwiaWVjIiwiMjM4MiJdfX19LHsiY2F0ZWdvcnkiOiJzdGFuZGFyZCIsInBhdGgiOiIvc2l0ZXMvaXNvb3JnL2NvbnRlbnRzL2RhdGEvc3RhbmRhcmQvMDIvNzkvMjc5MjIiLCJ1dWlkIjoiMTk5ZTc0MTctMTY4MC00Y2QwLWEyOWItNTAwNzE3MDYyODM4IiwidGl0bGUiOiJJU08vSUVDIDIzODItNDoxOTk5IEluZm9ybWF0aW9uIHRlY2hub2xvZ3kg4oCUIFZvY2FidWxhcnkg4oCUIFBhcnQgNDogT3JnYW5pemF0aW9uIG9mIGRhdGEiLCJzdGF0dXMiOiJXaXRoZHJhd24iLCJ5ZWFyIjoyMDE1LCJvcmRlciI6MTAwLCJvYmplY3RJRCI6IjI3OTIyXzAiLCJfaGlnaGxpZ2h0UmVzdWx0Ijp7InRpdGxlIjp7InZhbHVlIjoiPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiA8ZW0+MjM4MjwvZW0+LTQ6MTk5OSBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBWb2NhYnVsYXJ5IOKAlCBQYXJ0IDQ6IE9yZ2FuaXphdGlvbiBvZiBkYXRhIiwibWF0Y2hMZXZlbCI6ImZ1bGwiLCJmdWxseUhpZ2hsaWdodGVkIjpmYWxzZSwibWF0Y2hlZFdvcmRzIjpbImlzbyIsImllYyIsIjIzODIiXX19fSx7ImNhdGVnb3J5Ijoic3RhbmRhcmQiLCJwYXRoIjoiL3NpdGVzL2lzb29yZy9jb250ZW50cy9kYXRhL3N0YW5kYXJkLzAyLzY3LzI2NzM0IiwidXVpZCI6IjdhYTQ3MTA5LWQ2ODEtNDczYi1hYzdhLTlmYWNlOGViYTdlYyIsInRpdGxlIjoiSVNPL0lFQyAyMzgyLTE4OjE5OTkgSW5mb3JtYXRpb24gdGVjaG5vbG9neSDigJQgVm9jYWJ1bGFyeSDigJQgUGFydCAxODogRGlzdHJpYnV0ZWQgZGF0YSBwcm9jZXNzaW5nIiwic3RhdHVzIjoiV2l0aGRyYXduIiwieWVhciI6MjAxNSwib3JkZXIiOjEwMCwib2JqZWN0SUQiOiIyNjczNF8wIiwiX2hpZ2hsaWdodFJlc3VsdCI6eyJ0aXRsZSI6eyJ2YWx1ZSI6IjxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gPGVtPjIzODI8L2VtPi0xODoxOTk5IEluZm9ybWF0aW9uIHRlY2hub2xvZ3kg4oCUIFZvY2FidWxhcnkg4oCUIFBhcnQgMTg6IERpc3RyaWJ1dGVkIGRhdGEgcHJvY2Vzc2luZyIsIm1hdGNoTGV2ZWwiOiJmdWxsIiwiZnVsbHlIaWdobGlnaHRlZCI6ZmFsc2UsIm1hdGNoZWRXb3JkcyI6WyJpc28iLCJpZWMiLCIyMzgyIl19fX0seyJjYXRlZ29yeSI6InN0YW5kYXJkIiwicGF0aCI6Ii9zaXRlcy9pc29vcmcvY29udGVudHMvZGF0YS9zdGFuZGFyZC8wMi8xOC8yMTg0OCIsInV1aWQiOiIyM2RhMDhmNi03Nzc0LTRmMmEtYmUyZi02YmZjYWM1OTg3MGMiLCJ0aXRsZSI6IklTTy9JRUMgMjM4Mi0zNDoxOTk5IEluZm9ybWF0aW9uIHRlY2hub2xvZ3kg4oCUIFZvY2FidWxhcnkg4oCUIFBhcnQgMzQ6IEFydGlmaWNpYWwgaW50ZWxsaWdlbmNlIOKAlCBOZXVyYWwgbmV0d29ya3MiLCJzdGF0dXMiOiJXaXRoZHJhd24iLCJ5ZWFyIjoyMDE1LCJvcmRlciI6MTAwLCJvYmplY3RJRCI6IjIxODQ4XzAiLCJfaGlnaGxpZ2h0UmVzdWx0Ijp7InRpdGxlIjp7InZhbHVlIjoiPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiA8ZW0+MjM4MjwvZW0+LTM0OjE5OTkgSW5mb3JtYXRpb24gdGVjaG5vbG9neSDigJQgVm9jYWJ1bGFyeSDigJQgUGFydCAzNDogQXJ0aWZpY2lhbCBpbnRlbGxpZ2VuY2Ug4oCUIE5ldXJhbCBuZXR3b3JrcyIsIm1hdGNoTGV2ZWwiOiJmdWxsIiwiZnVsbHlIaWdobGlnaHRlZCI6ZmFsc2UsIm1hdGNoZWRXb3JkcyI6WyJpc28iLCJpZWMiLCIyMzgyIl19fX0seyJjYXRlZ29yeSI6InN0YW5kYXJkIiwicGF0aCI6Ii9zaXRlcy9pc29vcmcvY29udGVudHMvZGF0YS9zdGFuZGFyZC8wMi8xOC8yMTg0NiIsInV1aWQiOiI0NDU2ZmJhNy00MDI5LTRhMjgtOTQ0OS05NDcwNjQyYzM4ZGQiLCJ0aXRsZSI6IklTTy9JRUMgMjM4Mi0zMjoxOTk5IEluZm9ybWF0aW9uIHRlY2hub2xvZ3kg4oCUIFZvY2FidWxhcnkg4oCUIFBhcnQgMzI6IEVsZWN0cm9uaWMgTWFpbCIsInN0YXR1cyI6IldpdGhkcmF3biIsInllYXIiOjIwMTUsIm9yZGVyIjoxMDAsIm9iamVjdElEIjoiMjE4NDZfMCIsIl9oaWdobGlnaHRSZXN1bHQiOnsidGl0bGUiOnsidmFsdWUiOiI8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDxlbT4yMzgyPC9lbT4tMzI6MTk5OSBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBWb2NhYnVsYXJ5IOKAlCBQYXJ0IDMyOiBFbGVjdHJvbmljIE1haWwiLCJtYXRjaExldmVsIjoiZnVsbCIsImZ1bGx5SGlnaGxpZ2h0ZWQiOmZhbHNlLCJtYXRjaGVkV29yZHMiOlsiaXNvIiwiaWVjIiwiMjM4MiJdfX19LHsiY2F0ZWdvcnkiOiJzdGFuZGFyZCIsInBhdGgiOiIvc2l0ZXMvaXNvb3JnL2NvbnRlbnRzL2RhdGEvc3RhbmRhcmQvMDIvMTgvMjE4NDUiLCJ1dWlkIjoiYjg4OWIzMjQtNGM1MS00NGE2LTliY2MtNjM1MTRhZTRkZWNiIiwidGl0bGUiOiJJU08vSUVDIDIzODItMzE6MTk5NyBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBWb2NhYnVsYXJ5IOKAlCBQYXJ0IDMxOiBBcnRpZmljaWFsIGludGVsbGlnZW5jZSDigJQgTWFjaGluZSBsZWFybmluZyIsInN0YXR1cyI6IldpdGhkcmF3biIsInllYXIiOjIwMTUsIm9yZGVyIjoxMDAsIm9iamVjdElEIjoiMjE4NDVfMCIsIl9oaWdobGlnaHRSZXN1bHQiOnsidGl0bGUiOnsidmFsdWUiOiI8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDxlbT4yMzgyPC9lbT4tMzE6MTk5NyBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBWb2NhYnVsYXJ5IOKAlCBQYXJ0IDMxOiBBcnRpZmljaWFsIGludGVsbGlnZW5jZSDigJQgTWFjaGluZSBsZWFybmluZyIsIm1hdGNoTGV2ZWwiOiJmdWxsIiwiZnVsbHlIaWdobGlnaHRlZCI6ZmFsc2UsIm1hdGNoZWRXb3JkcyI6WyJpc28iLCJpZWMiLCIyMzgyIl19fX0seyJjYXRlZ29yeSI6InN0YW5kYXJkIiwicGF0aCI6Ii9zaXRlcy9pc29vcmcvY29udGVudHMvZGF0YS9zdGFuZGFyZC8wMi8wOS8yMDkyOSIsInV1aWQiOiJjMWJmOTFmOC0wMGE0LTRhNjctODZiZi0yMzgxYjRmODVlNDkiLCJ0aXRsZSI6IklTTy9JRUMgMjM4Mi05OjE5OTUgSW5mb3JtYXRpb24gdGVjaG5vbG9neSDigJQgVm9jYWJ1bGFyeSDigJQgUGFydCA5OiBEYXRhIGNvbW11bmljYXRpb24iLCJzdGF0dXMiOiJXaXRoZHJhd24iLCJ5ZWFyIjoyMDE1LCJvcmRlciI6MTAwLCJ0ZXh0IjoiSXMgaW50ZW5kZWQgdG8gZmFjaWxpdGF0ZSBpbnRlcm5hdGlvbmFsIGNvbW11bmljYXRpb24gaW4gZGF0YSBjb21tdW5pY2F0aW9uLiBQcmVzZW50cywgaW4gdHdvIGxhbmd1YWdlcywgdGVybXMgYW5kIGRlZmluaXRpb25zIG9mIHNlbGVjdGVkIGNvbmNlcHRzIHJlbGV2YW50IHRvIHRoZSBmaWVsZCBvZiBkYXRhIGNvbW11bmljYXRpb24gYW5kIGlkZW50aWZpZXMgcmVsYXRpb25zaGlwcyBhbW9uZyB0aGUgZW50cmllcy4gIiwib2JqZWN0SUQiOiIyMDkyOV8wIiwiX2hpZ2hsaWdodFJlc3VsdCI6eyJ0aXRsZSI6eyJ2YWx1ZSI6IjxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gPGVtPjIzODI8L2VtPi05OjE5OTUgSW5mb3JtYXRpb24gdGVjaG5vbG9neSDigJQgVm9jYWJ1bGFyeSDigJQgUGFydCA5OiBEYXRhIGNvbW11bmljYXRpb24iLCJtYXRjaExldmVsIjoiZnVsbCIsImZ1bGx5SGlnaGxpZ2h0ZWQiOmZhbHNlLCJtYXRjaGVkV29yZHMiOlsiaXNvIiwiaWVjIiwiMjM4MiJdfSwidGV4dCI6eyJ2YWx1ZSI6IklzIGludGVuZGVkIHRvIGZhY2lsaXRhdGUgaW50ZXJuYXRpb25hbCBjb21tdW5pY2F0aW9uIGluIGRhdGEgY29tbXVuaWNhdGlvbi4gUHJlc2VudHMsIGluIHR3byBsYW5ndWFnZXMsIHRlcm1zIGFuZCBkZWZpbml0aW9ucyBvZiBzZWxlY3RlZCBjb25jZXB0cyByZWxldmFudCB0byB0aGUgZmllbGQgb2YgZGF0YSBjb21tdW5pY2F0aW9uIGFuZCBpZGVudGlmaWVzIHJlbGF0aW9uc2hpcHMgYW1vbmcgdGhlIGVudHJpZXMuICIsIm1hdGNoTGV2ZWwiOiJub25lIiwibWF0Y2hlZFdvcmRzIjpbXX19fSx7ImNhdGVnb3J5Ijoic3RhbmRhcmQiLCJwYXRoIjoiL3NpdGVzL2lzb29yZy9jb250ZW50cy9kYXRhL3N0YW5kYXJkLzA1LzczLzU3MzQwIiwidXVpZCI6Ijg4ZTBlNzBkLTAyY2YtNDQwYy1hYTFmLWVkZDNiMzBmMjM2OSIsInRpdGxlIjoiSVNPL0lFQyAyMzgyLTM2OjIwMDgvQ29yIDE6MjAxMiBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBWb2NhYnVsYXJ5IOKAlCBQYXJ0IDM2OiBMZWFybmluZywgZWR1Y2F0aW9uIGFuZCB0cmFpbmluZyDigJQgVGVjaG5pY2FsIENvcnJpZ2VuZHVtIDEiLCJzdGF0dXMiOiJXaXRoZHJhd24iLCJ5ZWFyIjoyMDEzLCJvcmRlciI6MTAwLCJvYmplY3RJRCI6IjU3MzQwXzAiLCJfaGlnaGxpZ2h0UmVzdWx0Ijp7InRpdGxlIjp7InZhbHVlIjoiPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiA8ZW0+MjM4MjwvZW0+LTM2OjIwMDgvQ29yIDE6MjAxMiBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBWb2NhYnVsYXJ5IOKAlCBQYXJ0IDM2OiBMZWFybmluZywgZWR1Y2F0aW9uIGFuZCB0cmFpbmluZyDigJQgVGVjaG5pY2FsIENvcnJpZ2VuZHVtIDEiLCJtYXRjaExldmVsIjoiZnVsbCIsImZ1bGx5SGlnaGxpZ2h0ZWQiOmZhbHNlLCJtYXRjaGVkV29yZHMiOlsiaXNvIiwiaWVjIiwiMjM4MiJdfX19LHsiY2F0ZWdvcnkiOiJzdGFuZGFyZCIsInBhdGgiOiIvc2l0ZXMvaXNvb3JnL2NvbnRlbnRzL2RhdGEvc3RhbmRhcmQvMDQvNjEvNDYxNTIiLCJ1dWlkIjoiY2UwMzlhNTctYzA5ZC00NWM3LWI0YjMtYjEzNTNjMGRjM2U1IiwidGl0bGUiOiJJU08vSUVDIDIzODItMzY6MjAwOCBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBWb2NhYnVsYXJ5IOKAlCBQYXJ0IDM2OiBMZWFybmluZywgZWR1Y2F0aW9uIGFuZCB0cmFpbmluZyIsInN0YXR1cyI6IldpdGhkcmF3biIsInllYXIiOjIwMTMsIm9yZGVyIjoxMDAsInRleHQiOiJJU08vSUVDIDIzODItMzY6MjAwOCBpcyBpbnRlbmRlZCB0byBmYWNpbGl0YXRlIGludGVybmF0aW9uYWwgY29tbXVuaWNhdGlvbiBpbiBpbmZvcm1hdGlvbiB0ZWNobm9sb2d5IGZvciBsZWFybmluZywgZWR1Y2F0aW9uIGFuZCB0cmFpbmluZyAuIEl0IHByZXNlbnRzLCBpbiB0d28gbGFuZ3VhZ2VzLCB0ZXJtcyBhbmQgZGVmaW5pdGlvbnMgb2Ygc2VsZWN0ZWQgY29uY2VwdHMgcmVsZXZhbnQgdG8gdGhlIGZpZWxkIG9mIGluZm9ybWF0aW9uIHRlY2hub2xvZ3kgZm9yIGxlYXJuaW5nLCBlZHVjYXRpb24gYW5kIHRyYWluaW5nLCBhbmQgaWRlbnRpZmllcyByZWxhdGlvbnNoaXBzIGFtb25nIHRoZSBlbnRyaWVzLiAiLCJvYmplY3RJRCI6IjQ2MTUyXzAiLCJfaGlnaGxpZ2h0UmVzdWx0Ijp7InRpdGxlIjp7InZhbHVlIjoiPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiA8ZW0+MjM4MjwvZW0+LTM2OjIwMDggSW5mb3JtYXRpb24gdGVjaG5vbG9neSDigJQgVm9jYWJ1bGFyeSDigJQgUGFydCAzNjogTGVhcm5pbmcsIGVkdWNhdGlvbiBhbmQgdHJhaW5pbmciLCJtYXRjaExldmVsIjoiZnVsbCIsImZ1bGx5SGlnaGxpZ2h0ZWQiOmZhbHNlLCJtYXRjaGVkV29yZHMiOlsiaXNvIiwiaWVjIiwiMjM4MiJdfSwidGV4dCI6eyJ2YWx1ZSI6IjxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gPGVtPjIzODI8L2VtPi0zNjoyMDA4IGlzIGludGVuZGVkIHRvIGZhY2lsaXRhdGUgaW50ZXJuYXRpb25hbCBjb21tdW5pY2F0aW9uIGluIGluZm9ybWF0aW9uIHRlY2hub2xvZ3kgZm9yIGxlYXJuaW5nLCBlZHVjYXRpb24gYW5kIHRyYWluaW5nIC4gSXQgcHJlc2VudHMsIGluIHR3byBsYW5ndWFnZXMsIHRlcm1zIGFuZCBkZWZpbml0aW9ucyBvZiBzZWxlY3RlZCBjb25jZXB0cyByZWxldmFudCB0byB0aGUgZmllbGQgb2YgaW5mb3JtYXRpb24gdGVjaG5vbG9neSBmb3IgbGVhcm5pbmcsIGVkdWNhdGlvbiBhbmQgdHJhaW5pbmcsIGFuZCBpZGVudGlmaWVzIHJlbGF0aW9uc2hpcHMgYW1vbmcgdGhlIGVudHJpZXMuICIsIm1hdGNoTGV2ZWwiOiJmdWxsIiwiZnVsbHlIaWdobGlnaHRlZCI6ZmFsc2UsIm1hdGNoZWRXb3JkcyI6WyJpc28iLCJpZWMiLCIyMzgyIl19fX0seyJjYXRlZ29yeSI6InN0YW5kYXJkIiwicGF0aCI6Ii9zaXRlcy9pc29vcmcvY29udGVudHMvZGF0YS9zdGFuZGFyZC8wMC83Mi83MjQwIiwidXVpZCI6IjNlYjM0ZDU1LWFhNzgtNDQxZi1hN2YzLWFjNDVlNGJjZDhlMSIsInRpdGxlIjoiSVNPL0lFQyAyMzgyLTc6MTk4OSBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBWb2NhYnVsYXJ5IOKAlCBQYXJ0IDc6IENvbXB1dGVyIHByb2dyYW1taW5nIiwic3RhdHVzIjoiV2l0aGRyYXduIiwieWVhciI6MjAwMCwib3JkZXIiOjEwMCwib2JqZWN0SUQiOiI3MjQwXzAiLCJfaGlnaGxpZ2h0UmVzdWx0Ijp7InRpdGxlIjp7InZhbHVlIjoiPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiA8ZW0+MjM4MjwvZW0+LTc6MTk4OSBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBWb2NhYnVsYXJ5IOKAlCBQYXJ0IDc6IENvbXB1dGVyIHByb2dyYW1taW5nIiwibWF0Y2hMZXZlbCI6ImZ1bGwiLCJmdWxseUhpZ2hsaWdodGVkIjpmYWxzZSwibWF0Y2hlZFdvcmRzIjpbImlzbyIsImllYyIsIjIzODIiXX19fSx7ImNhdGVnb3J5Ijoic3RhbmRhcmQiLCJwYXRoIjoiL3NpdGVzL2lzb29yZy9jb250ZW50cy9kYXRhL3N0YW5kYXJkLzAwLzcyLzcyNjAiLCJ1dWlkIjoiNTExMTZmYTktMTIxNy00NTVkLWFiZmItM2M1ZDU1M2Y5ZjJhIiwidGl0bGUiOiJJU08vSUVDIDIzODItMTc6MTk5NiBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBWb2NhYnVsYXJ5IOKAlCBQYXJ0IDE3OiBEYXRhYmFzZXMiLCJzdGF0dXMiOiJXaXRoZHJhd24iLCJ5ZWFyIjoxOTk5LCJvcmRlciI6MTAwLCJvYmplY3RJRCI6IjcyNjBfMCIsIl9oaWdobGlnaHRSZXN1bHQiOnsidGl0bGUiOnsidmFsdWUiOiI8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDxlbT4yMzgyPC9lbT4tMTc6MTk5NiBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBWb2NhYnVsYXJ5IOKAlCBQYXJ0IDE3OiBEYXRhYmFzZXMiLCJtYXRjaExldmVsIjoiZnVsbCIsImZ1bGx5SGlnaGxpZ2h0ZWQiOmZhbHNlLCJtYXRjaGVkV29yZHMiOlsiaXNvIiwiaWVjIiwiMjM4MiJdfX19LHsiY2F0ZWdvcnkiOiJzdGFuZGFyZCIsInBhdGgiOiIvc2l0ZXMvaXNvb3JnL2NvbnRlbnRzL2RhdGEvc3RhbmRhcmQvMDUvMzIvNTMyMzAiLCJ1dWlkIjoiMWFmMzg2MDMtZDNiNS00Y2JlLTk4NDctNjYyYTBlZTJkODIwIiwidGl0bGUiOiJJU08vSUVDIFRSIDMwMTEwOjIwMTUgSW5mb3JtYXRpb24gdGVjaG5vbG9neSDigJQgQ3Jvc3MganVyaXNkaWN0aW9uYWwgYW5kIHNvY2lldGFsIGFzcGVjdHMgb2YgaW1wbGVtZW50YXRpb24gb2YgYmlvbWV0cmljIHRlY2hub2xvZ2llcyDigJQgQmlvbWV0cmljcyBhbmQgY2hpbGRyZW4iLCJzdGF0dXMiOiJQdWJsaXNoZWQiLCJ5ZWFyIjoyMDIyLCJvcmRlciI6MTEsInRleHQiOiJJU08vSUVDIFRSIDMwMTEwOjIwMTUgYnVpbGRzIHVwb24gdGhlIGdlbmVyYWwgcmVjb21tZW5kYXRpb25zIGdpdmVuIGluIElTTy9JRUMgVFIgMjQ3MTTigJExLiBJdCBwcm92aWRlcyBndWlkYW5jZSBmb3IgdXNlcnMgKGFzIGRlZmluZWQgaW4gSVNPL0lFQyAyMzgy4oCRMzcpIG9mIGJpb21ldHJpYyByZWNvZ25pdGlvbiBzeXN0ZW1zIG9uIHNwZWNpZmljIHJlcXVpcmVtZW50cyBpbiByZWxhdGlvbiB0byBkZXBsb3ltZW50cyB3aGVuIGNoaWxkcmVuIGFyZSBpbmNsdWRlZCBhcyBzdWJqZWN0cyBpbiB0aGUgYmlvbWV0cmljIHByb2Nlc3MuICIsIm9iamVjdElEIjoiNTMyMzBfMCIsIl9oaWdobGlnaHRSZXN1bHQiOnsidGl0bGUiOnsidmFsdWUiOiI8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IFRSIDMwMTEwOjIwMTUgSW5mb3JtYXRpb24gdGVjaG5vbG9neSDigJQgQ3Jvc3MganVyaXNkaWN0aW9uYWwgYW5kIHNvY2lldGFsIGFzcGVjdHMgb2YgaW1wbGVtZW50YXRpb24gb2YgYmlvbWV0cmljIHRlY2hub2xvZ2llcyDigJQgQmlvbWV0cmljcyBhbmQgY2hpbGRyZW4iLCJtYXRjaExldmVsIjoicGFydGlhbCIsImZ1bGx5SGlnaGxpZ2h0ZWQiOmZhbHNlLCJtYXRjaGVkV29yZHMiOlsiaXNvIiwiaWVjIl19LCJ0ZXh0Ijp7InZhbHVlIjoiPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiBUUiAzMDExMDoyMDE1IGJ1aWxkcyB1cG9uIHRoZSBnZW5lcmFsIHJlY29tbWVuZGF0aW9ucyBnaXZlbiBpbiA8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IFRSIDI0NzE04oCRMS4gSXQgcHJvdmlkZXMgZ3VpZGFuY2UgZm9yIHVzZXJzIChhcyBkZWZpbmVkIGluIDxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gPGVtPjIzODI8L2VtPuKAkTM3KSBvZiBiaW9tZXRyaWMgcmVjb2duaXRpb24gc3lzdGVtcyBvbiBzcGVjaWZpYyByZXF1aXJlbWVudHMgaW4gcmVsYXRpb24gdG8gZGVwbG95bWVudHMgd2hlbiBjaGlsZHJlbiBhcmUgaW5jbHVkZWQgYXMgc3ViamVjdHMgaW4gdGhlIGJpb21ldHJpYyBwcm9jZXNzLiAiLCJtYXRjaExldmVsIjoiZnVsbCIsImZ1bGx5SGlnaGxpZ2h0ZWQiOmZhbHNlLCJtYXRjaGVkV29yZHMiOlsiaXNvIiwiaWVjIiwiMjM4MiJdfX19LHsiY2F0ZWdvcnkiOiJzdGFuZGFyZCIsInBhdGgiOiIvc2l0ZXMvaXNvb3JnL2NvbnRlbnRzL2RhdGEvc3RhbmRhcmQvMDIvMTAvMjEwNzEiLCJ1dWlkIjoiM2RlZTVkNmUtM2IwYS00OGQxLThhNTgtZDY0MjQ0ODg3MmVhIiwidGl0bGUiOiJJU08vSUVDIFRSIDEyMzgyOjE5OTIgUGVybXV0ZWQgaW5kZXggb2YgdGhlIHZvY2FidWxhcnkgb2YgaW5mb3JtYXRpb24gdGVjaG5vbG9neSIsInN0YXR1cyI6IlB1Ymxpc2hlZCIsInllYXIiOjIwMTMsIm9yZGVyIjoxMSwidGV4dCI6IkNvbnRhaW5zIGEgcGVybXV0ZWQgaW5kZXggb2YgYWxsIHRlcm1zIGluY2x1ZGVkIGluIHRoZSBwYXJ0cyAxIC0gMjggb2YgSVNPIDIzODIuIElmIGFueSBvZiB0aGVzZSBwYXJ0cyBoYXMgYmVlbiByZXZpc2VkLCB0aGUgcHJlc2VudCBUUiByZWZlcnMgdG8gdGhlIHJldmlzaW9uLiAiLCJvYmplY3RJRCI6IjIxMDcxXzAiLCJfaGlnaGxpZ2h0UmVzdWx0Ijp7InRpdGxlIjp7InZhbHVlIjoiPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiBUUiAxMjM4MjoxOTkyIFBlcm11dGVkIGluZGV4IG9mIHRoZSB2b2NhYnVsYXJ5IG9mIGluZm9ybWF0aW9uIHRlY2hub2xvZ3kiLCJtYXRjaExldmVsIjoicGFydGlhbCIsImZ1bGx5SGlnaGxpZ2h0ZWQiOmZhbHNlLCJtYXRjaGVkV29yZHMiOlsiaXNvIiwiaWVjIl19LCJ0ZXh0Ijp7InZhbHVlIjoiQ29udGFpbnMgYSBwZXJtdXRlZCBpbmRleCBvZiBhbGwgdGVybXMgaW5jbHVkZWQgaW4gdGhlIHBhcnRzIDEgLSAyOCBvZiA8ZW0+SVNPPC9lbT4gPGVtPjIzODI8L2VtPi4gSWYgYW55IG9mIHRoZXNlIHBhcnRzIGhhcyBiZWVuIHJldmlzZWQsIHRoZSBwcmVzZW50IFRSIHJlZmVycyB0byB0aGUgcmV2aXNpb24uICIsIm1hdGNoTGV2ZWwiOiJwYXJ0aWFsIiwiZnVsbHlIaWdobGlnaHRlZCI6ZmFsc2UsIm1hdGNoZWRXb3JkcyI6WyJpc28iLCIyMzgyIl19fX1dLCJuYkhpdHMiOjM1LCJwYWdlIjowLCJuYlBhZ2VzIjoxLCJoaXRzUGVyUGFnZSI6MTAwLCJleGhhdXN0aXZlTmJIaXRzIjp0cnVlLCJleGhhdXN0aXZlVHlwbyI6dHJ1ZSwiZXhoYXVzdGl2ZSI6eyJuYkhpdHMiOnRydWUsInR5cG8iOnRydWV9LCJxdWVyeSI6IklTTy9JRUMgMjM4MiIsInBhcmFtcyI6InF1ZXJ5PUlTTyUyRklFQysyMzgyJmhpdHNQZXJQYWdlPTEwMCZmaWx0ZXJzPWNhdGVnb3J5JTNBc3RhbmRhcmQiLCJxdWVyeUlEIjoiNTJjYWUxNjVhMGE0MzMwMmE1MDY3OWIxMTIwZTI2NDciLCJfYXV0b21hdGljSW5zaWdodHMiOnRydWUsInJlbmRlcmluZ0NvbnRlbnQiOnt9LCJwcm9jZXNzaW5nVGltZU1TIjoxLCJwcm9jZXNzaW5nVGltaW5nc01TIjp7Il9yZXF1ZXN0Ijp7InJvdW5kVHJpcCI6MzQyfSwidG90YWwiOjF9LCJzZXJ2ZXJUaW1lTVMiOjF9
  recorded_at: Thu, 28 Dec 2023 14:25:52 GMT
- request:
    method: post
    uri: https://www.itu.int/net4/ITU-T/search/GlobalSearch/RunSearch
    body:
      encoding: ASCII-8BIT
      string: json=%7B%22Input%22%3A%22ITU-T+K.20%22%2C%22Start%22%3A0%2C%22Rows%22%3A10%2C%22SortBy%22%3A%22RELEVANCE%22%2C%22ExactPhrase%22%3Afalse%2C%22CollectionName%22%3A%22General%22%2C%22CollectionGroup%22%3A%22Recommendations%22%2C%22Sector%22%3A%22t%22%2C%22Criterias%22%3A%5B%7B%22Name%22%3A%22Search+in%22%2C%22Criterias%22%3A%5B%7B%22Selected%22%3Afalse%2C%22Value%22%3A%22%22%2C%22Label%22%3A%22Name%22%2C%22Target%22%3A%22%2Fname_s%22%2C%22TypeName%22%3A%22CHECKBOX%22%2C%22GetCriteriaType%22%3A0%7D%2C%7B%22Selected%22%3Afalse%2C%22Value%22%3A%22%22%2C%22Label%22%3A%22Short+description%22%2C%22Target%22%3A%22%2Fshort_description_s%22%2C%22TypeName%22%3A%22CHECKBOX%22%2C%22GetCriteriaType%22%3A0%7D%2C%7B%22Selected%22%3Afalse%2C%22Value%22%3A%22%22%2C%22Label%22%3A%22File+content%22%2C%22Target%22%3A%22%2Ffile%22%2C%22TypeName%22%3A%22CHECKBOX%22%2C%22GetCriteriaType%22%3A0%7D%5D%2C%22ShowCheckbox%22%3Atrue%2C%22Selected%22%3Afalse%7D%5D%2C%22Topics%22%3A%22%22%2C%22ClientData%22%3A%7B%7D%2C%22Language%22%3A%22en%22%2C%22SearchType%22%3A%22All%22%7D
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_2) AppleWebKit/601.3.9 (KHTML,
        like Gecko) Version/9.0.2 Safari/601.3.9
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Host:
      - www.itu.int
      Content-Type:
      - application/x-www-form-urlencoded
      Content-Length:
      - '1059'
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=utf-8
      Set-Cookie:
      - BIGipServerV19edYz/rGMxUCJeS7ZH3w=!aB5hbmBGAQrSKeSrKNZ4ylMtnsGUZHY3/JqDiu1Ln0o8SEs5XR1q/tQIg4621qM8OhG+K4slRKN8XYg=;
        path=/; Httponly; Secure
      - GSCookie_CookieId=9YNoBiRaeym3Um1kMhcpwTvwuTWf9Pz3dzYy8h0JEOsTk86LVv3VbImAyknSr3l83UIeJ4cF9fvGjFgEloCPhA%3D%3D;
        expires=Sun, 28 Dec 2025 14:25:52 GMT; domain=www.itu.int; path=/
      - GSCookie_CookieId=HvzhsplzS2sEwhOrg7B01xVQMuHHc0I5WLDuhJjkHKmIaOaEysnB0qAXYQh%2BdCKGu33uooR6YvBUBNkg6p5D4Q%3D%3D;
        expires=Sun, 28 Dec 2025 14:25:52 GMT; domain=www.itu.int; path=/
      - GSCookie_QueryId=7097703; expires=Sun, 28 Dec 2025 14:25:52 GMT; domain=www.itu.int;
        path=/
      - GSCookie_QueryId=; expires=Sun, 28 Dec 2025 14:25:52 GMT; domain=www.itu.int;
        path=/
      - TS010592a8=018bf709fc6824872b32f4cd0dcaec54c66e9cba2e49ff2893b48ec38ff43968b0c81e0ef1b70cd7ecec85f3b752547eb02275c14a;
        Path=/;
      - TS0110b275=018bf709fc6824872b32f4cd0dcaec54c66e9cba2e49ff2893b48ec38ff43968b0c81e0ef1b70cd7ecec85f3b752547eb02275c14a;
        path=/; domain=www.itu.int
      - TS70351561027=08b49714d4ab2000226e693e805bc86405f069b2eb941ee9189a45086cef9e08f4d45b75b4b102150809e574fd1130007c1aa67c2b1acc1894ebbd0f3ce5200e98d3f1f12ccbd95e7a3067fb2ce8c2350ee296f827bd554584c72fccb4705562;
        Path=/
      Date:
      - Thu, 28 Dec 2023 14:25:52 GMT
      Transfer-Encoding:
      - chunked
    body:
      encoding: UTF-8
      string: '{"results":[{"Identifier":"11.1002/1000/15177-en","Title":"ITU-T K.20
        (11/2022): Resistibility of telecommunication equipment installed in a telecommunication
        centre to overvoltages and overcurrents","Collection":{"Name":"ITU-T Recommendations","Title":"ITU-T
        Recommendations","Description":"","Sector":"ITU-T","Group":"Recommendations"},"Redirection":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F15177-en\u0026position=10\u0026page=1","Language":"en","Dir":"ltr","Properties":[{"Title":"Publication
        date","Value":"March, 2023"}],"ExtractFileContent":"...[\r\n  \u0022    Recommendations
        Standardization Sector Recommendation ITU-T K.20 (11/2022)  SERIES K: Protection
        against interference  Resistibility of telecommunication equipment installed
        in a telecommunication cen...","Locations":[{"Id":"1","Type":"pdf","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F15177-en%3Flocatt%3Did%3A1%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-K.20-202211-I!!PDF-E\u0026type=items","Icon":"pdf-icon.png"},{"Id":"2","Type":"doc","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F15177-en%3Flocatt%3Did%3A2%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-K.20-202211-I!!MSW-E\u0026type=items","Icon":"doc-icon.png"}],"TopResult":false,"Words":{"ITU-T":true,"K.20":true},"Media":{"Identifier":"11.1002/1000/15177-en","Date":"March,
        2023","Url":null,"Name":"ITU-T K.20 (11/2022)","ParentHandleID":"","ParentName":null,"Type":null,"ContentText":null,"ImageUrl":null,"Tags":[]},"WordsMissing":false,"CollectionTypeCSSClass":"label-t-sector","LanguageCSSClass":"label-en"},{"Identifier":"11.1002/1000/14723-en","Title":"ITU-T
        K.20 (06/2021): Resistibility of telecommunication equipment installed in
        a telecommunication centre to overvoltages and overcurrents","Collection":{"Name":"ITU-T
        Recommendations","Title":"ITU-T Recommendations","Description":"","Sector":"ITU-T","Group":"Recommendations"},"Redirection":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F14723-en\u0026position=9\u0026page=1","Language":"en","Dir":"ltr","Properties":[{"Title":"Publication
        date","Value":"September, 2021"}],"ExtractFileContent":"...lecommunication
        centre to overvoltages and overcurrents  Recommendation  ITU-T  K.20           Rec.
        ITU-T K.20 (06/2021) i Recommendation ITU-T K.20 Resistibility of telecommunication
        equipment installed in a t...","Locations":[{"Id":"1","Type":"pdf","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F14723-en%3Flocatt%3Did%3A1%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-K.20-202106-S!!PDF-E\u0026type=items","Icon":"pdf-icon.png"},{"Id":"2","Type":"doc","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F14723-en%3Flocatt%3Did%3A2%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-K.20-202106-S!!MSW-E\u0026type=items","Icon":"doc-icon.png"}],"TopResult":false,"Words":{"ITU-T":true,"K.20":true},"Media":{"Identifier":"11.1002/1000/14723-en","Date":"September,
        2021","Url":null,"Name":"ITU-T K.20 (06/2021)","ParentHandleID":"","ParentName":null,"Type":null,"ContentText":null,"ImageUrl":null,"Tags":[]},"WordsMissing":false,"CollectionTypeCSSClass":"label-t-sector","LanguageCSSClass":"label-en"},{"Identifier":"11.1002/1000/14067-en","Title":"ITU-T
        K.20 (11/2019): Resistibility of telecommunication equipment installed in
        a telecommunication centre to overvoltages and overcurrents","Collection":{"Name":"ITU-T
        Recommendations","Title":"ITU-T Recommendations","Description":"","Sector":"ITU-T","Group":"Recommendations"},"Redirection":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F14067-en\u0026position=8\u0026page=1","Language":"en","Dir":"ltr","Properties":[{"Title":"Publication
        date","Value":"December, 2019"}],"ExtractFileContent":"...lecommunication
        centre to overvoltages and overcurrents  Recommendation  ITU-T  K.20           Rec.
        ITU-T K.20 (11/2019) i Recommendation ITU-T K.20 Resistibility of telecommunication
        equipment installed in a t...","Locations":[{"Id":"1","Type":"pdf","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F14067-en%3Flocatt%3Did%3A1%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-K.20-201911-S!!PDF-E\u0026type=items","Icon":"pdf-icon.png"},{"Id":"2","Type":"doc","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F14067-en%3Flocatt%3Did%3A2%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-K.20-201911-S!!MSW-E\u0026type=items","Icon":"doc-icon.png"},{"Id":"3","Type":"epu","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F14067-en%3Flocatt%3Did%3A3%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-K.20-201911-S!!EPB-E\u0026type=items","Icon":"epub-icon.png"}],"TopResult":false,"Words":{"ITU-T":true,"K.20":true},"Media":{"Identifier":"11.1002/1000/14067-en","Date":"December,
        2019","Url":null,"Name":"ITU-T K.20 (11/2019)","ParentHandleID":"","ParentName":null,"Type":null,"ContentText":null,"ImageUrl":null,"Tags":[]},"WordsMissing":false,"CollectionTypeCSSClass":"label-t-sector","LanguageCSSClass":"label-en"},{"Identifier":"11.1002/1000/13950-en","Title":"ITU-T
        K.20 (07/2019): Resistibility of telecommunication equipment installed in
        a telecommunication centre to overvoltages and overcurrents","Collection":{"Name":"ITU-T
        Recommendations","Title":"ITU-T Recommendations","Description":"","Sector":"ITU-T","Group":"Recommendations"},"Redirection":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F13950-en\u0026position=7\u0026page=1","Language":"en","Dir":"ltr","Properties":[{"Title":"Publication
        date","Value":"September, 2019"}],"ExtractFileContent":"...lecommunication
        centre to overvoltages and overcurrents  Recommendation  ITU-T  K.20           Rec.
        ITU-T K.20 (07/2019) i Recommendation ITU-T K.20 Resistibility of telecommunication
        equipment installed in a t...","Locations":[{"Id":"1","Type":"pdf","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F13950-en%3Flocatt%3Did%3A1%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-K.20-201907-S!!PDF-E\u0026type=items","Icon":"pdf-icon.png"},{"Id":"2","Type":"doc","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F13950-en%3Flocatt%3Did%3A2%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-K.20-201907-S!!MSW-E\u0026type=items","Icon":"doc-icon.png"}],"TopResult":false,"Words":{"ITU-T":true,"K.20":true},"Media":{"Identifier":"11.1002/1000/13950-en","Date":"September,
        2019","Url":null,"Name":"ITU-T K.20 (07/2019)","ParentHandleID":"","ParentName":null,"Type":null,"ContentText":null,"ImageUrl":null,"Tags":[]},"WordsMissing":false,"CollectionTypeCSSClass":"label-t-sector","LanguageCSSClass":"label-en"},{"Identifier":"11.1002/1000/13629-en","Title":"ITU-T
        K.20 (10/2018): Resistibility of telecommunication equipment installed in
        a telecommunication centre to overvoltages and overcurrents","Collection":{"Name":"ITU-T
        Recommendations","Title":"ITU-T Recommendations","Description":"","Sector":"ITU-T","Group":"Recommendations"},"Redirection":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F13629-en\u0026position=6\u0026page=1","Language":"en","Dir":"ltr","Properties":[{"Title":"Publication
        date","Value":"December, 2018"}],"ExtractFileContent":"...telecommunication
        centre to overvoltages and overcurrents  Recommendation  ITU-T  K.20         Rec.
        ITU-T K.20 (10/2018) i Recommendation ITU-T K.20 Resistibility of telecommunication
        equipment installed in a t...","Locations":[{"Id":"1","Type":"pdf","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F13629-en%3Flocatt%3Did%3A1%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-K.20-201810-S!!PDF-E\u0026type=items","Icon":"pdf-icon.png"},{"Id":"2","Type":"doc","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F13629-en%3Flocatt%3Did%3A2%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-K.20-201810-S!!MSW-E\u0026type=items","Icon":"doc-icon.png"}],"TopResult":false,"Words":{"ITU-T":true,"K.20":true},"Media":{"Identifier":"11.1002/1000/13629-en","Date":"December,
        2018","Url":null,"Name":"ITU-T K.20 (10/2018)","ParentHandleID":"","ParentName":null,"Type":null,"ContentText":null,"ImageUrl":null,"Tags":[]},"WordsMissing":false,"CollectionTypeCSSClass":"label-t-sector","LanguageCSSClass":"label-en"},{"Identifier":"11.1002/1000/13272-en","Title":"ITU-T
        K.20 (07/2017): Resistibility of telecommunication equipment installed in
        a telecommunication centre to overvoltages and overcurrents","Collection":{"Name":"ITU-T
        Recommendations","Title":"ITU-T Recommendations","Description":"","Sector":"ITU-T","Group":"Recommendations"},"Redirection":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F13272-en\u0026position=5\u0026page=1","Language":"en","Dir":"ltr","Properties":[{"Title":"Publication
        date","Value":"September, 2017"}],"ExtractFileContent":"...lecommunication
        centre to overvoltages and overcurrents  Recommendation  ITU-T  K.20           Rec.
        ITU-T K.20 (07/2017) i Recommendation ITU-T K.20 Resistibility of telecommunication
        equipment installed in a t...","Locations":[{"Id":"1","Type":"pdf","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F13272-en%3Flocatt%3Did%3A1%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-K.20-201707-S!!PDF-E\u0026type=items","Icon":"pdf-icon.png"},{"Id":"2","Type":"doc","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F13272-en%3Flocatt%3Did%3A2%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-K.20-201707-S!!MSW-E\u0026type=items","Icon":"doc-icon.png"}],"TopResult":false,"Words":{"ITU-T":true,"K.20":true},"Media":{"Identifier":"11.1002/1000/13272-en","Date":"September,
        2017","Url":null,"Name":"ITU-T K.20 (07/2017)","ParentHandleID":"","ParentName":null,"Type":null,"ContentText":null,"ImageUrl":null,"Tags":[]},"WordsMissing":false,"CollectionTypeCSSClass":"label-t-sector","LanguageCSSClass":"label-en"},{"Identifier":"11.1002/1000/13126-en","Title":"ITU-T
        K.20 (12/2016): Resistibility of telecommunication equipment installed in
        a telecommunication centre to overvoltages and overcurrents","Collection":{"Name":"ITU-T
        Recommendations","Title":"ITU-T Recommendations","Description":"","Sector":"ITU-T","Group":"Recommendations"},"Redirection":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F13126-en\u0026position=4\u0026page=1","Language":"en","Dir":"ltr","Properties":[{"Title":"Publication
        date","Value":"February, 2017"}],"ExtractFileContent":"...lecommunication
        centre to overvoltages and overcurrents  Recommendation  ITU-T  K.20           Rec.
        ITU-T K.20 (12/2016) i Recommendation ITU-T K.20 Resistibility of telecommunication
        equipment installed in a t...","Locations":[{"Id":"1","Type":"pdf","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F13126-en%3Flocatt%3Did%3A1%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-K.20-201612-S!!PDF-E\u0026type=items","Icon":"pdf-icon.png"},{"Id":"2","Type":"doc","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F13126-en%3Flocatt%3Did%3A2%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-K.20-201612-S!!MSW-E\u0026type=items","Icon":"doc-icon.png"}],"TopResult":false,"Words":{"ITU-T":true,"K.20":true},"Media":{"Identifier":"11.1002/1000/13126-en","Date":"February,
        2017","Url":null,"Name":"ITU-T K.20 (12/2016)","ParentHandleID":"","ParentName":null,"Type":null,"ContentText":null,"ImageUrl":null,"Tags":[]},"WordsMissing":false,"CollectionTypeCSSClass":"label-t-sector","LanguageCSSClass":"label-en"},{"Identifier":"11.1002/1000/12867-en","Title":"ITU-T
        K.20 (06/2016): Resistibility of telecommunication equipment installed in
        a telecommunication centre to overvoltages and overcurrents","Collection":{"Name":"ITU-T
        Recommendations","Title":"ITU-T Recommendations","Description":"","Sector":"ITU-T","Group":"Recommendations"},"Redirection":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F12867-en\u0026position=3\u0026page=1","Language":"en","Dir":"ltr","Properties":[{"Title":"Publication
        date","Value":"August, 2016"}],"ExtractFileContent":"...lecommunication centre
        to overvoltages and overcurrents  Recommendation  ITU-T  K.20           Rec.
        ITU-T K.20 (06/2016) i Recommendation ITU-T K.20 Resistibility of telecommunication
        equipment installed in a t...","Locations":[{"Id":"1","Type":"pdf","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F12867-en%3Flocatt%3Did%3A1%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-K.20-201606-S!!PDF-E\u0026type=items","Icon":"pdf-icon.png"},{"Id":"2","Type":"doc","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F12867-en%3Flocatt%3Did%3A2%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-K.20-201606-S!!MSW-E\u0026type=items","Icon":"doc-icon.png"}],"TopResult":false,"Words":{"ITU-T":true,"K.20":true},"Media":{"Identifier":"11.1002/1000/12867-en","Date":"August,
        2016","Url":null,"Name":"ITU-T K.20 (06/2016)","ParentHandleID":"","ParentName":null,"Type":null,"ContentText":null,"ImageUrl":null,"Tags":[]},"WordsMissing":false,"CollectionTypeCSSClass":"label-t-sector","LanguageCSSClass":"label-en"},{"Identifier":"11.1002/1000/12403-en","Title":"ITU-T
        K.20 (04/2015): Resistibility of telecommunication equipment installed in
        a telecommunication centre to overvoltages and overcurrents","Collection":{"Name":"ITU-T
        Recommendations","Title":"ITU-T Recommendations","Description":"","Sector":"ITU-T","Group":"Recommendations"},"Redirection":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F12403-en\u0026position=2\u0026page=1","Language":"en","Dir":"ltr","Properties":[{"Title":"Publication
        date","Value":"July, 2015"}],"ExtractFileContent":"...a telecommunication
        centre to overvoltages and overcurrents  Recommendation  ITU-T  K.20       Rec.
        ITU-T K.20 (04/2015) i Recommendation ITU-T K.20 Resistibility of telecommunication
        equipment installed in a  ...","Locations":[{"Id":"1","Type":"pdf","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F12403-en%3Flocatt%3Did%3A1%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-K.20-201504-S!!PDF-E\u0026type=items","Icon":"pdf-icon.png"},{"Id":"2","Type":"doc","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F12403-en%3Flocatt%3Did%3A2%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-K.20-201504-S!!MSW-E\u0026type=items","Icon":"doc-icon.png"}],"TopResult":false,"Words":{"ITU-T":true,"K.20":true},"Media":{"Identifier":"11.1002/1000/12403-en","Date":"July,
        2015","Url":null,"Name":"ITU-T K.20 (04/2015)","ParentHandleID":"","ParentName":null,"Type":null,"ContentText":null,"ImageUrl":null,"Tags":[]},"WordsMissing":false,"CollectionTypeCSSClass":"label-t-sector","LanguageCSSClass":"label-en"},{"Identifier":"11.1002/1000/11420-en","Title":"ITU-T
        K.20 (11/2011): Resistibility of telecommunication equipment installed in
        a telecommunications centre to overvoltages and overcurrents","Collection":{"Name":"ITU-T
        Recommendations","Title":"ITU-T Recommendations","Description":"","Sector":"ITU-T","Group":"Recommendations"},"Redirection":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F11420-en\u0026position=1\u0026page=1","Language":"en","Dir":"ltr","Properties":[{"Title":"Publication
        date","Value":"May, 2012"}],"ExtractFileContent":"...ecommunications centre
        to overvoltages and overcurrents  Recommendation  ITU-T  K.20           Rec.
        ITU-T K.20 (11/2011) i Recommendation ITU-T K.20 Resistibility of telecommunication
        equipment installed in a t...","Locations":[{"Id":"1","Type":"pdf","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F11420-en%3Flocatt%3Did%3A1%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-K.20-201111-S!!PDF-E\u0026type=items","Icon":"pdf-icon.png"},{"Id":"2","Type":"doc","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F11420-en%3Flocatt%3Did%3A2%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-K.20-201111-S!!MSW-E\u0026type=items","Icon":"doc-icon.png"}],"TopResult":false,"Words":{"ITU-T":true,"K.20":true},"Media":{"Identifier":"11.1002/1000/11420-en","Date":"May,
        2012","Url":null,"Name":"ITU-T K.20 (11/2011)","ParentHandleID":"","ParentName":null,"Type":null,"ContentText":null,"ImageUrl":null,"Tags":[]},"WordsMissing":false,"CollectionTypeCSSClass":"label-t-sector","LanguageCSSClass":"label-en"}],"input":"ITU-T
        K.20","totalAmount":5836,"collationQuery":"","attempt":0,"languageUpdated":false,"allowed":true}'
  recorded_at: Thu, 28 Dec 2023 14:25:53 GMT
- request:
    method: post
    uri: https://www.itu.int/net4/ITU-T/search/GlobalSearch/RunSearch
    body:
      encoding: ASCII-8BIT
      string: json=%7B%22Input%22%3A%22ITU-T+K.20%22%2C%22Start%22%3A0%2C%22Rows%22%3A10%2C%22SortBy%22%3A%22RELEVANCE%22%2C%22ExactPhrase%22%3Afalse%2C%22CollectionName%22%3A%22General%22%2C%22CollectionGroup%22%3A%22Recommendations%22%2C%22Sector%22%3A%22t%22%2C%22Criterias%22%3A%5B%7B%22Name%22%3A%22Search+in%22%2C%22Criterias%22%3A%5B%7B%22Selected%22%3Afalse%2C%22Value%22%3A%22%22%2C%22Label%22%3A%22Name%22%2C%22Target%22%3A%22%2Fname_s%22%2C%22TypeName%22%3A%22CHECKBOX%22%2C%22GetCriteriaType%22%3A0%7D%2C%7B%22Selected%22%3Afalse%2C%22Value%22%3A%22%22%2C%22Label%22%3A%22Short+description%22%2C%22Target%22%3A%22%2Fshort_description_s%22%2C%22TypeName%22%3A%22CHECKBOX%22%2C%22GetCriteriaType%22%3A0%7D%2C%7B%22Selected%22%3Afalse%2C%22Value%22%3A%22%22%2C%22Label%22%3A%22File+content%22%2C%22Target%22%3A%22%2Ffile%22%2C%22TypeName%22%3A%22CHECKBOX%22%2C%22GetCriteriaType%22%3A0%7D%5D%2C%22ShowCheckbox%22%3Atrue%2C%22Selected%22%3Afalse%7D%5D%2C%22Topics%22%3A%22%22%2C%22ClientData%22%3A%7B%7D%2C%22Language%22%3A%22en%22%2C%22SearchType%22%3A%22All%22%7D
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_2) AppleWebKit/601.3.9 (KHTML,
        like Gecko) Version/9.0.2 Safari/601.3.9
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Host:
      - www.itu.int
      Content-Type:
      - application/x-www-form-urlencoded
      Content-Length:
      - '1059'
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=utf-8
      Set-Cookie:
      - BIGipServerV19edYz/rGMxUCJeS7ZH3w=!DVtCLZ39uvNB58KrKNZ4ylMtnsGUZOffzjbOn5yU/RcGNN54xD0pcjGW7mLPKAMfhJ6xIBmTDt/poa8=;
        path=/; Httponly; Secure
      - GSCookie_CookieId=aLM1DtpQe731NPCWGwkOxD1Mcoj62xPHiA7gLvpCvqwZZCRDJLSyuzYDXXPvb7Dd5p5DM1uxEkLmxs2Hk%2FExrw%3D%3D;
        expires=Sun, 28 Dec 2025 14:25:52 GMT; domain=www.itu.int; path=/
      - GSCookie_CookieId=bGM5%2FiMTFVC3fNFEkHMDLYUAtAn4yRkBnRXoQKWvDIIfKzdrwF3vYyZwbfdu70DHL454ef5Q0TDqKZvKPyK4EA%3D%3D;
        expires=Sun, 28 Dec 2025 14:25:52 GMT; domain=www.itu.int; path=/
      - GSCookie_QueryId=7097702; expires=Sun, 28 Dec 2025 14:25:52 GMT; domain=www.itu.int;
        path=/
      - GSCookie_QueryId=; expires=Sun, 28 Dec 2025 14:25:52 GMT; domain=www.itu.int;
        path=/
      - TS010592a8=018bf709fc1057472b9ede1b7c4fb4859976326ef466d34ed58b8d7f11c84a3cfe9ce51cbb24ac0dde28b9efc2ddf74404f927709e;
        Path=/;
      - TS0110b275=018bf709fc1057472b9ede1b7c4fb4859976326ef466d34ed58b8d7f11c84a3cfe9ce51cbb24ac0dde28b9efc2ddf74404f927709e;
        path=/; domain=www.itu.int
      - TS70351561027=08b49714d4ab2000687032a8c3cf427f42e7a41eed5bbda7995334d127b98e4cf0894086f4f7484708feb1fd92113000e513d757169980b694ebbd0f3ce5200e8d9d26a781c91f03d72f70bcf317dcbeeb94d90646a03f163ccf1ee00f06aa73;
        Path=/
      Date:
      - Thu, 28 Dec 2023 14:25:52 GMT
      Transfer-Encoding:
      - chunked
    body:
      encoding: UTF-8
      string: '{"results":[{"Identifier":"11.1002/1000/15177-en","Title":"ITU-T K.20
        (11/2022): Resistibility of telecommunication equipment installed in a telecommunication
        centre to overvoltages and overcurrents","Collection":{"Name":"ITU-T Recommendations","Title":"ITU-T
        Recommendations","Description":"","Sector":"ITU-T","Group":"Recommendations"},"Redirection":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F15177-en\u0026position=10\u0026page=1","Language":"en","Dir":"ltr","Properties":[{"Title":"Publication
        date","Value":"March, 2023"}],"ExtractFileContent":"...[\r\n  \u0022    Recommendations
        Standardization Sector Recommendation ITU-T K.20 (11/2022)  SERIES K: Protection
        against interference  Resistibility of telecommunication equipment installed
        in a telecommunication cen...","Locations":[{"Id":"1","Type":"pdf","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F15177-en%3Flocatt%3Did%3A1%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-K.20-202211-I!!PDF-E\u0026type=items","Icon":"pdf-icon.png"},{"Id":"2","Type":"doc","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F15177-en%3Flocatt%3Did%3A2%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-K.20-202211-I!!MSW-E\u0026type=items","Icon":"doc-icon.png"}],"TopResult":false,"Words":{"ITU-T":true,"K.20":true},"Media":{"Identifier":"11.1002/1000/15177-en","Date":"March,
        2023","Url":null,"Name":"ITU-T K.20 (11/2022)","ParentHandleID":"","ParentName":null,"Type":null,"ContentText":null,"ImageUrl":null,"Tags":[]},"WordsMissing":false,"CollectionTypeCSSClass":"label-t-sector","LanguageCSSClass":"label-en"},{"Identifier":"11.1002/1000/14723-en","Title":"ITU-T
        K.20 (06/2021): Resistibility of telecommunication equipment installed in
        a telecommunication centre to overvoltages and overcurrents","Collection":{"Name":"ITU-T
        Recommendations","Title":"ITU-T Recommendations","Description":"","Sector":"ITU-T","Group":"Recommendations"},"Redirection":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F14723-en\u0026position=9\u0026page=1","Language":"en","Dir":"ltr","Properties":[{"Title":"Publication
        date","Value":"September, 2021"}],"ExtractFileContent":"...lecommunication
        centre to overvoltages and overcurrents  Recommendation  ITU-T  K.20           Rec.
        ITU-T K.20 (06/2021) i Recommendation ITU-T K.20 Resistibility of telecommunication
        equipment installed in a t...","Locations":[{"Id":"1","Type":"pdf","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F14723-en%3Flocatt%3Did%3A1%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-K.20-202106-S!!PDF-E\u0026type=items","Icon":"pdf-icon.png"},{"Id":"2","Type":"doc","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F14723-en%3Flocatt%3Did%3A2%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-K.20-202106-S!!MSW-E\u0026type=items","Icon":"doc-icon.png"}],"TopResult":false,"Words":{"ITU-T":true,"K.20":true},"Media":{"Identifier":"11.1002/1000/14723-en","Date":"September,
        2021","Url":null,"Name":"ITU-T K.20 (06/2021)","ParentHandleID":"","ParentName":null,"Type":null,"ContentText":null,"ImageUrl":null,"Tags":[]},"WordsMissing":false,"CollectionTypeCSSClass":"label-t-sector","LanguageCSSClass":"label-en"},{"Identifier":"11.1002/1000/14067-en","Title":"ITU-T
        K.20 (11/2019): Resistibility of telecommunication equipment installed in
        a telecommunication centre to overvoltages and overcurrents","Collection":{"Name":"ITU-T
        Recommendations","Title":"ITU-T Recommendations","Description":"","Sector":"ITU-T","Group":"Recommendations"},"Redirection":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F14067-en\u0026position=8\u0026page=1","Language":"en","Dir":"ltr","Properties":[{"Title":"Publication
        date","Value":"December, 2019"}],"ExtractFileContent":"...lecommunication
        centre to overvoltages and overcurrents  Recommendation  ITU-T  K.20           Rec.
        ITU-T K.20 (11/2019) i Recommendation ITU-T K.20 Resistibility of telecommunication
        equipment installed in a t...","Locations":[{"Id":"1","Type":"pdf","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F14067-en%3Flocatt%3Did%3A1%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-K.20-201911-S!!PDF-E\u0026type=items","Icon":"pdf-icon.png"},{"Id":"2","Type":"doc","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F14067-en%3Flocatt%3Did%3A2%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-K.20-201911-S!!MSW-E\u0026type=items","Icon":"doc-icon.png"},{"Id":"3","Type":"epu","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F14067-en%3Flocatt%3Did%3A3%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-K.20-201911-S!!EPB-E\u0026type=items","Icon":"epub-icon.png"}],"TopResult":false,"Words":{"ITU-T":true,"K.20":true},"Media":{"Identifier":"11.1002/1000/14067-en","Date":"December,
        2019","Url":null,"Name":"ITU-T K.20 (11/2019)","ParentHandleID":"","ParentName":null,"Type":null,"ContentText":null,"ImageUrl":null,"Tags":[]},"WordsMissing":false,"CollectionTypeCSSClass":"label-t-sector","LanguageCSSClass":"label-en"},{"Identifier":"11.1002/1000/13950-en","Title":"ITU-T
        K.20 (07/2019): Resistibility of telecommunication equipment installed in
        a telecommunication centre to overvoltages and overcurrents","Collection":{"Name":"ITU-T
        Recommendations","Title":"ITU-T Recommendations","Description":"","Sector":"ITU-T","Group":"Recommendations"},"Redirection":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F13950-en\u0026position=7\u0026page=1","Language":"en","Dir":"ltr","Properties":[{"Title":"Publication
        date","Value":"September, 2019"}],"ExtractFileContent":"...lecommunication
        centre to overvoltages and overcurrents  Recommendation  ITU-T  K.20           Rec.
        ITU-T K.20 (07/2019) i Recommendation ITU-T K.20 Resistibility of telecommunication
        equipment installed in a t...","Locations":[{"Id":"1","Type":"pdf","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F13950-en%3Flocatt%3Did%3A1%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-K.20-201907-S!!PDF-E\u0026type=items","Icon":"pdf-icon.png"},{"Id":"2","Type":"doc","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F13950-en%3Flocatt%3Did%3A2%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-K.20-201907-S!!MSW-E\u0026type=items","Icon":"doc-icon.png"}],"TopResult":false,"Words":{"ITU-T":true,"K.20":true},"Media":{"Identifier":"11.1002/1000/13950-en","Date":"September,
        2019","Url":null,"Name":"ITU-T K.20 (07/2019)","ParentHandleID":"","ParentName":null,"Type":null,"ContentText":null,"ImageUrl":null,"Tags":[]},"WordsMissing":false,"CollectionTypeCSSClass":"label-t-sector","LanguageCSSClass":"label-en"},{"Identifier":"11.1002/1000/13629-en","Title":"ITU-T
        K.20 (10/2018): Resistibility of telecommunication equipment installed in
        a telecommunication centre to overvoltages and overcurrents","Collection":{"Name":"ITU-T
        Recommendations","Title":"ITU-T Recommendations","Description":"","Sector":"ITU-T","Group":"Recommendations"},"Redirection":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F13629-en\u0026position=6\u0026page=1","Language":"en","Dir":"ltr","Properties":[{"Title":"Publication
        date","Value":"December, 2018"}],"ExtractFileContent":"...telecommunication
        centre to overvoltages and overcurrents  Recommendation  ITU-T  K.20         Rec.
        ITU-T K.20 (10/2018) i Recommendation ITU-T K.20 Resistibility of telecommunication
        equipment installed in a t...","Locations":[{"Id":"1","Type":"pdf","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F13629-en%3Flocatt%3Did%3A1%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-K.20-201810-S!!PDF-E\u0026type=items","Icon":"pdf-icon.png"},{"Id":"2","Type":"doc","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F13629-en%3Flocatt%3Did%3A2%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-K.20-201810-S!!MSW-E\u0026type=items","Icon":"doc-icon.png"}],"TopResult":false,"Words":{"ITU-T":true,"K.20":true},"Media":{"Identifier":"11.1002/1000/13629-en","Date":"December,
        2018","Url":null,"Name":"ITU-T K.20 (10/2018)","ParentHandleID":"","ParentName":null,"Type":null,"ContentText":null,"ImageUrl":null,"Tags":[]},"WordsMissing":false,"CollectionTypeCSSClass":"label-t-sector","LanguageCSSClass":"label-en"},{"Identifier":"11.1002/1000/13272-en","Title":"ITU-T
        K.20 (07/2017): Resistibility of telecommunication equipment installed in
        a telecommunication centre to overvoltages and overcurrents","Collection":{"Name":"ITU-T
        Recommendations","Title":"ITU-T Recommendations","Description":"","Sector":"ITU-T","Group":"Recommendations"},"Redirection":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F13272-en\u0026position=5\u0026page=1","Language":"en","Dir":"ltr","Properties":[{"Title":"Publication
        date","Value":"September, 2017"}],"ExtractFileContent":"...lecommunication
        centre to overvoltages and overcurrents  Recommendation  ITU-T  K.20           Rec.
        ITU-T K.20 (07/2017) i Recommendation ITU-T K.20 Resistibility of telecommunication
        equipment installed in a t...","Locations":[{"Id":"1","Type":"pdf","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F13272-en%3Flocatt%3Did%3A1%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-K.20-201707-S!!PDF-E\u0026type=items","Icon":"pdf-icon.png"},{"Id":"2","Type":"doc","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F13272-en%3Flocatt%3Did%3A2%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-K.20-201707-S!!MSW-E\u0026type=items","Icon":"doc-icon.png"}],"TopResult":false,"Words":{"ITU-T":true,"K.20":true},"Media":{"Identifier":"11.1002/1000/13272-en","Date":"September,
        2017","Url":null,"Name":"ITU-T K.20 (07/2017)","ParentHandleID":"","ParentName":null,"Type":null,"ContentText":null,"ImageUrl":null,"Tags":[]},"WordsMissing":false,"CollectionTypeCSSClass":"label-t-sector","LanguageCSSClass":"label-en"},{"Identifier":"11.1002/1000/13126-en","Title":"ITU-T
        K.20 (12/2016): Resistibility of telecommunication equipment installed in
        a telecommunication centre to overvoltages and overcurrents","Collection":{"Name":"ITU-T
        Recommendations","Title":"ITU-T Recommendations","Description":"","Sector":"ITU-T","Group":"Recommendations"},"Redirection":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F13126-en\u0026position=4\u0026page=1","Language":"en","Dir":"ltr","Properties":[{"Title":"Publication
        date","Value":"February, 2017"}],"ExtractFileContent":"...lecommunication
        centre to overvoltages and overcurrents  Recommendation  ITU-T  K.20           Rec.
        ITU-T K.20 (12/2016) i Recommendation ITU-T K.20 Resistibility of telecommunication
        equipment installed in a t...","Locations":[{"Id":"1","Type":"pdf","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F13126-en%3Flocatt%3Did%3A1%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-K.20-201612-S!!PDF-E\u0026type=items","Icon":"pdf-icon.png"},{"Id":"2","Type":"doc","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F13126-en%3Flocatt%3Did%3A2%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-K.20-201612-S!!MSW-E\u0026type=items","Icon":"doc-icon.png"}],"TopResult":false,"Words":{"ITU-T":true,"K.20":true},"Media":{"Identifier":"11.1002/1000/13126-en","Date":"February,
        2017","Url":null,"Name":"ITU-T K.20 (12/2016)","ParentHandleID":"","ParentName":null,"Type":null,"ContentText":null,"ImageUrl":null,"Tags":[]},"WordsMissing":false,"CollectionTypeCSSClass":"label-t-sector","LanguageCSSClass":"label-en"},{"Identifier":"11.1002/1000/12867-en","Title":"ITU-T
        K.20 (06/2016): Resistibility of telecommunication equipment installed in
        a telecommunication centre to overvoltages and overcurrents","Collection":{"Name":"ITU-T
        Recommendations","Title":"ITU-T Recommendations","Description":"","Sector":"ITU-T","Group":"Recommendations"},"Redirection":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F12867-en\u0026position=3\u0026page=1","Language":"en","Dir":"ltr","Properties":[{"Title":"Publication
        date","Value":"August, 2016"}],"ExtractFileContent":"...lecommunication centre
        to overvoltages and overcurrents  Recommendation  ITU-T  K.20           Rec.
        ITU-T K.20 (06/2016) i Recommendation ITU-T K.20 Resistibility of telecommunication
        equipment installed in a t...","Locations":[{"Id":"1","Type":"pdf","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F12867-en%3Flocatt%3Did%3A1%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-K.20-201606-S!!PDF-E\u0026type=items","Icon":"pdf-icon.png"},{"Id":"2","Type":"doc","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F12867-en%3Flocatt%3Did%3A2%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-K.20-201606-S!!MSW-E\u0026type=items","Icon":"doc-icon.png"}],"TopResult":false,"Words":{"ITU-T":true,"K.20":true},"Media":{"Identifier":"11.1002/1000/12867-en","Date":"August,
        2016","Url":null,"Name":"ITU-T K.20 (06/2016)","ParentHandleID":"","ParentName":null,"Type":null,"ContentText":null,"ImageUrl":null,"Tags":[]},"WordsMissing":false,"CollectionTypeCSSClass":"label-t-sector","LanguageCSSClass":"label-en"},{"Identifier":"11.1002/1000/12403-en","Title":"ITU-T
        K.20 (04/2015): Resistibility of telecommunication equipment installed in
        a telecommunication centre to overvoltages and overcurrents","Collection":{"Name":"ITU-T
        Recommendations","Title":"ITU-T Recommendations","Description":"","Sector":"ITU-T","Group":"Recommendations"},"Redirection":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F12403-en\u0026position=2\u0026page=1","Language":"en","Dir":"ltr","Properties":[{"Title":"Publication
        date","Value":"July, 2015"}],"ExtractFileContent":"...a telecommunication
        centre to overvoltages and overcurrents  Recommendation  ITU-T  K.20       Rec.
        ITU-T K.20 (04/2015) i Recommendation ITU-T K.20 Resistibility of telecommunication
        equipment installed in a  ...","Locations":[{"Id":"1","Type":"pdf","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F12403-en%3Flocatt%3Did%3A1%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-K.20-201504-S!!PDF-E\u0026type=items","Icon":"pdf-icon.png"},{"Id":"2","Type":"doc","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F12403-en%3Flocatt%3Did%3A2%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-K.20-201504-S!!MSW-E\u0026type=items","Icon":"doc-icon.png"}],"TopResult":false,"Words":{"ITU-T":true,"K.20":true},"Media":{"Identifier":"11.1002/1000/12403-en","Date":"July,
        2015","Url":null,"Name":"ITU-T K.20 (04/2015)","ParentHandleID":"","ParentName":null,"Type":null,"ContentText":null,"ImageUrl":null,"Tags":[]},"WordsMissing":false,"CollectionTypeCSSClass":"label-t-sector","LanguageCSSClass":"label-en"},{"Identifier":"11.1002/1000/11420-en","Title":"ITU-T
        K.20 (11/2011): Resistibility of telecommunication equipment installed in
        a telecommunications centre to overvoltages and overcurrents","Collection":{"Name":"ITU-T
        Recommendations","Title":"ITU-T Recommendations","Description":"","Sector":"ITU-T","Group":"Recommendations"},"Redirection":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F11420-en\u0026position=1\u0026page=1","Language":"en","Dir":"ltr","Properties":[{"Title":"Publication
        date","Value":"May, 2012"}],"ExtractFileContent":"...ecommunications centre
        to overvoltages and overcurrents  Recommendation  ITU-T  K.20           Rec.
        ITU-T K.20 (11/2011) i Recommendation ITU-T K.20 Resistibility of telecommunication
        equipment installed in a t...","Locations":[{"Id":"1","Type":"pdf","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F11420-en%3Flocatt%3Did%3A1%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-K.20-201111-S!!PDF-E\u0026type=items","Icon":"pdf-icon.png"},{"Id":"2","Type":"doc","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F11420-en%3Flocatt%3Did%3A2%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-K.20-201111-S!!MSW-E\u0026type=items","Icon":"doc-icon.png"}],"TopResult":false,"Words":{"ITU-T":true,"K.20":true},"Media":{"Identifier":"11.1002/1000/11420-en","Date":"May,
        2012","Url":null,"Name":"ITU-T K.20 (11/2011)","ParentHandleID":"","ParentName":null,"Type":null,"ContentText":null,"ImageUrl":null,"Tags":[]},"WordsMissing":false,"CollectionTypeCSSClass":"label-t-sector","LanguageCSSClass":"label-en"}],"input":"ITU-T
        K.20","totalAmount":5836,"collationQuery":"","attempt":0,"languageUpdated":false,"allowed":true}'
  recorded_at: Thu, 28 Dec 2023 14:25:53 GMT
- request:
    method: post
    uri: https://jcl49wv5ar-dsn.algolia.net/1/indexes/all_en/query
    body:
      encoding: UTF-8
      string: '{"query":"ISO/IEC 2382","hitsPerPage":100,"filters":"category:standard"}'
    headers:
      User-Agent:
      - Algolia for Ruby (2.3.4), Ruby (3.2.2)
      X-Algolia-Api-Key:
      - dd1b9e1ab383f4d4817d29cd5e96d3f0
      X-Algolia-Application-Id:
      - JCL49WV5AR
      Content-Type:
      - application/json; charset=utf-8
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      Connection:
      - keep-alive
      Keep-Alive:
      - '30'
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Thu, 28 Dec 2023 14:25:52 GMT
      Content-Type:
      - application/json; charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      X-Alg-Pt:
      - '1'
      Accept-Encoding:
      - deflate, gzip
      Cache-Control:
      - no-store
      Access-Control-Allow-Origin:
      - "*"
      Timing-Allow-Origin:
      - "*"
      X-Content-Type-Options:
      - nosniff
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Content-Disposition:
      - inline; filename=a.txt
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 28 Dec 2023 14:25:53 GMT
- request:
    method: get
    uri: https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http://handle.itu.int/11.1002/1000/15177-en&page=1&position=10
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_2) AppleWebKit/601.3.9 (KHTML,
        like Gecko) Version/9.0.2 Safari/601.3.9
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Cookie:
      - BIGipServerV19edYz/rGMxUCJeS7ZH3w=!aB5hbmBGAQrSKeSrKNZ4ylMtnsGUZHY3/JqDiu1Ln0o8SEs5XR1q/tQIg4621qM8OhG+K4slRKN8XYg=;
        GSCookie_CookieId=HvzhsplzS2sEwhOrg7B01xVQMuHHc0I5WLDuhJjkHKmIaOaEysnB0qAXYQh%2BdCKGu33uooR6YvBUBNkg6p5D4Q%3D%3D;
        GSCookie_QueryId=7097703; TS010592a8=018bf709fc6824872b32f4cd0dcaec54c66e9cba2e49ff2893b48ec38ff43968b0c81e0ef1b70cd7ecec85f3b752547eb02275c14a;
        TS0110b275=018bf709fc6824872b32f4cd0dcaec54c66e9cba2e49ff2893b48ec38ff43968b0c81e0ef1b70cd7ecec85f3b752547eb02275c14a;
        TS70351561027=08b49714d4ab2000226e693e805bc86405f069b2eb941ee9189a45086cef9e08f4d45b75b4b102150809e574fd1130007c1aa67c2b1acc1894ebbd0f3ce5200e98d3f1f12ccbd95e7a3067fb2ce8c2350ee296f827bd554584c72fccb4705562
      Host:
      - www.itu.int
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 302
      message: Found
    headers:
      Location:
      - http://handle.itu.int/11.1002/1000/15177-en
      Date:
      - Thu, 28 Dec 2023 14:25:53 GMT
      Transfer-Encoding:
      - chunked
      Set-Cookie:
      - TS70351561027=08b49714d4ab20004d73cc2ed6aba8b45f3ba0228e1ae9393d0dab48284fe5c6c1f786dbef850957087ae1f6281130008248c837b567ae5ce83548020dccb648e5e70c9294ff59b0fc005585b9c54e838163c5642d1e77062fe04ca45825e025;
        Path=/
    body:
      encoding: UTF-8
      string: ''
  recorded_at: Thu, 28 Dec 2023 14:25:54 GMT
- request:
    method: get
    uri: https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http://handle.itu.int/11.1002/1000/15177-en&page=1&position=10
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_2) AppleWebKit/601.3.9 (KHTML,
        like Gecko) Version/9.0.2 Safari/601.3.9
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Cookie:
      - BIGipServerV19edYz/rGMxUCJeS7ZH3w=!DVtCLZ39uvNB58KrKNZ4ylMtnsGUZOffzjbOn5yU/RcGNN54xD0pcjGW7mLPKAMfhJ6xIBmTDt/poa8=;
        GSCookie_CookieId=bGM5%2FiMTFVC3fNFEkHMDLYUAtAn4yRkBnRXoQKWvDIIfKzdrwF3vYyZwbfdu70DHL454ef5Q0TDqKZvKPyK4EA%3D%3D;
        GSCookie_QueryId=7097702; TS010592a8=018bf709fc1057472b9ede1b7c4fb4859976326ef466d34ed58b8d7f11c84a3cfe9ce51cbb24ac0dde28b9efc2ddf74404f927709e;
        TS0110b275=018bf709fc1057472b9ede1b7c4fb4859976326ef466d34ed58b8d7f11c84a3cfe9ce51cbb24ac0dde28b9efc2ddf74404f927709e;
        TS70351561027=08b49714d4ab2000687032a8c3cf427f42e7a41eed5bbda7995334d127b98e4cf0894086f4f7484708feb1fd92113000e513d757169980b694ebbd0f3ce5200e8d9d26a781c91f03d72f70bcf317dcbeeb94d90646a03f163ccf1ee00f06aa73
      Host:
      - www.itu.int
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 302
      message: Found
    headers:
      Location:
      - http://handle.itu.int/11.1002/1000/15177-en
      Date:
      - Thu, 28 Dec 2023 14:25:53 GMT
      Transfer-Encoding:
      - chunked
      Set-Cookie:
      - TS70351561027=08b49714d4ab20007cf43cf66997988d2361005e5363470c5290d67af4cd0c386d7cbb73bab009a808b80cea191130003bbf23e6775fc61a3b41590a0c072e3460813e1fff2c80286ce646c915bdaec60bc696188eb7fc52cb7efc2d2381ca6b;
        Path=/
    body:
      encoding: UTF-8
      string: ''
  recorded_at: Thu, 28 Dec 2023 14:25:54 GMT
- request:
    method: get
    uri: http://handle.itu.int/11.1002/1000/15177-en
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_2) AppleWebKit/601.3.9 (KHTML,
        like Gecko) Version/9.0.2 Safari/601.3.9
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Host:
      - handle.itu.int
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 301
      message: Moved Permanently
    headers:
      Server:
      - nginx/1.18.0 (Ubuntu)
      Date:
      - Thu, 28 Dec 2023 14:25:55 GMT
      Content-Type:
      - text/html
      Content-Length:
      - '178'
      Connection:
      - keep-alive
      Location:
      - https://handle.itu.int/11.1002/1000/15177-en
    body:
      encoding: UTF-8
      string: "<html>\r\n<head><title>301 Moved Permanently</title></head>\r\n<body>\r\n<center><h1>301
        Moved Permanently</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n"
  recorded_at: Thu, 28 Dec 2023 14:25:56 GMT
- request:
    method: get
    uri: http://handle.itu.int/11.1002/1000/15177-en
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_2) AppleWebKit/601.3.9 (KHTML,
        like Gecko) Version/9.0.2 Safari/601.3.9
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Host:
      - handle.itu.int
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 301
      message: Moved Permanently
    headers:
      Server:
      - nginx/1.18.0 (Ubuntu)
      Date:
      - Thu, 28 Dec 2023 14:25:56 GMT
      Content-Type:
      - text/html
      Content-Length:
      - '178'
      Connection:
      - keep-alive
      Location:
      - https://handle.itu.int/11.1002/1000/15177-en
    body:
      encoding: UTF-8
      string: "<html>\r\n<head><title>301 Moved Permanently</title></head>\r\n<body>\r\n<center><h1>301
        Moved Permanently</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n"
  recorded_at: Thu, 28 Dec 2023 14:25:56 GMT
- request:
    method: get
    uri: https://www.iso.org/contents/data/standard/06/35/63598.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 301
      message: ''
    headers:
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=730354058.36895.0000; path=/; Httponly;
        Secure
      - JSESSIONID=24E31788E3C1261BDE815A1441D5374F; Path=/; Secure; HttpOnly
      Location:
      - "/standard/63598.html"
      Content-Length:
      - '0'
      Date:
      - Thu, 28 Dec 2023 14:25:57 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: UTF-8
      string: ''
  recorded_at: Thu, 28 Dec 2023 14:25:57 GMT
- request:
    method: get
    uri: https://www.iso.org/contents/data/standard/06/35/63598.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 301
      message: ''
    headers:
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=730354058.36895.0000; path=/; Httponly;
        Secure
      - JSESSIONID=3F757C2BD775FDB8E52C215A1F636CBC; Path=/; Secure; HttpOnly
      Location:
      - "/standard/63598.html"
      Content-Length:
      - '0'
      Date:
      - Thu, 28 Dec 2023 14:25:57 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: UTF-8
      string: ''
  recorded_at: Thu, 28 Dec 2023 14:25:58 GMT
- request:
    method: get
    uri: https://www.iso.org/contents/data/standard/07/45/74575.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 301
      message: ''
    headers:
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=713576842.36895.0000; path=/; Httponly;
        Secure
      - JSESSIONID=2C3CE38CA6639902AC256C4CB5873907; Path=/; Secure; HttpOnly
      Location:
      - "/standard/74575.html"
      Content-Length:
      - '0'
      Date:
      - Thu, 28 Dec 2023 14:25:58 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: UTF-8
      string: ''
  recorded_at: Thu, 28 Dec 2023 14:25:58 GMT
- request:
    method: get
    uri: https://handle.itu.int/11.1002/1000/15177-en
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_2) AppleWebKit/601.3.9 (KHTML,
        like Gecko) Version/9.0.2 Safari/601.3.9
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Host:
      - handle.itu.int
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 302
      message: Found
    headers:
      Server:
      - nginx/1.18.0 (Ubuntu)
      Date:
      - Thu, 28 Dec 2023 14:25:58 GMT
      Content-Type:
      - text/html;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Location:
      - https://www.itu.int/ITU-T/recommendations/rec.aspx?rec=15177&lang=en
      Expires:
      - Fri, 29 Dec 2023 14:25:58 GMT
    body:
      encoding: UTF-8
      string: |-
        <html><head><title>Handle Redirect</title></head>
        <body><a href="https://www.itu.int/ITU-T/recommendations/rec.aspx?rec=15177&amp;lang=en">https://www.itu.int/ITU-T/recommendations/rec.aspx?rec=15177&amp;lang=en</a></body></html>
  recorded_at: Thu, 28 Dec 2023 14:25:58 GMT
- request:
    method: get
    uri: https://handle.itu.int/11.1002/1000/15177-en
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_2) AppleWebKit/601.3.9 (KHTML,
        like Gecko) Version/9.0.2 Safari/601.3.9
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Host:
      - handle.itu.int
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 302
      message: Found
    headers:
      Server:
      - nginx/1.18.0 (Ubuntu)
      Date:
      - Thu, 28 Dec 2023 14:25:58 GMT
      Content-Type:
      - text/html;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Location:
      - https://www.itu.int/ITU-T/recommendations/rec.aspx?rec=15177&lang=en
      Expires:
      - Fri, 29 Dec 2023 14:25:58 GMT
    body:
      encoding: UTF-8
      string: |-
        <html><head><title>Handle Redirect</title></head>
        <body><a href="https://www.itu.int/ITU-T/recommendations/rec.aspx?rec=15177&amp;lang=en">https://www.itu.int/ITU-T/recommendations/rec.aspx?rec=15177&amp;lang=en</a></body></html>
  recorded_at: Thu, 28 Dec 2023 14:25:58 GMT
- request:
    method: get
    uri: https://www.iso.org/standard/74575.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 200
      message: ''
    headers:
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=730354058.36895.0000; path=/; Httponly;
        Secure
      - JSESSIONID=507A16A1A2694D9916D0172DA9F52E13; Path=/; Secure; HttpOnly
      Vary:
      - accept-encoding
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Date:
      - Thu, 28 Dec 2023 14:25:58 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 28 Dec 2023 14:25:59 GMT
- request:
    method: get
    uri: https://www.iso.org/standard/63598.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 200
      message: ''
    headers:
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=730354058.36895.0000; path=/; Httponly;
        Secure
      - JSESSIONID=7FF326DB3F96BBA78F3F98C23E9178B1; Path=/; Secure; HttpOnly
      Vary:
      - accept-encoding
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Date:
      - Thu, 28 Dec 2023 14:25:58 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 28 Dec 2023 14:25:59 GMT
- request:
    method: post
    uri: https://jcl49wv5ar-dsn.algolia.net/1/indexes/all_en/query
    body:
      encoding: UTF-8
      string: '{"query":"ISO 639","hitsPerPage":100,"filters":"category:standard"}'
    headers:
      User-Agent:
      - Algolia for Ruby (2.3.4), Ruby (3.2.2)
      X-Algolia-Api-Key:
      - dd1b9e1ab383f4d4817d29cd5e96d3f0
      X-Algolia-Application-Id:
      - JCL49WV5AR
      Content-Type:
      - application/json; charset=utf-8
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      Connection:
      - keep-alive
      Keep-Alive:
      - '30'
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Thu, 28 Dec 2023 14:26:00 GMT
      Content-Type:
      - application/json; charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      X-Alg-Pt:
      - '3'
      Accept-Encoding:
      - deflate, gzip
      Cache-Control:
      - no-store
      Access-Control-Allow-Origin:
      - "*"
      Timing-Allow-Origin:
      - "*"
      X-Content-Type-Options:
      - nosniff
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Content-Disposition:
      - inline; filename=a.txt
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 28 Dec 2023 14:26:00 GMT
- request:
    method: get
    uri: https://www.itu.int/ITU-T/recommendations/rec.aspx?lang=en&rec=15177
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_2) AppleWebKit/601.3.9 (KHTML,
        like Gecko) Version/9.0.2 Safari/601.3.9
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Cookie:
      - BIGipServerV19edYz/rGMxUCJeS7ZH3w=!aB5hbmBGAQrSKeSrKNZ4ylMtnsGUZHY3/JqDiu1Ln0o8SEs5XR1q/tQIg4621qM8OhG+K4slRKN8XYg=;
        GSCookie_CookieId=HvzhsplzS2sEwhOrg7B01xVQMuHHc0I5WLDuhJjkHKmIaOaEysnB0qAXYQh%2BdCKGu33uooR6YvBUBNkg6p5D4Q%3D%3D;
        GSCookie_QueryId=7097703; TS010592a8=018bf709fc6824872b32f4cd0dcaec54c66e9cba2e49ff2893b48ec38ff43968b0c81e0ef1b70cd7ecec85f3b752547eb02275c14a;
        TS0110b275=018bf709fc6824872b32f4cd0dcaec54c66e9cba2e49ff2893b48ec38ff43968b0c81e0ef1b70cd7ecec85f3b752547eb02275c14a;
        TS70351561027=08b49714d4ab20004d73cc2ed6aba8b45f3ba0228e1ae9393d0dab48284fe5c6c1f786dbef850957087ae1f6281130008248c837b567ae5ce83548020dccb648e5e70c9294ff59b0fc005585b9c54e838163c5642d1e77062fe04ca45825e025
      Host:
      - www.itu.int
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - private
      Content-Type:
      - text/html; charset=utf-8
      Content-Encoding:
      - gzip
      Vary:
      - Accept-Encoding
      Date:
      - Thu, 28 Dec 2023 14:26:00 GMT
      Content-Length:
      - '23282'
      Set-Cookie:
      - TS70351561027=08b49714d4ab20006875207f0241dd79edc7c3a8a4f1e01d4dc2e2bfa87d5297971e500ae3ef06cb0856f078ad1130009e0fb8355b54d6ebd1d5294f4552e6ffedad966dff0c122b1371c81c913afc0c52faf1aa5e26dc5b93786ab8d1a7b8a9;
        Path=/
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 28 Dec 2023 14:26:01 GMT
- request:
    method: get
    uri: https://www.itu.int/ITU-T/recommendations/rec.aspx?lang=en&rec=15177
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_2) AppleWebKit/601.3.9 (KHTML,
        like Gecko) Version/9.0.2 Safari/601.3.9
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Cookie:
      - BIGipServerV19edYz/rGMxUCJeS7ZH3w=!DVtCLZ39uvNB58KrKNZ4ylMtnsGUZOffzjbOn5yU/RcGNN54xD0pcjGW7mLPKAMfhJ6xIBmTDt/poa8=;
        GSCookie_CookieId=bGM5%2FiMTFVC3fNFEkHMDLYUAtAn4yRkBnRXoQKWvDIIfKzdrwF3vYyZwbfdu70DHL454ef5Q0TDqKZvKPyK4EA%3D%3D;
        GSCookie_QueryId=7097702; TS010592a8=018bf709fc1057472b9ede1b7c4fb4859976326ef466d34ed58b8d7f11c84a3cfe9ce51cbb24ac0dde28b9efc2ddf74404f927709e;
        TS0110b275=018bf709fc1057472b9ede1b7c4fb4859976326ef466d34ed58b8d7f11c84a3cfe9ce51cbb24ac0dde28b9efc2ddf74404f927709e;
        TS70351561027=08b49714d4ab20007cf43cf66997988d2361005e5363470c5290d67af4cd0c386d7cbb73bab009a808b80cea191130003bbf23e6775fc61a3b41590a0c072e3460813e1fff2c80286ce646c915bdaec60bc696188eb7fc52cb7efc2d2381ca6b
      Host:
      - www.itu.int
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - private
      Content-Type:
      - text/html; charset=utf-8
      Content-Encoding:
      - gzip
      Vary:
      - Accept-Encoding
      Date:
      - Thu, 28 Dec 2023 14:26:00 GMT
      Content-Length:
      - '23282'
      Set-Cookie:
      - TS70351561027=08b49714d4ab20003c5b85cd6a833c968c7a077f9662da4ad54010e626b857e5a59de5a268e78721081c306bfe113000a327c35a9bdfd954cdac772095094a1bbf457721a3c695b1966b1f3a792f090ead4fc034853b89faca30ea0ff6abd1d2;
        Path=/
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 28 Dec 2023 14:26:01 GMT
- request:
    method: get
    uri: https://www.iso.org/standard/63598.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 200
      message: ''
    headers:
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=747131274.36895.0000; path=/; Httponly;
        Secure
      - JSESSIONID=22C74B8E91386C1A044494B5A8E0748C; Path=/; Secure; HttpOnly
      Vary:
      - accept-encoding
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Date:
      - Thu, 28 Dec 2023 14:25:59 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 28 Dec 2023 14:26:02 GMT
- request:
    method: get
    uri: http://www.itu.int/dms_pubrec/itu-t/rec/k/T-REC-K.20-202211-I!!SUM-HTM-E.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_2) AppleWebKit/601.3.9 (KHTML,
        like Gecko) Version/9.0.2 Safari/601.3.9
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Cookie:
      - GSCookie_CookieId=HvzhsplzS2sEwhOrg7B01xVQMuHHc0I5WLDuhJjkHKmIaOaEysnB0qAXYQh%2BdCKGu33uooR6YvBUBNkg6p5D4Q%3D%3D;
        GSCookie_QueryId=7097703; TS010592a8=018bf709fc6824872b32f4cd0dcaec54c66e9cba2e49ff2893b48ec38ff43968b0c81e0ef1b70cd7ecec85f3b752547eb02275c14a;
        TS0110b275=018bf709fc6824872b32f4cd0dcaec54c66e9cba2e49ff2893b48ec38ff43968b0c81e0ef1b70cd7ecec85f3b752547eb02275c14a;
        TS70351561027=08b49714d4ab20006875207f0241dd79edc7c3a8a4f1e01d4dc2e2bfa87d5297971e500ae3ef06cb0856f078ad1130009e0fb8355b54d6ebd1d5294f4552e6ffedad966dff0c122b1371c81c913afc0c52faf1aa5e26dc5b93786ab8d1a7b8a9
      Host:
      - www.itu.int
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 302
      message: Moved Temporarily
    headers:
      Location:
      - https://www.itu.int/dms_pubrec/itu-t/rec/k/T-REC-K.20-202211-I!!SUM-HTM-E.htm
      Server:
      - BigIP
      Connection:
      - Keep-Alive
      Content-Length:
      - '0'
    body:
      encoding: UTF-8
      string: ''
  recorded_at: Thu, 28 Dec 2023 14:26:03 GMT
- request:
    method: get
    uri: http://www.itu.int/dms_pubrec/itu-t/rec/k/T-REC-K.20-202211-I!!SUM-HTM-E.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_2) AppleWebKit/601.3.9 (KHTML,
        like Gecko) Version/9.0.2 Safari/601.3.9
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Cookie:
      - GSCookie_CookieId=bGM5%2FiMTFVC3fNFEkHMDLYUAtAn4yRkBnRXoQKWvDIIfKzdrwF3vYyZwbfdu70DHL454ef5Q0TDqKZvKPyK4EA%3D%3D;
        GSCookie_QueryId=7097702; TS010592a8=018bf709fc1057472b9ede1b7c4fb4859976326ef466d34ed58b8d7f11c84a3cfe9ce51cbb24ac0dde28b9efc2ddf74404f927709e;
        TS0110b275=018bf709fc1057472b9ede1b7c4fb4859976326ef466d34ed58b8d7f11c84a3cfe9ce51cbb24ac0dde28b9efc2ddf74404f927709e;
        TS70351561027=08b49714d4ab20003c5b85cd6a833c968c7a077f9662da4ad54010e626b857e5a59de5a268e78721081c306bfe113000a327c35a9bdfd954cdac772095094a1bbf457721a3c695b1966b1f3a792f090ead4fc034853b89faca30ea0ff6abd1d2
      Host:
      - www.itu.int
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 302
      message: Moved Temporarily
    headers:
      Location:
      - https://www.itu.int/dms_pubrec/itu-t/rec/k/T-REC-K.20-202211-I!!SUM-HTM-E.htm
      Server:
      - BigIP
      Connection:
      - Keep-Alive
      Content-Length:
      - '0'
    body:
      encoding: UTF-8
      string: ''
  recorded_at: Thu, 28 Dec 2023 14:26:03 GMT
- request:
    method: get
    uri: https://www.iso.org/contents/data/standard/07/45/74575.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 301
      message: ''
    headers:
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=730354058.36895.0000; path=/; Httponly;
        Secure
      - JSESSIONID=9BAC403BF67A6761E01FB0C42AC47710; Path=/; Secure; HttpOnly
      Location:
      - "/standard/74575.html"
      Content-Length:
      - '0'
      Date:
      - Thu, 28 Dec 2023 14:26:02 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: UTF-8
      string: ''
  recorded_at: Thu, 28 Dec 2023 14:26:03 GMT
- request:
    method: get
    uri: https://www.itu.int/dms_pubrec/itu-t/rec/k/T-REC-K.20-202211-I!!SUM-HTM-E.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_2) AppleWebKit/601.3.9 (KHTML,
        like Gecko) Version/9.0.2 Safari/601.3.9
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Cookie:
      - BIGipServerV19edYz/rGMxUCJeS7ZH3w=!aB5hbmBGAQrSKeSrKNZ4ylMtnsGUZHY3/JqDiu1Ln0o8SEs5XR1q/tQIg4621qM8OhG+K4slRKN8XYg=;
        GSCookie_CookieId=HvzhsplzS2sEwhOrg7B01xVQMuHHc0I5WLDuhJjkHKmIaOaEysnB0qAXYQh%2BdCKGu33uooR6YvBUBNkg6p5D4Q%3D%3D;
        GSCookie_QueryId=7097703; TS010592a8=018bf709fc6824872b32f4cd0dcaec54c66e9cba2e49ff2893b48ec38ff43968b0c81e0ef1b70cd7ecec85f3b752547eb02275c14a;
        TS0110b275=018bf709fc6824872b32f4cd0dcaec54c66e9cba2e49ff2893b48ec38ff43968b0c81e0ef1b70cd7ecec85f3b752547eb02275c14a;
        TS70351561027=08b49714d4ab20006875207f0241dd79edc7c3a8a4f1e01d4dc2e2bfa87d5297971e500ae3ef06cb0856f078ad1130009e0fb8355b54d6ebd1d5294f4552e6ffedad966dff0c122b1371c81c913afc0c52faf1aa5e26dc5b93786ab8d1a7b8a9
      Host:
      - www.itu.int
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/html
      Content-Encoding:
      - gzip
      Last-Modified:
      - Thu, 09 Feb 2023 13:58:11 GMT
      Accept-Ranges:
      - bytes
      Etag:
      - '"d5a3f98b8e3cd91:0"'
      Vary:
      - Accept-Encoding
      Date:
      - Thu, 28 Dec 2023 14:26:03 GMT
      Content-Length:
      - '1867'
      Set-Cookie:
      - BIGipServer4+IEUJs6ObMe1m0DiLXCRg=!GZZa4Y8IztH31g2rKNZ4ylMtnsGUZJKHGmTpNksCVoa3WQNA+2FmAYcqT1YgCIxl76RISb7bnSoJz6Y=;
        path=/; Httponly; Secure
      - TS010592a8=018bf709fc6824872b32f4cd0dcaec54c66e9cba2e49ff2893b48ec38ff43968b0c81e0ef1b70cd7ecec85f3b752547eb02275c14a;
        Path=/;
      - TS70351561027=08b49714d4ab2000fd0236e496275b6ee260db7dfa7423e2eb825ea5254b70166d645ebc501d7c8708ffec4b4a113000351055c7daf438a2dcfaedf7f74c0bd3a504dea39557371599553c24c70ba36890ebcb7f3194e1e40c4a62bd2b850c03;
        Path=/
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        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
  recorded_at: Thu, 28 Dec 2023 14:26:03 GMT
- request:
    method: get
    uri: https://www.itu.int/dms_pubrec/itu-t/rec/k/T-REC-K.20-202211-I!!SUM-HTM-E.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_2) AppleWebKit/601.3.9 (KHTML,
        like Gecko) Version/9.0.2 Safari/601.3.9
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Cookie:
      - BIGipServerV19edYz/rGMxUCJeS7ZH3w=!DVtCLZ39uvNB58KrKNZ4ylMtnsGUZOffzjbOn5yU/RcGNN54xD0pcjGW7mLPKAMfhJ6xIBmTDt/poa8=;
        GSCookie_CookieId=bGM5%2FiMTFVC3fNFEkHMDLYUAtAn4yRkBnRXoQKWvDIIfKzdrwF3vYyZwbfdu70DHL454ef5Q0TDqKZvKPyK4EA%3D%3D;
        GSCookie_QueryId=7097702; TS010592a8=018bf709fc1057472b9ede1b7c4fb4859976326ef466d34ed58b8d7f11c84a3cfe9ce51cbb24ac0dde28b9efc2ddf74404f927709e;
        TS0110b275=018bf709fc1057472b9ede1b7c4fb4859976326ef466d34ed58b8d7f11c84a3cfe9ce51cbb24ac0dde28b9efc2ddf74404f927709e;
        TS70351561027=08b49714d4ab20003c5b85cd6a833c968c7a077f9662da4ad54010e626b857e5a59de5a268e78721081c306bfe113000a327c35a9bdfd954cdac772095094a1bbf457721a3c695b1966b1f3a792f090ead4fc034853b89faca30ea0ff6abd1d2
      Host:
      - www.itu.int
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/html
      Content-Encoding:
      - gzip
      Last-Modified:
      - Thu, 09 Feb 2023 13:58:11 GMT
      Accept-Ranges:
      - bytes
      Etag:
      - '"80dba48b8e3cd91:0"'
      Vary:
      - Accept-Encoding
      Date:
      - Thu, 28 Dec 2023 14:26:03 GMT
      Content-Length:
      - '1563'
      Set-Cookie:
      - BIGipServer4+IEUJs6ObMe1m0DiLXCRg=!K/K47L4PmdnQNFirKNZ4ylMtnsGUZFM0iH42cz/2UNC1ourcIJaoTm96Lhi1v7vZMofAFHkqfJkW+9I=;
        path=/; Httponly; Secure
      - TS010592a8=018bf709fc1057472b9ede1b7c4fb4859976326ef466d34ed58b8d7f11c84a3cfe9ce51cbb24ac0dde28b9efc2ddf74404f927709e;
        Path=/;
      - TS70351561027=08b49714d4ab2000621d0cae6c39c969dfbf80169151ba9d8aedd8793ae25c3e70ea4b50dfc896e708c8fa072711300008c43ea2c942a0a5dcfaedf7f74c0bd3760060383a532d0d034a3662abd27181676d9c4cf3dae5b2a65f86d5386b3a7b;
        Path=/
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        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
  recorded_at: Thu, 28 Dec 2023 14:26:03 GMT
- request:
    method: get
    uri: https://www.iso.org/standard/74575.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 200
      message: ''
    headers:
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=713576842.36895.0000; path=/; Httponly;
        Secure
      - JSESSIONID=D4EB34740B9743B8FA6085CF5379D7CF; Path=/; Secure; HttpOnly
      Vary:
      - accept-encoding
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Date:
      - Thu, 28 Dec 2023 14:26:04 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 28 Dec 2023 14:26:04 GMT
recorded_with: VCR 6.1.0
