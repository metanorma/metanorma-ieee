---
http_interactions:
- request:
    method: get
    uri: https://raw.githubusercontent.com/relaton/relaton-data-ieee/main/data/IEEE_81-1983.yaml
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.7.12
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - keep-alive
      Content-Length:
      - '2687'
      Cache-Control:
      - max-age=300
      Content-Security-Policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      Content-Type:
      - text/plain; charset=utf-8
      Etag:
      - W/"56bb8619807196cf0658f0d7b41227c81043e1a5debeb871c3ff1a5459158d39"
      Strict-Transport-Security:
      - max-age=31536000
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      X-Xss-Protection:
      - 1; mode=block
      X-Github-Request-Id:
      - 167C:33810F:DB72F:10E526:658DA648
      Accept-Ranges:
      - bytes
      Date:
      - Thu, 28 Dec 2023 16:48:07 GMT
      Via:
      - 1.1 varnish
      X-Served-By:
      - cache-mel11245-MEL
      X-Cache:
      - HIT
      X-Cache-Hits:
      - '1'
      X-Timer:
      - S1703782088.591526,VS0,VE1
      Vary:
      - Authorization,Accept-Encoding,Origin
      Access-Control-Allow-Origin:
      - "*"
      Cross-Origin-Resource-Policy:
      - cross-origin
      X-Fastly-Request-Id:
      - 57583fe5ff03356feb7fa1bbdf4cc9d1c81f6e38
      Expires:
      - Thu, 28 Dec 2023 16:53:07 GMT
      Source-Age:
      - '126'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        LS0tCnNjaGVtYS12ZXJzaW9uOiB2MS4yLjMKaWQ6IElFRUU4MS0xOTgzCnRpdGxlOgotIGNvbnRlbnQ6ICdJRUVFIEd1aWRlIGZvciBNZWFzdXJpbmcgRWFydGggUmVzaXN0aXZpdHksIEdyb3VuZCBJbXBlZGFuY2UsIGFuZCBFYXJ0aAogICAgU3VyZmFjZSBQb3RlbnRpYWxzIG9mIGEgR3JvdW5kIFN5c3RlbSBQYXJ0IDE6IE5vcm1hbCBNZWFzdXJlbWVudHMnCiAgZm9ybWF0OiB0ZXh0L3BsYWluCiAgdHlwZTogbWFpbgpsaW5rOgotIGNvbnRlbnQ6IGh0dHBzOi8vaWVlZXhwbG9yZS5pZWVlLm9yZy9kb2N1bWVudC8zMDY0NwogIHR5cGU6IHNyYwp0eXBlOiBzdGFuZGFyZApkb2NpZDoKLSBpZDogSUVFRSA4MS0xOTgzCiAgdHlwZTogSUVFRQogIHByaW1hcnk6IHRydWUKLSBpZDogSUVFRSA4MeKEoi0xOTgzCiAgdHlwZTogSUVFRQogIHNjb3BlOiB0cmFkZW1hcmsKICBwcmltYXJ5OiB0cnVlCi0gaWQ6IDk3OC0wLTczODEtMDY2MC0xCiAgdHlwZTogSVNCTgotIGlkOiAxMC4xMTA5L0lFRUVTVEQuMTk4My44MjM3OAogIHR5cGU6IERPSQpkb2NudW1iZXI6IElFRUUgODEtMTk4MwpkYXRlOgotIHR5cGU6IGNyZWF0ZWQKICB2YWx1ZTogJzE5ODMnCi0gdHlwZTogcHVibGlzaGVkCiAgdmFsdWU6ICcyMDEyLTEyLTIxJwotIHR5cGU6IGlzc3VlZAogIHZhbHVlOiAnMTk4MS0wOS0xNycKY29udHJpYnV0b3I6Ci0gb3JnYW5pemF0aW9uOgogICAgbmFtZToKICAgIC0gY29udGVudDogSW5zdGl0dXRlIG9mIEVsZWN0cmljYWwgYW5kIEVsZWN0cm9uaWNzIEVuZ2luZWVycwogICAgYWJicmV2aWF0aW9uOgogICAgICBjb250ZW50OiBJRUVFCiAgICB1cmw6IGh0dHA6Ly93d3cuaWVlZS5vcmcKICAgIGNvbnRhY3Q6CiAgICAtIGFkZHJlc3M6CiAgICAgICAgY2l0eTogTmV3IFlvcmsKICAgICAgICBjb3VudHJ5OiBVU0EKICByb2xlOgogIC0gdHlwZTogcHVibGlzaGVyCnJldmRhdGU6ICcyMDEyLTEyLTIxJwpsYW5ndWFnZToKLSBlbgpzY3JpcHQ6Ci0gTGF0bgphYnN0cmFjdDoKLSBjb250ZW50OiBUaGUgcHJlc2VudCBzdGF0ZSBvZiB0aGUgdGVjaG5pcXVlIG9mIG1lYXN1cmluZyBncm91bmQgcmVzaXN0YW5jZSBhbmQgaW1wZWRhbmNlLAogICAgZWFydGggcmVzaXN0aXZpdHksIGFuZCBwb3RlbnRpYWwgZ3JhZGllbnRzIGZyb20gY3VycmVudHMgaW4gdGhlIGVhcnRoLCBhbmQgdGhlCiAgICBwcmVkaWN0aW9uIG9mIHRoZSBtYWduaXR1ZGUgb2YgZ3JvdW5kIHJlc2lzdGFuY2UgYW5kIHBvdGVudGlhbCBncmFkaWVudHMgZnJvbQogICAgc2NhbGUtbW9kZWwgdGVzdHMgYXJlIGRlc2NyaWJlZCBhbmQgZGlzY3Vzc2VkLiBGYWN0b3JzIGluZmx1ZW5jaW5nIHRoZSBjaG9pY2UKICAgIG9mIGluc3RydW1lbnRzIGFuZCB0aGUgdGVjaG5pcXVlcyBmb3IgdmFyaW91cyB0eXBlcyBvZiBtZWFzdXJlbWVudHMgYXJlIGNvdmVyZWQuCiAgICBUaGVzZSBpbmNsdWRlIHRoZSBwdXJwb3NlIG9mIHRoZSBtZWFzdXJlbWVudCwgdGhlIGFjY3VyYWN5IHJlcXVpcmVkLCB0aGUgdHlwZQogICAgb2YgaW5zdHJ1bWVudHMgYXZhaWxhYmxlLCBwb3NzaWJsZSBzb3VyY2VzIG9mIGVycm9yLCBhbmQgdGhlIG5hdHVyZSBvZiB0aGUgZ3JvdW5kCiAgICBvciBncm91bmRpbmcgc3lzdGVtIHVuZGVyIHRlc3QuIFRoZSBpbnRlbnQgaXMgdG8gYXNzaXN0IHRoZSBlbmdpbmVlciBvciB0ZWNobmljaWFuCiAgICBpbiBvYnRhaW5pbmcgYW5kIGludGVycHJldGluZyBhY2N1cmF0ZSwgcmVsaWFibGUgZGF0YS4gVGhlIHRlc3QgcHJvY2VkdXJlcyBkZXNjcmliZWQKICAgIHByb21vdGUgdGhlIHNhZmV0eSBvZiBwZXJzb25uZWwgYW5kIHByb3BlcnR5IGFuZCBwcmV2ZW50IGludGVyZmVyZW5jZSB3aXRoIHRoZQogICAgb3BlcmF0aW9uIG9mIG5laWdoYm9yaW5nIGZhY2lsaXRpZXMuCiAgbGFuZ3VhZ2U6CiAgLSBlbgogIHNjcmlwdDoKICAtIExhdG4KICBmb3JtYXQ6IHRleHQvcGxhaW4KY29weXJpZ2h0OgotIG93bmVyOgogIC0gbmFtZToKICAgIC0gY29udGVudDogSW5zdGl0dXRlIG9mIEVsZWN0cmljYWwgYW5kIEVsZWN0cm9uaWNzIEVuZ2luZWVycwogICAgYWJicmV2aWF0aW9uOgogICAgICBjb250ZW50OiBJRUVFCiAgICB1cmw6IGh0dHA6Ly93d3cuaWVlZS5vcmcKICBmcm9tOiAnMTk4MycKa2V5d29yZDoKLSBjb250ZW50OiBHcm91bmRpbmcKLSBjb250ZW50OiBSZXNpc3RhbmNlIG1lYXN1cmVtZW50Ci0gY29udGVudDogRmF1bHQgY3VycmVudHMKLSBjb250ZW50OiBNZWFzdXJlbWVudCBzdGFuZGFyZHMKLSBjb250ZW50OiBUZXN0aW5nCi0gY29udGVudDogVm9sdGFnZSBtZWFzdXJlbWVudAotIGNvbnRlbnQ6IHJlc2lzdGl2aXR5Ci0gY29udGVudDogZWFydGgKLSBjb250ZW50OiBncm91bmQKLSBjb250ZW50OiBpbXBlZGFuY2UKLSBjb250ZW50OiBwb3RlbnRpYWxzCmRvY3R5cGU6IHN0YW5kYXJkCmVkaXRvcmlhbGdyb3VwOgogIGNvbW1pdHRlZToKICAtIFN1YnN0YXRpb25zIG9mIHRoZSBJRUVFIFBvd2VyIGFuZCBFbmVyZ3kgU29jaWV0eQppY3M6Ci0gY29kZTogMjkuMTIwLjUwCiAgdGV4dDogRnVzZXMgYW5kIG90aGVyIG92ZXJjdXJyZW50IHByb3RlY3Rpb24gZGV2aWNlcwpleHQ6CiAgc2NoZW1hLXZlcnNpb246IHYxLjAuMAogIHN0YW5kYXJkX3N0YXR1czogU3VwZXJzZWRlZAogIHB1YnN0YXR1czogQWN0aXZlCiAgaG9sZHN0YXR1czogUHVibGlzaAo=
  recorded_at: Thu, 28 Dec 2023 16:48:07 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/relaton/relaton-data-w3c/main/data/xml.yaml
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - raw.githubusercontent.com
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - keep-alive
      Content-Length:
      - '919'
      Cache-Control:
      - max-age=300
      Content-Security-Policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      Content-Type:
      - text/plain; charset=utf-8
      Etag:
      - W/"c15cda5552a5c291d9f55dfc55315172f8317df6b35f4ff7e9d1a3acfc9d184e"
      Strict-Transport-Security:
      - max-age=31536000
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      X-Xss-Protection:
      - 1; mode=block
      X-Github-Request-Id:
      - 77E6:342C54:C4292:EE4FA:658D7BEB
      Accept-Ranges:
      - bytes
      Date:
      - Thu, 28 Dec 2023 16:48:08 GMT
      Via:
      - 1.1 varnish
      X-Served-By:
      - cache-mel11263-MEL
      X-Cache:
      - HIT
      X-Cache-Hits:
      - '1'
      X-Timer:
      - S1703782088.845386,VS0,VE283
      Vary:
      - Authorization,Accept-Encoding,Origin
      Access-Control-Allow-Origin:
      - "*"
      Cross-Origin-Resource-Policy:
      - cross-origin
      X-Fastly-Request-Id:
      - d17a021d2b54de95ad996f661d2534a9c5665759
      Expires:
      - Thu, 28 Dec 2023 16:53:08 GMT
      Source-Age:
      - '0'
    body:
      encoding: ASCII-8BIT
      string: |
        ---
        schema-version: v1.2.7
        id: W3Cxml
        title:
        - content: Extensible Markup Language (XML) 1.0 (Fifth Edition)
          format: text/plain
        link:
        - content: https://www.w3.org/TR/xml/
          type: src
        type: standard
        docid:
        - id: W3C xml
          type: W3C
          primary: true
        docnumber: xml
        language:
        - en
        script:
        - Latn
        docstatus:
          stage:
            value: recommendation
        relation:
        - type: hasEdition
          bibitem:
            id: W3CREC-xml-20060816
            docid:
            - id: W3C REC-xml-20060816
              type: W3C
              primary: true
            formattedref:
              content: W3C REC-xml-20060816
              format: text/plain
        - type: instanceOf
          bibitem:
            id: W3CREC-xml-20081126
            docid:
            - id: W3C REC-xml-20081126
              type: W3C
              primary: true
            formattedref:
              content: W3C REC-xml-20081126
              format: text/plain
        series:
        - title:
            content: W3C REC
            format: text/plain
          number: xml
        doctype:
          type: technicalReport
        ext:
          schema-version: v1.0.0
  recorded_at: Thu, 28 Dec 2023 16:48:08 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/relaton/relaton-data-ieee/main/data/IEEE_43-2013_REDLINE.yaml
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.7.12
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - keep-alive
      Content-Length:
      - '4419'
      Cache-Control:
      - max-age=300
      Content-Security-Policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      Content-Type:
      - text/plain; charset=utf-8
      Etag:
      - W/"f860eb7acc971b6dcf9b7d5c036682d27927238255a06071492a6349f7075b65"
      Strict-Transport-Security:
      - max-age=31536000
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      X-Xss-Protection:
      - 1; mode=block
      X-Github-Request-Id:
      - 8D50:308DCC:CAEC7:F6C7D:658D8439
      Accept-Ranges:
      - bytes
      Date:
      - Thu, 28 Dec 2023 16:48:08 GMT
      Via:
      - 1.1 varnish
      X-Served-By:
      - cache-mel11257-MEL
      X-Cache:
      - HIT
      X-Cache-Hits:
      - '1'
      X-Timer:
      - S1703782088.845600,VS0,VE286
      Vary:
      - Authorization,Accept-Encoding,Origin
      Access-Control-Allow-Origin:
      - "*"
      Cross-Origin-Resource-Policy:
      - cross-origin
      X-Fastly-Request-Id:
      - f891fa78f01238b00f71e311f6a8f852cebfb8cc
      Expires:
      - Thu, 28 Dec 2023 16:53:08 GMT
      Source-Age:
      - '0'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        LS0tCnNjaGVtYS12ZXJzaW9uOiB2MS4yLjMKaWQ6IElFRUU0My0yMDEzUmVkbGluZQp0aXRsZToKLSBjb250ZW50OiBJRUVFIFJlY29tbWVuZGVkIFByYWN0aWNlIGZvciBUZXN0aW5nIEluc3VsYXRpb24gUmVzaXN0YW5jZSBvZiBFbGVjdHJpYwogICAgTWFjaGluZXJ5CiAgZm9ybWF0OiB0ZXh0L3BsYWluCiAgdHlwZTogdGl0bGUtbWFpbgotIGNvbnRlbnQ6IElFRUUgUmVjb21tZW5kZWQgUHJhY3RpY2UgZm9yIFRlc3RpbmcgSW5zdWxhdGlvbiBSZXNpc3RhbmNlIG9mIEVsZWN0cmljCiAgICBNYWNoaW5lcnkgLSBSZWRsaW5lCiAgZm9ybWF0OiB0ZXh0L3BsYWluCiAgdHlwZTogbWFpbgpsaW5rOgotIGNvbnRlbnQ6IGh0dHBzOi8vaWVlZXhwbG9yZS5pZWVlLm9yZy9kb2N1bWVudC82Nzk5OTgzCiAgdHlwZTogc3JjCnR5cGU6IHN0YW5kYXJkCmRvY2lkOgotIGlkOiBJRUVFIDQzLTIwMTMgUmVkbGluZQogIHR5cGU6IElFRUUKICBwcmltYXJ5OiB0cnVlCi0gaWQ6IElFRUUgNDPihKItMjAxMyBSZWRsaW5lCiAgdHlwZTogSUVFRQogIHNjb3BlOiB0cmFkZW1hcmsKICBwcmltYXJ5OiB0cnVlCi0gaWQ6IDk3OC0wLTczODEtOTA5My04CiAgdHlwZTogSVNCTgpkb2NudW1iZXI6IElFRUUgNDMtMjAxMyBSZWRsaW5lCmRhdGU6Ci0gdHlwZTogY3JlYXRlZAogIHZhbHVlOiAnMjAxNCcKLSB0eXBlOiBwdWJsaXNoZWQKICB2YWx1ZTogJzIwMTQtMDQtMTcnCi0gdHlwZTogaXNzdWVkCiAgdmFsdWU6ICcyMDEzLTEyLTExJwpjb250cmlidXRvcjoKLSBvcmdhbml6YXRpb246CiAgICBuYW1lOgogICAgLSBjb250ZW50OiBJbnN0aXR1dGUgb2YgRWxlY3RyaWNhbCBhbmQgRWxlY3Ryb25pY3MgRW5naW5lZXJzCiAgICBhYmJyZXZpYXRpb246CiAgICAgIGNvbnRlbnQ6IElFRUUKICAgIHVybDogaHR0cDovL3d3dy5pZWVlLm9yZwogICAgY29udGFjdDoKICAgIC0gYWRkcmVzczoKICAgICAgICBjaXR5OiBOZXcgWW9yawogICAgICAgIGNvdW50cnk6IFVTQQogIHJvbGU6CiAgLSB0eXBlOiBwdWJsaXNoZXIKcmV2ZGF0ZTogJzIwMTQtMDQtMTcnCmxhbmd1YWdlOgotIGVuCnNjcmlwdDoKLSBMYXRuCmFic3RyYWN0OgotIGNvbnRlbnQ6IFRoZSBkYyB2b2x0YWdlIHRlc3RzIHByb2NlZHVyZXMgZm9yIHRoZSBtZWFzdXJlbWVudCBvZiB0aGUgaW5zdWxhdGlvbiByZXNpc3RhbmNlCiAgICBhbmQgcG9sYXJpemF0aW9uIGluZGV4IG9mIGluc3VsYXRlZCBzdGF0b3IsIGFuZCByb3RvciB3aW5kaW5ncyBhbmQgaG93IHRvIGludGVycHJldAogICAgdGhlIHJlc3VsdHMgYXJlIGRlc2NyaWJlZCBpbiB0aGlzIHJlY29tbWVuZGVkIHByYWN0aWNlLgogIGxhbmd1YWdlOgogIC0gZW4KICBzY3JpcHQ6CiAgLSBMYXRuCiAgZm9ybWF0OiB0ZXh0L3BsYWluCmNvcHlyaWdodDoKLSBvd25lcjoKICAtIG5hbWU6CiAgICAtIGNvbnRlbnQ6IEluc3RpdHV0ZSBvZiBFbGVjdHJpY2FsIGFuZCBFbGVjdHJvbmljcyBFbmdpbmVlcnMKICAgIGFiYnJldmlhdGlvbjoKICAgICAgY29udGVudDogSUVFRQogICAgdXJsOiBodHRwOi8vd3d3LmllZWUub3JnCiAgZnJvbTogJzIwMTQnCnJlbGF0aW9uOgotIHR5cGU6IHVwZGF0ZXMKICBiaWJpdGVtOgogICAgaWQ6IElFRUU0My0yMDAwCiAgICBkb2NpZDoKICAgIC0gaWQ6IElFRUUgNDMtMjAwMAogICAgICB0eXBlOiBJRUVFCiAgICAgIHByaW1hcnk6IHRydWUKICAgIGZvcm1hdHRlZHJlZjoKICAgICAgY29udGVudDogSUVFRSA0My0yMDAwCiAgICAgIGZvcm1hdDogdGV4dC9wbGFpbgogIGRlc2NyaXB0aW9uOgogICAgY29udGVudDogcmV2aXNlcwogICAgbGFuZ3VhZ2U6CiAgICAtIGVuCiAgICBzY3JpcHQ6CiAgICAtIExhdG4KICAgIGZvcm1hdDogdGV4dC9wbGFpbgotIHR5cGU6IHVwZGF0ZXMKICBiaWJpdGVtOgogICAgaWQ6IElFRUU0My0yMDAwCiAgICBkb2NpZDoKICAgIC0gaWQ6IElFRUUgNDMtMjAwMAogICAgICB0eXBlOiBJRUVFCiAgICAgIHByaW1hcnk6IHRydWUKICAgIGZvcm1hdHRlZHJlZjoKICAgICAgY29udGVudDogSUVFRSA0My0yMDAwCiAgICAgIGZvcm1hdDogdGV4dC9wbGFpbgogIGRlc2NyaXB0aW9uOgogICAgY29udGVudDogcmV2aXNlcwogICAgbGFuZ3VhZ2U6CiAgICAtIGVuCiAgICBzY3JpcHQ6CiAgICAtIExhdG4KICAgIGZvcm1hdDogdGV4dC9wbGFpbgotIHR5cGU6IHVwZGF0ZXMKICBiaWJpdGVtOgogICAgaWQ6IElFRUU0My0yMDAwCiAgICBkb2NpZDoKICAgIC0gaWQ6IElFRUUgNDMtMjAwMAogICAgICB0eXBlOiBJRUVFCiAgICAgIHByaW1hcnk6IHRydWUKICAgIGZvcm1hdHRlZHJlZjoKICAgICAgY29udGVudDogSUVFRSA0My0yMDAwCiAgICAgIGZvcm1hdDogdGV4dC9wbGFpbgogIGRlc2NyaXB0aW9uOgogICAgY29udGVudDogcmV2aXNlcwogICAgbGFuZ3VhZ2U6CiAgICAtIGVuCiAgICBzY3JpcHQ6CiAgICAtIExhdG4KICAgIGZvcm1hdDogdGV4dC9wbGFpbgotIHR5cGU6IHVwZGF0ZXMKICBiaWJpdGVtOgogICAgaWQ6IElFRUU0My0yMDAwCiAgICBkb2NpZDoKICAgIC0gaWQ6IElFRUUgNDMtMjAwMAogICAgICB0eXBlOiBJRUVFCiAgICAgIHByaW1hcnk6IHRydWUKICAgIGZvcm1hdHRlZHJlZjoKICAgICAgY29udGVudDogSUVFRSA0My0yMDAwCiAgICAgIGZvcm1hdDogdGV4dC9wbGFpbgogIGRlc2NyaXB0aW9uOgogICAgY29udGVudDogcmV2aXNlcwogICAgbGFuZ3VhZ2U6CiAgICAtIGVuCiAgICBzY3JpcHQ6CiAgICAtIExhdG4KICAgIGZvcm1hdDogdGV4dC9wbGFpbgotIHR5cGU6IHVwZGF0ZXMKICBiaWJpdGVtOgogICAgaWQ6IElFRUU0My0yMDAwCiAgICBkb2NpZDoKICAgIC0gaWQ6IElFRUUgNDMtMjAwMAogICAgICB0eXBlOiBJRUVFCiAgICAgIHByaW1hcnk6IHRydWUKICAgIGZvcm1hdHRlZHJlZjoKICAgICAgY29udGVudDogSUVFRSA0My0yMDAwCiAgICAgIGZvcm1hdDogdGV4dC9wbGFpbgogIGRlc2NyaXB0aW9uOgogICAgY29udGVudDogcmV2aXNlcwogICAgbGFuZ3VhZ2U6CiAgICAtIGVuCiAgICBzY3JpcHQ6CiAgICAtIExhdG4KICAgIGZvcm1hdDogdGV4dC9wbGFpbgotIHR5cGU6IHVwZGF0ZXMKICBiaWJpdGVtOgogICAgaWQ6IElFRUU0My0yMDAwCiAgICBkb2NpZDoKICAgIC0gaWQ6IElFRUUgNDMtMjAwMAogICAgICB0eXBlOiBJRUVFCiAgICAgIHByaW1hcnk6IHRydWUKICAgIGZvcm1hdHRlZHJlZjoKICAgICAgY29udGVudDogSUVFRSA0My0yMDAwCiAgICAgIGZvcm1hdDogdGV4dC9wbGFpbgogIGRlc2NyaXB0aW9uOgogICAgY29udGVudDogcmV2aXNlcwogICAgbGFuZ3VhZ2U6CiAgICAtIGVuCiAgICBzY3JpcHQ6CiAgICAtIExhdG4KICAgIGZvcm1hdDogdGV4dC9wbGFpbgotIHR5cGU6IHVwZGF0ZXMKICBiaWJpdGVtOgogICAgaWQ6IElFRUU0My0yMDAwCiAgICBkb2NpZDoKICAgIC0gaWQ6IElFRUUgNDMtMjAwMAogICAgICB0eXBlOiBJRUVFCiAgICAgIHByaW1hcnk6IHRydWUKICAgIGZvcm1hdHRlZHJlZjoKICAgICAgY29udGVudDogSUVFRSA0My0yMDAwCiAgICAgIGZvcm1hdDogdGV4dC9wbGFpbgogIGRlc2NyaXB0aW9uOgogICAgY29udGVudDogcmV2aXNlcwogICAgbGFuZ3VhZ2U6CiAgICAtIGVuCiAgICBzY3JpcHQ6CiAgICAtIExhdG4KICAgIGZvcm1hdDogdGV4dC9wbGFpbgprZXl3b3JkOgotIGNvbnRlbnQ6IElFRUUgc3RhbmRhcmRzCi0gY29udGVudDogRWxlY3Ryb21lY2hhbmljYWwgZGV2aWNlcwotIGNvbnRlbnQ6IEluc3VsYXRpb24KLSBjb250ZW50OiBSZXNpc3RhbmNlCi0gY29udGVudDogUG9sYXJpemF0aW9uCi0gY29udGVudDogU3RhdG9yIHdpbmRpbmdzCi0gY29udGVudDogVm9sdGFnZSBjb250cm9sCi0gY29udGVudDogQXJtYXR1cmUKLSBjb250ZW50OiBXaW5kaW5ncwotIGNvbnRlbnQ6IERDIG1vdG9ycwotIGNvbnRlbnQ6IGFybWF0dXJlIHdpbmRpbmcKLSBjb250ZW50OiBkYwotIGNvbnRlbnQ6IGZpZWxkIHdpbmRpbmcKLSBjb250ZW50OiBJRUVFIDQzKFRNKQotIGNvbnRlbnQ6IGluc3VsYXRlZAotIGNvbnRlbnQ6IGluc3VsYXRpb24gcmVzaXN0YW5jZQotIGNvbnRlbnQ6IHBvbGFyaXphdGlvbiBpbmRleAotIGNvbnRlbnQ6IHJvdG9yIHdpbmRpbmcKLSBjb250ZW50OiBzdGF0b3Igd2luZGluZwotIGNvbnRlbnQ6IHZvbHRhZ2UKZG9jdHlwZTogcmVkbGluZQplZGl0b3JpYWxncm91cDoKICBjb21taXR0ZWU6CiAgLSBFbGVjdHJpYyBNYWNoaW5lcnkgb2YgdGhlIElFRUUgUG93ZXIgYW5kIEVuZXJneSBTb2NpZXR5CmljczoKLSBjb2RlOiAyOS4xNjAuMDEKICB0ZXh0OiBSb3RhdGluZyBtYWNoaW5lcnkgaW4gZ2VuZXJhbApleHQ6CiAgc2NoZW1hLXZlcnNpb246IHYxLjAuMAogIHN0YW5kYXJkX3N0YXR1czogQWN0aXZlCiAgc3RhbmRhcmRfbW9kaWZpZWQ6IFJlZGxpbmUKICBwdWJzdGF0dXM6IEFjdGl2ZQogIGhvbGRzdGF0dXM6IFB1Ymxpc2gK
  recorded_at: Thu, 28 Dec 2023 16:48:08 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/relaton/relaton-data-iec/main/data/iec_60050_1975.yaml
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - raw.githubusercontent.com
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - keep-alive
      Content-Length:
      - '1508'
      Cache-Control:
      - max-age=300
      Content-Security-Policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      Content-Type:
      - text/plain; charset=utf-8
      Etag:
      - W/"4c99b2353fc7ad9b9d1efc2464de4372d1438dbf9c9d23e76cee5dc7a91c2847"
      Strict-Transport-Security:
      - max-age=31536000
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      X-Xss-Protection:
      - 1; mode=block
      X-Github-Request-Id:
      - 49E4:342C54:BF61A:E85DC:658D7642
      Accept-Ranges:
      - bytes
      Date:
      - Thu, 28 Dec 2023 16:48:08 GMT
      Via:
      - 1.1 varnish
      X-Served-By:
      - cache-mel11258-MEL
      X-Cache:
      - HIT
      X-Cache-Hits:
      - '1'
      X-Timer:
      - S1703782088.881959,VS0,VE276
      Vary:
      - Authorization,Accept-Encoding,Origin
      Access-Control-Allow-Origin:
      - "*"
      Cross-Origin-Resource-Policy:
      - cross-origin
      X-Fastly-Request-Id:
      - fdf9294d5cd117024fec1822eefa4d9bfc8d3c87
      Expires:
      - Thu, 28 Dec 2023 16:53:08 GMT
      Source-Age:
      - '0'
    body:
      encoding: ASCII-8BIT
      string: |
        ---
        schema-version: v1.2.3
        id: IEC60050-1975
        title:
        - content: International Electrotechnical Vocabulary (IEV) - Index
          language:
          - en
          script:
          - Latn
          format: text/plain
          type: main
        - content: Vocabulaire Electrotechnique International (IEV) - Index
          language:
          - fr
          script:
          - Latn
          format: text/plain
          type: main
        link:
        - content: https://webstore.iec.ch/publication/12502
          type: src
        type: standard
        docid:
        - id: IEC 60050:1975
          type: IEC
          primary: true
        - id: 'urn:iec:std:iec:60050:1975-01:::'
          type: URN
        date:
        - type: published
          value: '1975-01-01'
        contributor:
        - organization:
            name:
            - content: International Electrotechnical Commission
            abbreviation:
              content: IEC
            url: www.iec.ch
          role:
          - type: publisher
        edition:
          content: '3'
        revdate: '1975-01-01'
        language:
        - en
        - fr
        script:
        - Latn
        docstatus:
          stage:
            value: REVISED
        copyright:
        - owner:
          - name:
            - content: International Electrotechnical Commission
            abbreviation:
              content: IEC
            url: www.iec.ch
          from: '1975'
        relation:
        - type: updates
          bibitem:
            id: IEC60050-1970
            type: standard
            docid:
            - id: IEC 60050:1970
              type: IEC
              primary: true
            formattedref:
              content: IEC 60050:1970
              format: text/plain
        place:
        - Geneva
        doctype: international-standard
        editorialgroup:
          technical_committee:
          - name: TC 1
            number: 1
            type: technicalCommittee
        structuredidentifier:
          project_number: '60050'
          type: IEC
        ext:
          schema-version: v1.0.0
        price_code: iec:M
  recorded_at: Thu, 28 Dec 2023 16:48:08 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/relaton/relaton-data-w3c/main/data/xptr.yaml
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - raw.githubusercontent.com
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - keep-alive
      Content-Length:
      - '685'
      Cache-Control:
      - max-age=300
      Content-Security-Policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      Content-Type:
      - text/plain; charset=utf-8
      Etag:
      - W/"da48daedf2acac3ea64e9eb575ce78818f453c7b55b9b6a5e5068183fe7d23a9"
      Strict-Transport-Security:
      - max-age=31536000
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      X-Xss-Protection:
      - 1; mode=block
      X-Github-Request-Id:
      - 5B10:2B64EA:E2EE0:115E7B:658DA6C3
      Accept-Ranges:
      - bytes
      Date:
      - Thu, 28 Dec 2023 16:48:08 GMT
      Via:
      - 1.1 varnish
      X-Served-By:
      - cache-mel11272-MEL
      X-Cache:
      - MISS
      X-Cache-Hits:
      - '0'
      X-Timer:
      - S1703782088.881606,VS0,VE297
      Vary:
      - Authorization,Accept-Encoding,Origin
      Access-Control-Allow-Origin:
      - "*"
      Cross-Origin-Resource-Policy:
      - cross-origin
      X-Fastly-Request-Id:
      - fdbd28a183bff61bca8d3a654221e2b7ef780cb2
      Expires:
      - Thu, 28 Dec 2023 16:53:08 GMT
      Source-Age:
      - '0'
    body:
      encoding: ASCII-8BIT
      string: |
        ---
        schema-version: v1.2.7
        id: W3Cxptr
        title:
        - content: XML Pointer Language (XPointer)
          format: text/plain
        link:
        - content: https://www.w3.org/TR/xptr/
          type: src
        type: standard
        docid:
        - id: W3C xptr
          type: W3C
          primary: true
        docnumber: xptr
        language:
        - en
        script:
        - Latn
        docstatus:
          stage:
            value: workingDraft
        relation:
        - type: instanceOf
          bibitem:
            id: W3CWD-xptr-20020816
            docid:
            - id: W3C WD-xptr-20020816
              type: W3C
              primary: true
            formattedref:
              content: W3C WD-xptr-20020816
              format: text/plain
        series:
        - title:
            content: W3C WD
            format: text/plain
          number: xptr
        doctype:
          type: technicalReport
        ext:
          schema-version: v1.0.0
  recorded_at: Thu, 28 Dec 2023 16:48:08 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/relaton/relaton-data-iec/main/data/iec_61131-3_2013.yaml
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - raw.githubusercontent.com
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - keep-alive
      Content-Length:
      - '3872'
      Cache-Control:
      - max-age=300
      Content-Security-Policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      Content-Type:
      - text/plain; charset=utf-8
      Etag:
      - W/"f926554759acb262032513e7fb2c2d7b046243a6dc4ec54ba952a96711eacbd1"
      Strict-Transport-Security:
      - max-age=31536000
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      X-Xss-Protection:
      - 1; mode=block
      X-Github-Request-Id:
      - 9298:33953E:E0605:1135C1:658DA6C6
      Accept-Ranges:
      - bytes
      Date:
      - Thu, 28 Dec 2023 16:48:08 GMT
      Via:
      - 1.1 varnish
      X-Served-By:
      - cache-mel11237-MEL
      X-Cache:
      - MISS
      X-Cache-Hits:
      - '0'
      X-Timer:
      - S1703782088.849967,VS0,VE302
      Vary:
      - Authorization,Accept-Encoding,Origin
      Access-Control-Allow-Origin:
      - "*"
      Cross-Origin-Resource-Policy:
      - cross-origin
      X-Fastly-Request-Id:
      - fceee4108fe699a3f102f3e21fd12fc5a0465c1a
      Expires:
      - Thu, 28 Dec 2023 16:53:08 GMT
      Source-Age:
      - '0'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        LS0tCnNjaGVtYS12ZXJzaW9uOiB2MS4yLjMKaWQ6IElFQzYxMTMxLTMtMjAxMwp0aXRsZToKLSBjb250ZW50OiAnUHJvZ3JhbW1hYmxlIGNvbnRyb2xsZXJzIC0gUGFydCAzOiBQcm9ncmFtbWluZyBsYW5ndWFnZXMnCiAgbGFuZ3VhZ2U6CiAgLSBlbgogIHNjcmlwdDoKICAtIExhdG4KICBmb3JtYXQ6IHRleHQvcGxhaW4KICB0eXBlOiBtYWluCi0gY29udGVudDogJ0F1dG9tYXRlcyBwcm9ncmFtbWFibGVzIC0gUGFydGllIDM6IExhbmdhZ2VzIGRlIHByb2dyYW1tYXRpb24nCiAgbGFuZ3VhZ2U6CiAgLSBmcgogIHNjcmlwdDoKICAtIExhdG4KICBmb3JtYXQ6IHRleHQvcGxhaW4KICB0eXBlOiBtYWluCmxpbms6Ci0gY29udGVudDogaHR0cHM6Ly93ZWJzdG9yZS5pZWMuY2gvcHVibGljYXRpb24vNDU1MgogIHR5cGU6IHNyYwotIGNvbnRlbnQ6IGh0dHBzOi8vd2Vic3RvcmUuaWVjLmNoL3ByZXZpZXcvaW5mb19pZWM2MTEzMS0ze2VkMy4wfWIucGRmCiAgdHlwZTogb2JwCnR5cGU6IHN0YW5kYXJkCmRvY2lkOgotIGlkOiBJRUMgNjExMzEtMzoyMDEzCiAgdHlwZTogSUVDCiAgcHJpbWFyeTogdHJ1ZQotIGlkOiAndXJuOmllYzpzdGQ6aWVjOjYxMTMxLTM6MjAxMy0wMjo6OicKICB0eXBlOiBVUk4KZGF0ZToKLSB0eXBlOiBwdWJsaXNoZWQKICB2YWx1ZTogJzIwMTMtMDItMjAnCi0gdHlwZTogc3RhYmxlLXVudGlsCiAgdmFsdWU6ICcyMDI1LTEyLTMxJwpjb250cmlidXRvcjoKLSBvcmdhbml6YXRpb246CiAgICBuYW1lOgogICAgLSBjb250ZW50OiBJbnRlcm5hdGlvbmFsIEVsZWN0cm90ZWNobmljYWwgQ29tbWlzc2lvbgogICAgYWJicmV2aWF0aW9uOgogICAgICBjb250ZW50OiBJRUMKICAgIHVybDogd3d3LmllYy5jaAogIHJvbGU6CiAgLSB0eXBlOiBwdWJsaXNoZXIKZWRpdGlvbjoKICBjb250ZW50OiAnMycKcmV2ZGF0ZTogJzIwMTMtMDItMjAnCmxhbmd1YWdlOgotIGVuCi0gZnIKc2NyaXB0OgotIExhdG4KYWJzdHJhY3Q6Ci0gY29udGVudDogJ0lFQyA2MTEzMS0zOjIwMTMgc3BlY2lmaWVzIHRoZSBzeW50YXggYW5kIHNlbWFudGljcyBvZiBhIHVuaWZpZWQgc3VpdGUKICAgIG9mIHByb2dyYW1taW5nIGxhbmd1YWdlcyBmb3IgcHJvZ3JhbW1hYmxlIGNvbnRyb2xsZXJzIChQQ3MpLiBUaGlzIHN1aXRlIGNvbnNpc3RzCiAgICBvZiB0d28gdGV4dHVhbCBsYW5ndWFnZXMsIEluc3RydWN0aW9uIExpc3QgKElMKSBhbmQgU3RydWN0dXJlZCBUZXh0IChTVCksIGFuZAogICAgdHdvIGdyYXBoaWNhbCBsYW5ndWFnZXMsIExhZGRlciBEaWFncmFtIChMRCkgYW5kIEZ1bmN0aW9uIEJsb2NrIERpYWdyYW0gKEZCRCkuCiAgICBUaGlzIHRoaXJkIGVkaXRpb24gY2FuY2VscyBhbmQgcmVwbGFjZXMgdGhlIHNlY29uZCBlZGl0aW9uLCBwdWJsaXNoZWQgaW4gMjAwMwogICAgYW5kIGNvbnN0aXR1dGVzIGEgdGVjaG5pY2FsIHJldmlzaW9uLiBJdCBpbmNsdWRlcyB0aGUgZm9sbG93aW5nIHNpZ25pZmljYW50IHRlY2huaWNhbAogICAgY2hhbmdlczogSXQgaXMgYSBjb21wYXRpYmxlIGV4dGVuc2lvbiBvZiB0aGUgc2Vjb25kIGVkaXRpb24uIFRoZSBtYWluIGV4dGVuc2lvbnMKICAgIGFyZSBuZXcgZGF0YSB0eXBlcyBhbmQgY29udmVyc2lvbiBmdW5jdGlvbnMsIHJlZmVyZW5jZXMsIG5hbWUgc3BhY2VzIGFuZCB0aGUgb2JqZWN0CiAgICBvcmllbnRlZCBmZWF0dXJlcyBvZiBjbGFzc2VzIGFuZCBmdW5jdGlvbiBibG9ja3MuJwogIGxhbmd1YWdlOgogIC0gZW4KICBzY3JpcHQ6CiAgLSBMYXRuCiAgZm9ybWF0OiB0ZXh0L2h0bWwKLSBjb250ZW50OiAnTGEgQ0VJIDYxMTMxLTM6MjAxMyBzcMOpY2lmaWUgbGEgc3ludGF4ZSBldCBsYSBzw6ltYW50aXF1ZSBkJyd1bmUgc3VpdGUKICAgIHVuaWZpw6llIGRlIGxhbmdhZ2VzIGRlIHByb2dyYW1tYXRpb24gdXRpbGlzw6lzIHBvdXIgbGVzIGF1dG9tYXRlcyBwcm9ncmFtbWFibGVzCiAgICAoQVApLiBDZXR0ZSBzdWl0ZSBlc3QgY29uc3RpdHXDqWUgZGUgZGV1eCBsYW5nYWdlcyB0ZXh0dWVscywgbGlzdGUgZCcnaW5zdHJ1Y3Rpb25zCiAgICAoSUwsIEluc3RydWN0aW9uIExpc3QpIGV0IHRleHRlIHN0cnVjdHVyw6kgKFNULCBTdHJ1Y3R1cmVkIFRleHQpLCBldCBkZSBkZXV4IGxhbmdhZ2VzCiAgICBncmFwaGlxdWVzLCBkaWFncmFtbWUgw6AgY29udGFjdHMgKExELCBMYWRkZXIgRGlhZ3JhbSkgZXQgZGlhZ3JhbW1lIGRlIGJsb2MgZm9uY3Rpb25uZWwKICAgIChGQkQsIEZ1bmN0aW9uIEJsb2NrIERpYWdyYW0pLiBDZXR0ZSB0cm9pc2nDqG1lIMOpZGl0aW9uIGFubnVsZSBldCByZW1wbGFjZSBsYSBkZXV4acOobWUKICAgIMOpZGl0aW9uIHB1Ymxpw6llIGVuIDIwMDMgZXQgY29uc3RpdHVlIHVuZSByw6l2aXNpb24gdGVjaG5pcXVlLiBMYSBwcsOpc2VudGUgw6lkaXRpb24KICAgIGluY2x1dCBsZXMgbW9kaWZpY2F0aW9ucyB0ZWNobmlxdWVzIG1hamV1cmVzIHN1aXZhbnRlczogZWxsZSBlc3QgdW5lIGV4dGVuc2lvbgogICAgY29tcGF0aWJsZSBkZSBsYSBkZXV4acOobWUgw6lkaXRpb24gZXQgbGVzIHByaW5jaXBhbGVzIGV4dGVuc2lvbnMgY29uY2VybmVudCBkZQogICAgbm91dmVhdXggdHlwZXMgZGUgZG9ubsOpZXMgZXQgZGUgbm91dmVsbGVzIGZvbmN0aW9ucyBkZSBjb252ZXJzaW9uLCBkZXMgcsOpZsOpcmVuY2VzLAogICAgZGVzIGVzcGFjZXMgZGUgbm9tcyBldCBkZXMgY2xhc3NlcyBkZSBjYXJhY3TDqXJpc3RpcXVlcyBvcmllbnTDqWVzIG9iamV0LCBldCBkZXMKICAgIGJsb2NzIGZvbmN0aW9ubmVscy4nCiAgbGFuZ3VhZ2U6CiAgLSBmcgogIHNjcmlwdDoKICAtIExhdG4KICBmb3JtYXQ6IHRleHQvaHRtbApkb2NzdGF0dXM6CiAgc3RhZ2U6CiAgICB2YWx1ZTogUFVCTElTSEVECmNvcHlyaWdodDoKLSBvd25lcjoKICAtIG5hbWU6CiAgICAtIGNvbnRlbnQ6IEludGVybmF0aW9uYWwgRWxlY3Ryb3RlY2huaWNhbCBDb21taXNzaW9uCiAgICBhYmJyZXZpYXRpb246CiAgICAgIGNvbnRlbnQ6IElFQwogICAgdXJsOiB3d3cuaWVjLmNoCiAgZnJvbTogJzIwMTMnCnJlbGF0aW9uOgotIHR5cGU6IHVwZGF0ZXMKICBiaWJpdGVtOgogICAgaWQ6IElFQzYxMTMxLTMtMjAwMwogICAgdHlwZTogc3RhbmRhcmQKICAgIGRvY2lkOgogICAgLSBpZDogSUVDIDYxMTMxLTM6MjAwMwogICAgICB0eXBlOiBJRUMKICAgICAgcHJpbWFyeTogdHJ1ZQogICAgZm9ybWF0dGVkcmVmOgogICAgICBjb250ZW50OiBJRUMgNjExMzEtMzoyMDAzCiAgICAgIGZvcm1hdDogdGV4dC9wbGFpbgotIHR5cGU6IHVwZGF0ZXMKICBiaWJpdGVtOgogICAgaWQ6IElFQzYxMTMxLTMtMTk5MwogICAgdHlwZTogc3RhbmRhcmQKICAgIGRvY2lkOgogICAgLSBpZDogSUVDIDYxMTMxLTM6MTk5MwogICAgICB0eXBlOiBJRUMKICAgICAgcHJpbWFyeTogdHJ1ZQogICAgZm9ybWF0dGVkcmVmOgogICAgICBjb250ZW50OiBJRUMgNjExMzEtMzoxOTkzCiAgICAgIGZvcm1hdDogdGV4dC9wbGFpbgpwbGFjZToKLSBHZW5ldmEKZG9jdHlwZTogaW50ZXJuYXRpb25hbC1zdGFuZGFyZAplZGl0b3JpYWxncm91cDoKICB0ZWNobmljYWxfY29tbWl0dGVlOgogIC0gbmFtZTogVEMgNjUvU0MgNjVCCiAgICBudW1iZXI6IDY1CiAgICB0eXBlOiB0ZWNobmljYWxDb21taXR0ZWUKaWNzOgotIGNvZGU6IDI1LjA0MC40MAogIHRleHQ6IEluZHVzdHJpYWwgcHJvY2VzcyBtZWFzdXJlbWVudCBhbmQgY29udHJvbAotIGNvZGU6IDM1LjI0MC41MAogIHRleHQ6IElUIGFwcGxpY2F0aW9ucyBpbiBpbmR1c3RyeQpzdHJ1Y3R1cmVkaWRlbnRpZmllcjoKICBwcm9qZWN0X251bWJlcjogJzYxMTMxJwogIHBhcnQ6ICczJwogIHR5cGU6IElFQwpleHQ6CiAgc2NoZW1hLXZlcnNpb246IHYxLjAuMApwcmljZV9jb2RlOiBpZWM6UAo=
  recorded_at: Thu, 28 Dec 2023 16:48:08 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/relaton/relaton-data-ieee/main/data/IEEE_194-1977.yaml
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.7.12
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - keep-alive
      Content-Length:
      - '2578'
      Cache-Control:
      - max-age=300
      Content-Security-Policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      Content-Type:
      - text/plain; charset=utf-8
      Etag:
      - W/"9f966dcdbec1bd6766559aabbd7855c1a6e82a91dc2e64627df824df95478b99"
      Strict-Transport-Security:
      - max-age=31536000
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      X-Xss-Protection:
      - 1; mode=block
      X-Github-Request-Id:
      - 8C50:33900E:9F502:C06E9:658D5008
      Accept-Ranges:
      - bytes
      Date:
      - Thu, 28 Dec 2023 16:48:08 GMT
      Via:
      - 1.1 varnish
      X-Served-By:
      - cache-mel11253-MEL
      X-Cache:
      - HIT
      X-Cache-Hits:
      - '1'
      X-Timer:
      - S1703782088.056445,VS0,VE278
      Vary:
      - Authorization,Accept-Encoding,Origin
      Access-Control-Allow-Origin:
      - "*"
      Cross-Origin-Resource-Policy:
      - cross-origin
      X-Fastly-Request-Id:
      - 74a35c5ed0a405345e807fdf08f73b7f9ed520a7
      Expires:
      - Thu, 28 Dec 2023 16:53:08 GMT
      Source-Age:
      - '0'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        LS0tCnNjaGVtYS12ZXJzaW9uOiB2MS4yLjMKaWQ6IElFRUUxOTQtMTk3Nwp0aXRsZToKLSBjb250ZW50OiBJRUVFIFN0YW5kYXJkIFB1bHNlIFRlcm1zIGFuZCBEZWZpbml0aW9ucwogIGZvcm1hdDogdGV4dC9wbGFpbgogIHR5cGU6IG1haW4KbGluazoKLSBjb250ZW50OiBodHRwczovL2llZWV4cGxvcmUuaWVlZS5vcmcvZG9jdW1lbnQvMjkwMTUKICB0eXBlOiBzcmMKdHlwZTogc3RhbmRhcmQKZG9jaWQ6Ci0gaWQ6IElFRUUgMTk0LTE5NzcKICB0eXBlOiBJRUVFCiAgcHJpbWFyeTogdHJ1ZQotIGlkOiBJRUVFIDE5NOKEoi0xOTc3CiAgdHlwZTogSUVFRQogIHNjb3BlOiB0cmFkZW1hcmsKICBwcmltYXJ5OiB0cnVlCi0gaWQ6IDAtNzM4MS00MzUwLTIKICB0eXBlOiBJU0JOCi0gaWQ6IDEwLjExMDkvSUVFRVNURC4xOTc3LjgxMDk4CiAgdHlwZTogRE9JCmRvY251bWJlcjogSUVFRSAxOTQtMTk3NwpkYXRlOgotIHR5cGU6IGNyZWF0ZWQKICB2YWx1ZTogJzE5NzcnCi0gdHlwZTogcHVibGlzaGVkCiAgdmFsdWU6ICcyMDAyLTEyLTEwJwotIHR5cGU6IGlzc3VlZAogIHZhbHVlOiAnMTk3NS0wMi0xNycKY29udHJpYnV0b3I6Ci0gb3JnYW5pemF0aW9uOgogICAgbmFtZToKICAgIC0gY29udGVudDogSW5zdGl0dXRlIG9mIEVsZWN0cmljYWwgYW5kIEVsZWN0cm9uaWNzIEVuZ2luZWVycwogICAgYWJicmV2aWF0aW9uOgogICAgICBjb250ZW50OiBJRUVFCiAgICB1cmw6IGh0dHA6Ly93d3cuaWVlZS5vcmcKICAgIGNvbnRhY3Q6CiAgICAtIGFkZHJlc3M6CiAgICAgICAgY2l0eTogTmV3IFlvcmsKICAgICAgICBjb3VudHJ5OiBVU0EKICByb2xlOgogIC0gdHlwZTogcHVibGlzaGVyCnJldmRhdGU6ICcyMDAyLTEyLTEwJwpsYW5ndWFnZToKLSBlbgpzY3JpcHQ6Ci0gTGF0bgphYnN0cmFjdDoKLSBjb250ZW50OiAnVGhpcyBzdGFuZGFyZCBwcm92aWRlcyBmdW5kYW1lbnRhbCBkZWZpbml0aW9ucyBmb3IgZ2VuZXJhbCB1c2UgaW4gdGltZQogICAgZG9tYWluIHB1bHNlIHRlY2hub2xvZ3kuIEl0IGRlZmluZXMgdGVybXMgZm9yIHB1bHNlIHBoZW5vbWVuYSBhbmQgcHVsc2UgcGFyYW1ldGVycwogICAgd2hpY2ggYXJlIHByZXJlcXVpc2l0ZSB0bzogZWZmaWNpZW50IGNvbW11bmljYXRpb24gb2YgdGVjaG5pY2FsIGluZm9ybWF0aW9uOyBzdGFuZGFyZHMKICAgIGZvciBtZXRob2RzIG9mIHB1bHNlIHBhcmFtZXRlciBtZWFzdXJlbWVudDsgc3RhbmRhcmRzIGZvciBwdWxzZSBhcHBhcmF0dXM7IGFuZAogICAgc3RhbmRhcmRzIGZvciBhcHBhcmF0dXMgd2hpY2ggZW1wbG95cyBwdWxzZSB0ZWNobmlxdWVzLiBXaXRoIGl0cyBzY29wZSwgdGhlIG9iamVjdAogICAgb2YgdGhpcyBzdGFuZGFyZCBpcyB0aGUgZGVmaW5pdGlvbiBvZiBhbiBpbnRlcm5hbGx5IGNvbnNpc3RlbnQsIG1hdGhlbWF0aWNhbGx5CiAgICByaWdvcm91cywgYW5kIGdlbmVyYWwgc2V0IG9mIHB1bHNlIHRlcm1zIHdoaWNoIGFyZSBhcHBsaWNhYmxlIHRvOiBoeXBvdGhldGljYWwKICAgIGFuZCBwcmFjdGljYWwgcHVsc2VzIHJlZ2FyZGxlc3Mgb2YgYWNjdXJhY3kgb3IgcHJlY2lzaW9uOyB0byBhIHdpZGUgcmFuZ2Ugb2YgdGVjaG5vbG9naWVzCiAgICBhbmQgZGlzY2lwbGluZXM7IGFuZCwgaW4gYSBtZWFzdXJlbWVudCBzaXR1YXRpb24sIHJlZ2FyZGxlc3Mgb2YgdGhlIG1lYW5zIG9mIG1lYXN1cmVtZW50CiAgICBvciB0aGUgbWVhbnMgZm9yIHdhdmVmb3JtIGV2YWx1YXRpb24gZW1wbG95ZWQuPDxFVFg+PicKICBsYW5ndWFnZToKICAtIGVuCiAgc2NyaXB0OgogIC0gTGF0bgogIGZvcm1hdDogdGV4dC9wbGFpbgpkb2NzdGF0dXM6CiAgc3RhZ2U6CiAgICB2YWx1ZTogd2l0aGRyYXduCmNvcHlyaWdodDoKLSBvd25lcjoKICAtIG5hbWU6CiAgICAtIGNvbnRlbnQ6IEluc3RpdHV0ZSBvZiBFbGVjdHJpY2FsIGFuZCBFbGVjdHJvbmljcyBFbmdpbmVlcnMKICAgIGFiYnJldmlhdGlvbjoKICAgICAgY29udGVudDogSUVFRQogICAgdXJsOiBodHRwOi8vd3d3LmllZWUub3JnCiAgZnJvbTogJzE5NzcnCmtleXdvcmQ6Ci0gY29udGVudDogTWVhc3VyZW1lbnQgc3RhbmRhcmRzCi0gY29udGVudDogVGVybWlub2xvZ3kKLSBjb250ZW50OiBQdWxzZSBjaXJjdWl0cwotIGNvbnRlbnQ6IFB1bHNlIGdlbmVyYXRpb24KLSBjb250ZW50OiBTdGFuZGFyZHMKZG9jdHlwZTogc3RhbmRhcmQKZWRpdG9yaWFsZ3JvdXA6CiAgY29tbWl0dGVlOgogIC0gSW50ZXJuYXRpb25hbCBFbGVjdHJvdGVjaG5pY2FsIENvbW1pc3Npb24gVGVjaG5pY2FsIENvbW1pdHRlZSA2NgppY3M6Ci0gY29kZTogMDEuMDQwLjE3CiAgdGV4dDogTWV0cm9sb2d5IGFuZCBtZWFzdXJlbWVudC4gUGh5c2ljYWwgcGhlbm9tZW5hIChWb2NhYnVsYXJpZXMpCi0gY29kZTogMTcuMjIwLjIwCiAgdGV4dDogTWVhc3VyZW1lbnQgb2YgZWxlY3RyaWNhbCBhbmQgbWFnbmV0aWMgcXVhbnRpdGllcwpleHQ6CiAgc2NoZW1hLXZlcnNpb246IHYxLjAuMAogIHN0YW5kYXJkX3N0YXR1czogSW5hY3RpdmUKICBzdGFuZGFyZF9tb2RpZmllZDogV2l0aGRyYXduCiAgcHVic3RhdHVzOiBBY3RpdmUKICBob2xkc3RhdHVzOiBQdWJsaXNoCg==
  recorded_at: Thu, 28 Dec 2023 16:48:08 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/relaton/relaton-data-etsi/main/data/ETSI_GS_NFV_002_V1_2_1_2014-12.yaml
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - raw.githubusercontent.com
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - keep-alive
      Content-Length:
      - '1357'
      Cache-Control:
      - max-age=300
      Content-Security-Policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      Content-Type:
      - text/plain; charset=utf-8
      Etag:
      - W/"1e2eb0403970565405b1c18891026af6741d4cd8c30dca024c27d54c592c5755"
      Strict-Transport-Security:
      - max-age=31536000
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      X-Xss-Protection:
      - 1; mode=block
      X-Github-Request-Id:
      - 25FC:22442E:DC987:10F897:658DA695
      Accept-Ranges:
      - bytes
      Date:
      - Thu, 28 Dec 2023 16:48:08 GMT
      Via:
      - 1.1 varnish
      X-Served-By:
      - cache-mel11244-MEL
      X-Cache:
      - HIT
      X-Cache-Hits:
      - '1'
      X-Timer:
      - S1703782088.374072,VS0,VE1
      Vary:
      - Authorization,Accept-Encoding,Origin
      Access-Control-Allow-Origin:
      - "*"
      Cross-Origin-Resource-Policy:
      - cross-origin
      X-Fastly-Request-Id:
      - 197bc22f671b7b95fb4d1f87160296bef14502d2
      Expires:
      - Thu, 28 Dec 2023 16:53:08 GMT
      Source-Age:
      - '49'
    body:
      encoding: ASCII-8BIT
      string: |
        ---
        schema-version: v1.2.7
        id: ETSIGSNFV002V1.2.12014-12
        title:
        - content: Network Functions Virtualisation (NFV); Architectural Framework
          language:
          - en
          script:
          - Latn
          format: text/plain
        link:
        - content: http://webapp.etsi.org/workprogram/Report_WorkItem.asp?WKI_ID=43827
          type: src
        - content: http://www.etsi.org/deliver/etsi_gs/NFV/001_099/002/01.02.01_60/gs_NFV002v010201p.pdf
          type: pdf
        docid:
        - id: ETSI GS NFV 002 V1.2.1 (2014-12)
          type: ETSI
          primary: true
        docnumber: ETSI GS NFV 002 V1.2.1 (2014-12)
        date:
        - type: published
          value: 2014-12
        version:
        - draft: 1.2.1
        revdate: 2014-12
        language:
        - en
        script:
        - Latn
        abstract:
        - content: The document describes the high-level architectural framework and design
            philosophy of VNFs, and of the supporting platform and infrastructure. The work
            to realize in the revision of the Architectural Framework aims at developing the
            basic principles of the existing framework and implementing any current missing
            description that will help improve the understanding of the NFV architecture within
            and outside the NFV ISG context.
          language:
          - en
          script:
          - Latn
          format: text/plain
        keyword:
        - content: ARCHITECTURE
        - content: NFV
        doctype:
          type: Group Specification
          abbreviation: GS
        editorialgroup:
        - name: Network Functions Virtualisation
        ext:
          schema-version: v0.0.3
  recorded_at: Thu, 28 Dec 2023 16:48:08 GMT
- request:
    method: post
    uri: https://jcl49wv5ar-dsn.algolia.net/1/indexes/all_en/query
    body:
      encoding: UTF-8
      string: '{"query":"ISO 10642","hitsPerPage":100,"filters":"category:standard"}'
    headers:
      User-Agent:
      - Algolia for Ruby (2.3.4), Ruby (3.2.2)
      X-Algolia-Api-Key:
      - dd1b9e1ab383f4d4817d29cd5e96d3f0
      X-Algolia-Application-Id:
      - JCL49WV5AR
      Content-Type:
      - application/json; charset=utf-8
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      Connection:
      - keep-alive
      Keep-Alive:
      - '30'
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Thu, 28 Dec 2023 16:48:08 GMT
      Content-Type:
      - application/json; charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      X-Alg-Pt:
      - '1'
      Accept-Encoding:
      - deflate, gzip
      Cache-Control:
      - no-store
      Access-Control-Allow-Origin:
      - "*"
      Timing-Allow-Origin:
      - "*"
      X-Content-Type-Options:
      - nosniff
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Content-Disposition:
      - inline; filename=a.txt
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJoaXRzIjpbeyJjYXRlZ29yeSI6InN0YW5kYXJkIiwicGF0aCI6Ii9zaXRlcy9pc29vcmcvY29udGVudHMvZGF0YS9zdGFuZGFyZC8wNy8yNS83MjU3OCIsInV1aWQiOiI1NzI0YmM4NC04OTQ3LTRlNzctOGNhNi02YTMyYjk1MTI1NmYiLCJ0aXRsZSI6IklTTyAxMDY0MjoyMDE5IEZhc3RlbmVycyDigJQgSGV4YWdvbiBzb2NrZXQgY291bnRlcnN1bmsgaGVhZCBzY3Jld3Mgd2l0aCByZWR1Y2VkIGxvYWRhYmlsaXR5Iiwic3RhdHVzIjoiUHVibGlzaGVkIiwieWVhciI6MjAxOSwib3JkZXIiOjExLCJ0ZXh0IjoiVGhpcyBkb2N1bWVudCBzcGVjaWZpZXMgdGhlIGNoYXJhY3RlcmlzdGljcyBvZiBoZXhhZ29uIHNvY2tldCBjb3VudGVyc3VuayBoZWFkIHNjcmV3cyB3aXRoIHJlZHVjZWQgbG9hZGFiaWxpdHkgZHVlIHRvIGhlYWQgZGVzaWduLCBpbiBzdGVlbCBhbmQgc3RhaW5sZXNzIHN0ZWVsLCB3aXRoIG1ldHJpYyBjb2Fyc2UgcGl0Y2ggdGhyZWFkcyBNMiB0byBNMjAsIGFuZCB3aXRoIHByb2R1Y3QgZ3JhZGUgQS4gTk9URSAxICAgIE90aGVyIGRpbWVuc2lvbmFsIG9wdGlvbnMgYXJlIGdpdmVuIGluIElTTyA4ODgsIElTTyA5NjUtMSBhbmQgSVNPIDQ3NTMuIE5PVEUgMiAgICBUaGUgcmVkdWNlZCBsb2FkYWJpbGl0eSAocmVsYXRlZCB0byB0aGUgY291bnRlcnN1bmsgaGVhZCBkaW1lbnNpb25zIGluIGNvbWJpbmF0aW9uIHdpdGggcGVuZXRyYXRpb24gb2YgdGhlIGhleGFnb24gc29ja2V0IHNwZWNpZmllZCBpbiB0aGlzIGRvY3VtZW50KSBpbXBsaWVzIGEgbGltaXRhdGlvbiBvZiB1bHRpbWF0ZSB0ZW5zaWxlIGxvYWQ7IHNlZSBUYWJsZSA1LiBOT1RFIDMgICAgUGFydGljdWxhciBhdHRlbnRpb24gaXMgbmVlZGVkIHRvIGVuc3VyZSBhbGlnbm1lbnQgb2YgdGhlIGNvdW50ZXJzdW5rIGhlYWQgd2l0aCB0aGUgYmVhcmluZyBzdXJmYWNlIG9mIHRoZSBjb3VudGVyc2luayBpbiB0aGUgYXNzZW1ibHkuICIsIm9iamVjdElEIjoiNzI1NzhfMCIsIl9oaWdobGlnaHRSZXN1bHQiOnsidGl0bGUiOnsidmFsdWUiOiI8ZW0+SVNPPC9lbT4gPGVtPjEwNjQyPC9lbT46MjAxOSBGYXN0ZW5lcnMg4oCUIEhleGFnb24gc29ja2V0IGNvdW50ZXJzdW5rIGhlYWQgc2NyZXdzIHdpdGggcmVkdWNlZCBsb2FkYWJpbGl0eSIsIm1hdGNoTGV2ZWwiOiJmdWxsIiwiZnVsbHlIaWdobGlnaHRlZCI6ZmFsc2UsIm1hdGNoZWRXb3JkcyI6WyJpc28iLCIxMDY0MiJdfSwidGV4dCI6eyJ2YWx1ZSI6IlRoaXMgZG9jdW1lbnQgc3BlY2lmaWVzIHRoZSBjaGFyYWN0ZXJpc3RpY3Mgb2YgaGV4YWdvbiBzb2NrZXQgY291bnRlcnN1bmsgaGVhZCBzY3Jld3Mgd2l0aCByZWR1Y2VkIGxvYWRhYmlsaXR5IGR1ZSB0byBoZWFkIGRlc2lnbiwgaW4gc3RlZWwgYW5kIHN0YWlubGVzcyBzdGVlbCwgd2l0aCBtZXRyaWMgY29hcnNlIHBpdGNoIHRocmVhZHMgTTIgdG8gTTIwLCBhbmQgd2l0aCBwcm9kdWN0IGdyYWRlIEEuIE5PVEUgMSAgICBPdGhlciBkaW1lbnNpb25hbCBvcHRpb25zIGFyZSBnaXZlbiBpbiA8ZW0+SVNPPC9lbT4gODg4LCA8ZW0+SVNPPC9lbT4gOTY1LTEgYW5kIDxlbT5JU088L2VtPiA0NzUzLiBOT1RFIDIgICAgVGhlIHJlZHVjZWQgbG9hZGFiaWxpdHkgKHJlbGF0ZWQgdG8gdGhlIGNvdW50ZXJzdW5rIGhlYWQgZGltZW5zaW9ucyBpbiBjb21iaW5hdGlvbiB3aXRoIHBlbmV0cmF0aW9uIG9mIHRoZSBoZXhhZ29uIHNvY2tldCBzcGVjaWZpZWQgaW4gdGhpcyBkb2N1bWVudCkgaW1wbGllcyBhIGxpbWl0YXRpb24gb2YgdWx0aW1hdGUgdGVuc2lsZSBsb2FkOyBzZWUgVGFibGUgNS4gTk9URSAzICAgIFBhcnRpY3VsYXIgYXR0ZW50aW9uIGlzIG5lZWRlZCB0byBlbnN1cmUgYWxpZ25tZW50IG9mIHRoZSBjb3VudGVyc3VuayBoZWFkIHdpdGggdGhlIGJlYXJpbmcgc3VyZmFjZSBvZiB0aGUgY291bnRlcnNpbmsgaW4gdGhlIGFzc2VtYmx5LiAiLCJtYXRjaExldmVsIjoicGFydGlhbCIsImZ1bGx5SGlnaGxpZ2h0ZWQiOmZhbHNlLCJtYXRjaGVkV29yZHMiOlsiaXNvIl19fX0seyJjYXRlZ29yeSI6InN0YW5kYXJkIiwicGF0aCI6Ii9zaXRlcy9pc29vcmcvY29udGVudHMvZGF0YS9zdGFuZGFyZC8wNi8xMy82MTMyNSIsInV1aWQiOiI5MzRjOWUxZS1jZGY4LTRmOTMtYWI2MS0yNDMzNjdmM2IzMjIiLCJ0aXRsZSI6IklTTyAxMDY0MjoyMDA0L0FtZCAxOjIwMTIgSGV4YWdvbiBzb2NrZXQgY291bnRlcnN1bmsgaGVhZCBzY3Jld3Mg4oCUIEFtZW5kbWVudCAxIiwic3RhdHVzIjoiV2l0aGRyYXduIiwieWVhciI6MjAxOSwib3JkZXIiOjEwMCwib2JqZWN0SUQiOiI2MTMyNV8wIiwiX2hpZ2hsaWdodFJlc3VsdCI6eyJ0aXRsZSI6eyJ2YWx1ZSI6IjxlbT5JU088L2VtPiA8ZW0+MTA2NDI8L2VtPjoyMDA0L0FtZCAxOjIwMTIgSGV4YWdvbiBzb2NrZXQgY291bnRlcnN1bmsgaGVhZCBzY3Jld3Mg4oCUIEFtZW5kbWVudCAxIiwibWF0Y2hMZXZlbCI6ImZ1bGwiLCJmdWxseUhpZ2hsaWdodGVkIjpmYWxzZSwibWF0Y2hlZFdvcmRzIjpbImlzbyIsIjEwNjQyIl19fX0seyJjYXRlZ29yeSI6InN0YW5kYXJkIiwicGF0aCI6Ii9zaXRlcy9pc29vcmcvY29udGVudHMvZGF0YS9zdGFuZGFyZC8wMy80NC8zNDQ1NCIsInV1aWQiOiJjOTFlMjRkNC05MDBjLTRlNjItYTc2OS0wODQyNDZlNGMwMzgiLCJ0aXRsZSI6IklTTyAxMDY0MjoyMDA0IEhleGFnb24gc29ja2V0IGNvdW50ZXJzdW5rIGhlYWQgc2NyZXdzIiwic3RhdHVzIjoiV2l0aGRyYXduIiwieWVhciI6MjAxOSwib3JkZXIiOjEwMCwidGV4dCI6IklTTyAxMDY0MjoyMDA0IHNwZWNpZmllcyB0aGUgY2hhcmFjdGVyaXN0aWNzIG9mIGhleGFnb24gc29ja2V0IGNvdW50ZXJzdW5rIGhlYWQgc2NyZXdzIHdpdGggdGhyZWFkcyBmcm9tIE0zIHVwIHRvIGFuZCBpbmNsdWRpbmcgTTIwLCB3aXRoIHByb2R1Y3QgZ3JhZGUgQSBhbmQgcHJvcGVydHkgY2xhc3NlcyA4LjgsIDEwLjkgYW5kIDEyLjkuICIsIm9iamVjdElEIjoiMzQ0NTRfMCIsIl9oaWdobGlnaHRSZXN1bHQiOnsidGl0bGUiOnsidmFsdWUiOiI8ZW0+SVNPPC9lbT4gPGVtPjEwNjQyPC9lbT46MjAwNCBIZXhhZ29uIHNvY2tldCBjb3VudGVyc3VuayBoZWFkIHNjcmV3cyIsIm1hdGNoTGV2ZWwiOiJmdWxsIiwiZnVsbHlIaWdobGlnaHRlZCI6ZmFsc2UsIm1hdGNoZWRXb3JkcyI6WyJpc28iLCIxMDY0MiJdfSwidGV4dCI6eyJ2YWx1ZSI6IjxlbT5JU088L2VtPiA8ZW0+MTA2NDI8L2VtPjoyMDA0IHNwZWNpZmllcyB0aGUgY2hhcmFjdGVyaXN0aWNzIG9mIGhleGFnb24gc29ja2V0IGNvdW50ZXJzdW5rIGhlYWQgc2NyZXdzIHdpdGggdGhyZWFkcyBmcm9tIE0zIHVwIHRvIGFuZCBpbmNsdWRpbmcgTTIwLCB3aXRoIHByb2R1Y3QgZ3JhZGUgQSBhbmQgcHJvcGVydHkgY2xhc3NlcyA4LjgsIDEwLjkgYW5kIDEyLjkuICIsIm1hdGNoTGV2ZWwiOiJmdWxsIiwiZnVsbHlIaWdobGlnaHRlZCI6ZmFsc2UsIm1hdGNoZWRXb3JkcyI6WyJpc28iLCIxMDY0MiJdfX19LHsiY2F0ZWdvcnkiOiJzdGFuZGFyZCIsInBhdGgiOiIvc2l0ZXMvaXNvb3JnL2NvbnRlbnRzL2RhdGEvc3RhbmRhcmQvMDEvODcvMTg3MzciLCJ1dWlkIjoiN2JkZjczMjktZGM3OC00ZjM4LTk3YzgtODg5NjZlOTlhZGQ4IiwidGl0bGUiOiJJU08gMTA2NDI6MTk5NyBIZXhhZ29uIHNvY2tldCBjb3VudGVyc3VuayBoZWFkIHNjcmV3cyIsInN0YXR1cyI6IldpdGhkcmF3biIsInllYXIiOjIwMDQsIm9yZGVyIjoxMDAsIm9iamVjdElEIjoiMTg3MzdfMCIsIl9oaWdobGlnaHRSZXN1bHQiOnsidGl0bGUiOnsidmFsdWUiOiI8ZW0+SVNPPC9lbT4gPGVtPjEwNjQyPC9lbT46MTk5NyBIZXhhZ29uIHNvY2tldCBjb3VudGVyc3VuayBoZWFkIHNjcmV3cyIsIm1hdGNoTGV2ZWwiOiJmdWxsIiwiZnVsbHlIaWdobGlnaHRlZCI6ZmFsc2UsIm1hdGNoZWRXb3JkcyI6WyJpc28iLCIxMDY0MiJdfX19XSwibmJIaXRzIjo0LCJwYWdlIjowLCJuYlBhZ2VzIjoxLCJoaXRzUGVyUGFnZSI6MTAwLCJleGhhdXN0aXZlTmJIaXRzIjp0cnVlLCJleGhhdXN0aXZlVHlwbyI6dHJ1ZSwiZXhoYXVzdGl2ZSI6eyJuYkhpdHMiOnRydWUsInR5cG8iOnRydWV9LCJxdWVyeSI6IklTTyAxMDY0MiIsInBhcmFtcyI6InF1ZXJ5PUlTTysxMDY0MiZoaXRzUGVyUGFnZT0xMDAmZmlsdGVycz1jYXRlZ29yeSUzQXN0YW5kYXJkIiwicXVlcnlJRCI6ImYwYTU3M2JhMmVhMzcyNDE1YTFhYmRlOTU1ODZjZTYzIiwiX2F1dG9tYXRpY0luc2lnaHRzIjp0cnVlLCJyZW5kZXJpbmdDb250ZW50Ijp7fSwicHJvY2Vzc2luZ1RpbWVNUyI6MSwicHJvY2Vzc2luZ1RpbWluZ3NNUyI6eyJfcmVxdWVzdCI6eyJyb3VuZFRyaXAiOjMwN319fQ==
  recorded_at: Thu, 28 Dec 2023 16:48:08 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/relaton/relaton-data-itu-r/master/data/ITU-R_P_838-3.yaml
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - raw.githubusercontent.com
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - keep-alive
      Content-Length:
      - '617'
      Cache-Control:
      - max-age=300
      Content-Security-Policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      Content-Type:
      - text/plain; charset=utf-8
      Etag:
      - W/"921bba143085fc707a9c25e7441d27560091d1310eebe0e76baa36af237a40f1"
      Strict-Transport-Security:
      - max-age=31536000
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      X-Xss-Protection:
      - 1; mode=block
      X-Github-Request-Id:
      - 5E08:308DCC:CBD94:F7F4A:658D8570
      Accept-Ranges:
      - bytes
      Date:
      - Thu, 28 Dec 2023 16:48:08 GMT
      Via:
      - 1.1 varnish
      X-Served-By:
      - cache-mel11256-MEL
      X-Cache:
      - HIT
      X-Cache-Hits:
      - '1'
      X-Timer:
      - S1703782088.327880,VS0,VE274
      Vary:
      - Authorization,Accept-Encoding,Origin
      Access-Control-Allow-Origin:
      - "*"
      Cross-Origin-Resource-Policy:
      - cross-origin
      X-Fastly-Request-Id:
      - fcc4a7ac03a16a6af74cb0f2aa5f3acfc6fed85f
      Expires:
      - Thu, 28 Dec 2023 16:53:08 GMT
      Source-Age:
      - '0'
    body:
      encoding: ASCII-8BIT
      string: |
        ---
        schema-version: v1.2.7
        id: ITU-RP.838-3
        title:
        - content: Specific attenuation model for rain for use in prediction methods
          language:
          - en
          script:
          - Latn
          format: text/plain
          type: main
        link:
        - content: https://extranet.itu.int/brdocsearch/_layouts/15/DocSetHome.aspx?id=/brdocsearch/R-REC/R-REC-P/R-REC-P.838/R-REC-P.838-3-200503-I
          type: src
        type: standard
        docid:
        - id: ITU-R P.838-3
          type: ITU
          primary: true
        date:
        - type: confirmed
          value: '2005-03-08'
        - type: published
          value: '2005'
        revdate: '2005'
        language:
        - en
        script:
        - Latn
        doctype:
          type: recommendation
        ext:
          schema-version: v1.0.0
  recorded_at: Thu, 28 Dec 2023 16:48:08 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/relaton/relaton-data-itu-r/master/data/ITU-R_P_839-4.yaml
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - raw.githubusercontent.com
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - keep-alive
      Content-Length:
      - '592'
      Cache-Control:
      - max-age=300
      Content-Security-Policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      Content-Type:
      - text/plain; charset=utf-8
      Etag:
      - W/"293097b2333112d40e4ac8b56c9b0720631a0bc0e66dcdf3a90197ad7240dfdd"
      Strict-Transport-Security:
      - max-age=31536000
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      X-Xss-Protection:
      - 1; mode=block
      X-Github-Request-Id:
      - 8A5E:308DCC:DDE4A:110DD4:658DA6C7
      Accept-Ranges:
      - bytes
      Date:
      - Thu, 28 Dec 2023 16:48:08 GMT
      Via:
      - 1.1 varnish
      X-Served-By:
      - cache-mel11234-MEL
      X-Cache:
      - MISS
      X-Cache-Hits:
      - '0'
      X-Timer:
      - S1703782088.327716,VS0,VE298
      Vary:
      - Authorization,Accept-Encoding,Origin
      Access-Control-Allow-Origin:
      - "*"
      Cross-Origin-Resource-Policy:
      - cross-origin
      X-Fastly-Request-Id:
      - cce86bebdb635190159d7779e46b4c59ce1c9a55
      Expires:
      - Thu, 28 Dec 2023 16:53:08 GMT
      Source-Age:
      - '0'
    body:
      encoding: ASCII-8BIT
      string: |
        ---
        schema-version: v1.2.7
        id: ITU-RP.839-4
        title:
        - content: Rain height model for prediction methods
          language:
          - en
          script:
          - Latn
          format: text/plain
          type: main
        link:
        - content: https://extranet.itu.int/brdocsearch/_layouts/15/DocSetHome.aspx?id=/brdocsearch/R-REC/R-REC-P/R-REC-P.839/R-REC-P.839-4-201309-I
          type: src
        type: standard
        docid:
        - id: ITU-R P.839-4
          type: ITU
          primary: true
        date:
        - type: confirmed
          value: '2013-09-30'
        - type: published
          value: '2013'
        revdate: '2013'
        language:
        - en
        script:
        - Latn
        doctype:
          type: recommendation
        ext:
          schema-version: v1.0.0
  recorded_at: Thu, 28 Dec 2023 16:48:08 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/relaton/relaton-data-etsi/main/data/ETSI_GS_ZSM_012_V1_1_1_2022-12.yaml
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - raw.githubusercontent.com
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - keep-alive
      Content-Length:
      - '2289'
      Cache-Control:
      - max-age=300
      Content-Security-Policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      Content-Type:
      - text/plain; charset=utf-8
      Etag:
      - W/"06907994d85677807df3f924e659901c35ffff5d7d5528f56521d6367307433c"
      Strict-Transport-Security:
      - max-age=31536000
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      X-Xss-Protection:
      - 1; mode=block
      X-Github-Request-Id:
      - 7EEC:341049:BF86C:EA0D1:658D7DB6
      Accept-Ranges:
      - bytes
      Date:
      - Thu, 28 Dec 2023 16:48:08 GMT
      Via:
      - 1.1 varnish
      X-Served-By:
      - cache-mel11243-MEL
      X-Cache:
      - HIT
      X-Cache-Hits:
      - '1'
      X-Timer:
      - S1703782088.374235,VS0,VE285
      Vary:
      - Authorization,Accept-Encoding,Origin
      Access-Control-Allow-Origin:
      - "*"
      Cross-Origin-Resource-Policy:
      - cross-origin
      X-Fastly-Request-Id:
      - 28ae1f02982873400852d8d08e879739fb6f5acb
      Expires:
      - Thu, 28 Dec 2023 16:53:08 GMT
      Source-Age:
      - '0'
    body:
      encoding: ASCII-8BIT
      string: |
        ---
        schema-version: v1.2.7
        id: ETSIGSZSM012V1.1.12022-12
        title:
        - content: Zero-touch network and Service Management (ZSM); Enablers for Artificial
            Intelligence-based Network and Service Automation
          language:
          - en
          script:
          - Latn
          format: text/plain
        link:
        - content: http://webapp.etsi.org/workprogram/Report_WorkItem.asp?WKI_ID=62010
          type: src
        - content: http://www.etsi.org/deliver/etsi_gs/ZSM/001_099/012/01.01.01_60/gs_ZSM012v010101p.pdf
          type: pdf
        docid:
        - id: ETSI GS ZSM 012 V1.1.1 (2022-12)
          type: ETSI
          primary: true
        docnumber: ETSI GS ZSM 012 V1.1.1 (2022-12)
        date:
        - type: published
          value: 2022-12
        version:
        - draft: 1.1.1
        revdate: 2022-12
        language:
        - en
        script:
        - Latn
        abstract:
        - content: "The work item will specify extensions and new capabilities (so-called
            \"AI enablers\") for the ZSM framework reference architecture providing support
            for the automation of management functionalities and operations based on Artificial
            Intelligence (AI), applicable end-to-end and per management domain. The set of
            AI-enabling capabilities will be specified as management services, complementing
            the existing management services defined in ETSI GS ZSM 002 V1.1.1. The focus
            will be on AI-related areas such as data (including data handling and analytics),
            action, interoperation, governance and execution environment. Furthermore, the
            use and integration in the ZSM framework of externally provided AI-based capabilities
            will be taken into account. \r\nThe work item will consider AI-related scenarios
            defined in ETSI GS ZSM 001 V1.1.1, as well as new scenarios, in order to derive
            AI-specific requirements. The work item will also document deployment aspects
            of the above scenarios to validate the applicability of the AI enablers. Related
            work from standard development organizations, open source projects and other sources
            will be considered and re-used, where applicable, in the development of the specifications."
          language:
          - en
          script:
          - Latn
          format: text/plain
        keyword:
        - content: artificial intelligence
        - content: automation
        - content: NETWORK
        doctype:
          type: Group Specification
          abbreviation: GS
        editorialgroup:
        - name: Zero-touch network and Service Management
        ext:
          schema-version: v0.0.3
  recorded_at: Thu, 28 Dec 2023 16:48:08 GMT
- request:
    method: post
    uri: https://jcl49wv5ar-dsn.algolia.net/1/indexes/all_en/query
    body:
      encoding: UTF-8
      string: '{"query":"ISO/IEC 27001","hitsPerPage":100,"filters":"category:standard"}'
    headers:
      User-Agent:
      - Algolia for Ruby (2.3.4), Ruby (3.2.2)
      X-Algolia-Api-Key:
      - dd1b9e1ab383f4d4817d29cd5e96d3f0
      X-Algolia-Application-Id:
      - JCL49WV5AR
      Content-Type:
      - application/json; charset=utf-8
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      Connection:
      - keep-alive
      Keep-Alive:
      - '30'
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Thu, 28 Dec 2023 16:48:08 GMT
      Content-Type:
      - application/json; charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      X-Alg-Pt:
      - '3'
      Accept-Encoding:
      - deflate, gzip
      Cache-Control:
      - no-store
      Access-Control-Allow-Origin:
      - "*"
      Timing-Allow-Origin:
      - "*"
      X-Content-Type-Options:
      - nosniff
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Content-Disposition:
      - inline; filename=a.txt
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJoaXRzIjpbeyJjYXRlZ29yeSI6InN0YW5kYXJkIiwicGF0aCI6Ii9zaXRlcy9pc29vcmcvY29udGVudHMvZGF0YS9zdGFuZGFyZC8wOC8yOC84Mjg3NSIsInV1aWQiOiI1NTQ3Nzg2NS1mMWUwLTRlNjQtODQyYy04MjdiMDUzMTMyNjIiLCJ0aXRsZSI6IklTTy9JRUMgMjcwMDE6MjAyMiBJbmZvcm1hdGlvbiBzZWN1cml0eSwgY3liZXJzZWN1cml0eSBhbmQgcHJpdmFjeSBwcm90ZWN0aW9uIOKAlCBJbmZvcm1hdGlvbiBzZWN1cml0eSBtYW5hZ2VtZW50IHN5c3RlbXMg4oCUIFJlcXVpcmVtZW50cyIsInN0YXR1cyI6IlB1Ymxpc2hlZCIsInllYXIiOjIwMjIsIm9yZGVyIjoxMSwidGV4dCI6IlRoaXMgZG9jdW1lbnQgc3BlY2lmaWVzIHRoZSByZXF1aXJlbWVudHMgZm9yIGVzdGFibGlzaGluZywgaW1wbGVtZW50aW5nLCBtYWludGFpbmluZyBhbmQgY29udGludWFsbHkgaW1wcm92aW5nIGFuIGluZm9ybWF0aW9uIHNlY3VyaXR5IG1hbmFnZW1lbnQgc3lzdGVtIHdpdGhpbiB0aGUgY29udGV4dCBvZiB0aGUgb3JnYW5pemF0aW9uLiBUaGlzIGRvY3VtZW50IGFsc28gaW5jbHVkZXMgcmVxdWlyZW1lbnRzIGZvciB0aGUgYXNzZXNzbWVudCBhbmQgdHJlYXRtZW50IG9mIGluZm9ybWF0aW9uIHNlY3VyaXR5IHJpc2tzIHRhaWxvcmVkIHRvIHRoZSBuZWVkcyBvZiB0aGUgb3JnYW5pemF0aW9uLiBUaGUgcmVxdWlyZW1lbnRzIHNldCBvdXQgaW4gdGhpcyBkb2N1bWVudCBhcmUgZ2VuZXJpYyBhbmQgYXJlIGludGVuZGVkIHRvIGJlIGFwcGxpY2FibGUgdG8gYWxsIG9yZ2FuaXphdGlvbnMsIHJlZ2FyZGxlc3Mgb2YgdHlwZSwgc2l6ZSBvciBuYXR1cmUuIEV4Y2x1ZGluZyBhbnkgb2YgdGhlIHJlcXVpcmVtZW50cyBzcGVjaWZpZWQgaW4gQ2xhdXNlc8KgNCB0byAxMCBpcyBub3QgYWNjZXB0YWJsZSB3aGVuIGFuIG9yZ2FuaXphdGlvbiBjbGFpbXMgY29uZm9ybWl0eSB0byB0aGlzIGRvY3VtZW50LiAiLCJvYmplY3RJRCI6IjgyODc1XzAiLCJfaGlnaGxpZ2h0UmVzdWx0Ijp7InRpdGxlIjp7InZhbHVlIjoiPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiA8ZW0+MjcwMDE8L2VtPjoyMDIyIEluZm9ybWF0aW9uIHNlY3VyaXR5LCBjeWJlcnNlY3VyaXR5IGFuZCBwcml2YWN5IHByb3RlY3Rpb24g4oCUIEluZm9ybWF0aW9uIHNlY3VyaXR5IG1hbmFnZW1lbnQgc3lzdGVtcyDigJQgUmVxdWlyZW1lbnRzIiwibWF0Y2hMZXZlbCI6ImZ1bGwiLCJmdWxseUhpZ2hsaWdodGVkIjpmYWxzZSwibWF0Y2hlZFdvcmRzIjpbImlzbyIsImllYyIsIjI3MDAxIl19LCJ0ZXh0Ijp7InZhbHVlIjoiVGhpcyBkb2N1bWVudCBzcGVjaWZpZXMgdGhlIHJlcXVpcmVtZW50cyBmb3IgZXN0YWJsaXNoaW5nLCBpbXBsZW1lbnRpbmcsIG1haW50YWluaW5nIGFuZCBjb250aW51YWxseSBpbXByb3ZpbmcgYW4gaW5mb3JtYXRpb24gc2VjdXJpdHkgbWFuYWdlbWVudCBzeXN0ZW0gd2l0aGluIHRoZSBjb250ZXh0IG9mIHRoZSBvcmdhbml6YXRpb24uIFRoaXMgZG9jdW1lbnQgYWxzbyBpbmNsdWRlcyByZXF1aXJlbWVudHMgZm9yIHRoZSBhc3Nlc3NtZW50IGFuZCB0cmVhdG1lbnQgb2YgaW5mb3JtYXRpb24gc2VjdXJpdHkgcmlza3MgdGFpbG9yZWQgdG8gdGhlIG5lZWRzIG9mIHRoZSBvcmdhbml6YXRpb24uIFRoZSByZXF1aXJlbWVudHMgc2V0IG91dCBpbiB0aGlzIGRvY3VtZW50IGFyZSBnZW5lcmljIGFuZCBhcmUgaW50ZW5kZWQgdG8gYmUgYXBwbGljYWJsZSB0byBhbGwgb3JnYW5pemF0aW9ucywgcmVnYXJkbGVzcyBvZiB0eXBlLCBzaXplIG9yIG5hdHVyZS4gRXhjbHVkaW5nIGFueSBvZiB0aGUgcmVxdWlyZW1lbnRzIHNwZWNpZmllZCBpbiBDbGF1c2VzwqA0IHRvIDEwIGlzIG5vdCBhY2NlcHRhYmxlIHdoZW4gYW4gb3JnYW5pemF0aW9uIGNsYWltcyBjb25mb3JtaXR5IHRvIHRoaXMgZG9jdW1lbnQuICIsIm1hdGNoTGV2ZWwiOiJub25lIiwibWF0Y2hlZFdvcmRzIjpbXX19fSx7ImNhdGVnb3J5Ijoic3RhbmRhcmQiLCJwYXRoIjoiL3NpdGVzL2lzb29yZy9jb250ZW50cy9kYXRhL3N0YW5kYXJkLzA4LzI4LzgyODczIiwidXVpZCI6IjI3NGRiNDExLWQzZjItNDZiYy04MzM1LWJjMDhhYjY3MmZhMyIsInRpdGxlIjoiSVNPL0lFQyAyNzAwMToyMDEzL0RBbWQgMSBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBTZWN1cml0eSB0ZWNobmlxdWVzIOKAlCBJbmZvcm1hdGlvbiBzZWN1cml0eSBtYW5hZ2VtZW50IHN5c3RlbXMg4oCUIFJlcXVpcmVtZW50cyDigJQgQW1lbmRtZW50IDEiLCJzdGF0dXMiOiJEZWxldGVkIiwieWVhciI6MjAyMiwib3JkZXIiOjEwMCwib2JqZWN0SUQiOiI4Mjg3M18wIiwiX2hpZ2hsaWdodFJlc3VsdCI6eyJ0aXRsZSI6eyJ2YWx1ZSI6IjxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gPGVtPjI3MDAxPC9lbT46MjAxMy9EQW1kIDEgSW5mb3JtYXRpb24gdGVjaG5vbG9neSDigJQgU2VjdXJpdHkgdGVjaG5pcXVlcyDigJQgSW5mb3JtYXRpb24gc2VjdXJpdHkgbWFuYWdlbWVudCBzeXN0ZW1zIOKAlCBSZXF1aXJlbWVudHMg4oCUIEFtZW5kbWVudCAxIiwibWF0Y2hMZXZlbCI6ImZ1bGwiLCJmdWxseUhpZ2hsaWdodGVkIjpmYWxzZSwibWF0Y2hlZFdvcmRzIjpbImlzbyIsImllYyIsIjI3MDAxIl19fX0seyJjYXRlZ29yeSI6InN0YW5kYXJkIiwicGF0aCI6Ii9zaXRlcy9pc29vcmcvY29udGVudHMvZGF0YS9zdGFuZGFyZC8wNi85My82OTM3OCIsInV1aWQiOiJiMmY1YzJmMS04NzNkLTRkM2QtYTM0MC05Y2Q2OGJmMzc0ZTIiLCJ0aXRsZSI6IklTTy9JRUMgMjcwMDE6MjAxMy9Db3IgMjoyMDE1IEluZm9ybWF0aW9uIHRlY2hub2xvZ3kg4oCUIFNlY3VyaXR5IHRlY2huaXF1ZXMg4oCUIEluZm9ybWF0aW9uIHNlY3VyaXR5IG1hbmFnZW1lbnQgc3lzdGVtcyDigJQgUmVxdWlyZW1lbnRzIOKAlCBUZWNobmljYWwgQ29ycmlnZW5kdW0gMiIsInN0YXR1cyI6IldpdGhkcmF3biIsInllYXIiOjIwMjIsIm9yZGVyIjoxMDAsIm9iamVjdElEIjoiNjkzNzhfMCIsIl9oaWdobGlnaHRSZXN1bHQiOnsidGl0bGUiOnsidmFsdWUiOiI8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDxlbT4yNzAwMTwvZW0+OjIwMTMvQ29yIDI6MjAxNSBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBTZWN1cml0eSB0ZWNobmlxdWVzIOKAlCBJbmZvcm1hdGlvbiBzZWN1cml0eSBtYW5hZ2VtZW50IHN5c3RlbXMg4oCUIFJlcXVpcmVtZW50cyDigJQgVGVjaG5pY2FsIENvcnJpZ2VuZHVtIDIiLCJtYXRjaExldmVsIjoiZnVsbCIsImZ1bGx5SGlnaGxpZ2h0ZWQiOmZhbHNlLCJtYXRjaGVkV29yZHMiOlsiaXNvIiwiaWVjIiwiMjcwMDEiXX19fSx7ImNhdGVnb3J5Ijoic3RhbmRhcmQiLCJwYXRoIjoiL3NpdGVzL2lzb29yZy9jb250ZW50cy9kYXRhL3N0YW5kYXJkLzA2LzY4LzY2ODA1IiwidXVpZCI6IjZiMjk1ZGZjLTJkZmUtNGUyNS04ZjMwLTdlYWU0MDc0Y2FmNiIsInRpdGxlIjoiSVNPL0lFQyAyNzAwMToyMDEzL0NvciAxOjIwMTQgSW5mb3JtYXRpb24gdGVjaG5vbG9neSDigJQgU2VjdXJpdHkgdGVjaG5pcXVlcyDigJQgSW5mb3JtYXRpb24gc2VjdXJpdHkgbWFuYWdlbWVudCBzeXN0ZW1zIOKAlCBSZXF1aXJlbWVudHMg4oCUIFRlY2huaWNhbCBDb3JyaWdlbmR1bSAxIiwic3RhdHVzIjoiV2l0aGRyYXduIiwieWVhciI6MjAyMiwib3JkZXIiOjEwMCwib2JqZWN0SUQiOiI2NjgwNV8wIiwiX2hpZ2hsaWdodFJlc3VsdCI6eyJ0aXRsZSI6eyJ2YWx1ZSI6IjxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gPGVtPjI3MDAxPC9lbT46MjAxMy9Db3IgMToyMDE0IEluZm9ybWF0aW9uIHRlY2hub2xvZ3kg4oCUIFNlY3VyaXR5IHRlY2huaXF1ZXMg4oCUIEluZm9ybWF0aW9uIHNlY3VyaXR5IG1hbmFnZW1lbnQgc3lzdGVtcyDigJQgUmVxdWlyZW1lbnRzIOKAlCBUZWNobmljYWwgQ29ycmlnZW5kdW0gMSIsIm1hdGNoTGV2ZWwiOiJmdWxsIiwiZnVsbHlIaWdobGlnaHRlZCI6ZmFsc2UsIm1hdGNoZWRXb3JkcyI6WyJpc28iLCJpZWMiLCIyNzAwMSJdfX19LHsiY2F0ZWdvcnkiOiJzdGFuZGFyZCIsInBhdGgiOiIvc2l0ZXMvaXNvb3JnL2NvbnRlbnRzL2RhdGEvc3RhbmRhcmQvMDUvNDUvNTQ1MzQiLCJ1dWlkIjoiOGYxNWVlMzgtMzNhMi00NDliLWIzYTUtZDI2MGY1YWQzZDAyIiwidGl0bGUiOiJJU08vSUVDIDI3MDAxOjIwMTMgSW5mb3JtYXRpb24gdGVjaG5vbG9neSDigJQgU2VjdXJpdHkgdGVjaG5pcXVlcyDigJQgSW5mb3JtYXRpb24gc2VjdXJpdHkgbWFuYWdlbWVudCBzeXN0ZW1zIOKAlCBSZXF1aXJlbWVudHMiLCJzdGF0dXMiOiJXaXRoZHJhd24iLCJ5ZWFyIjoyMDIyLCJvcmRlciI6MTAwLCJ0ZXh0IjoiSVNPL0lFQyAyNzAwMToyMDEzIHNwZWNpZmllcyB0aGUgcmVxdWlyZW1lbnRzIGZvciBlc3RhYmxpc2hpbmcsIGltcGxlbWVudGluZywgbWFpbnRhaW5pbmcgYW5kIGNvbnRpbnVhbGx5IGltcHJvdmluZyBhbiBpbmZvcm1hdGlvbiBzZWN1cml0eSBtYW5hZ2VtZW50IHN5c3RlbSB3aXRoaW4gdGhlIGNvbnRleHQgb2YgdGhlIG9yZ2FuaXphdGlvbi4gSXQgYWxzbyBpbmNsdWRlcyByZXF1aXJlbWVudHMgZm9yIHRoZSBhc3Nlc3NtZW50IGFuZCB0cmVhdG1lbnQgb2YgaW5mb3JtYXRpb24gc2VjdXJpdHkgcmlza3MgdGFpbG9yZWQgdG8gdGhlIG5lZWRzIG9mIHRoZSBvcmdhbml6YXRpb24uIFRoZSByZXF1aXJlbWVudHMgc2V0IG91dCBpbiBJU08vSUVDIDI3MDAxOjIwMTMgYXJlIGdlbmVyaWMgYW5kIGFyZSBpbnRlbmRlZCB0byBiZSBhcHBsaWNhYmxlIHRvIGFsbCBvcmdhbml6YXRpb25zLCByZWdhcmRsZXNzIG9mIHR5cGUsIHNpemUgb3IgbmF0dXJlLiAiLCJvYmplY3RJRCI6IjU0NTM0XzAiLCJfaGlnaGxpZ2h0UmVzdWx0Ijp7InRpdGxlIjp7InZhbHVlIjoiPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiA8ZW0+MjcwMDE8L2VtPjoyMDEzIEluZm9ybWF0aW9uIHRlY2hub2xvZ3kg4oCUIFNlY3VyaXR5IHRlY2huaXF1ZXMg4oCUIEluZm9ybWF0aW9uIHNlY3VyaXR5IG1hbmFnZW1lbnQgc3lzdGVtcyDigJQgUmVxdWlyZW1lbnRzIiwibWF0Y2hMZXZlbCI6ImZ1bGwiLCJmdWxseUhpZ2hsaWdodGVkIjpmYWxzZSwibWF0Y2hlZFdvcmRzIjpbImlzbyIsImllYyIsIjI3MDAxIl19LCJ0ZXh0Ijp7InZhbHVlIjoiPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiA8ZW0+MjcwMDE8L2VtPjoyMDEzIHNwZWNpZmllcyB0aGUgcmVxdWlyZW1lbnRzIGZvciBlc3RhYmxpc2hpbmcsIGltcGxlbWVudGluZywgbWFpbnRhaW5pbmcgYW5kIGNvbnRpbnVhbGx5IGltcHJvdmluZyBhbiBpbmZvcm1hdGlvbiBzZWN1cml0eSBtYW5hZ2VtZW50IHN5c3RlbSB3aXRoaW4gdGhlIGNvbnRleHQgb2YgdGhlIG9yZ2FuaXphdGlvbi4gSXQgYWxzbyBpbmNsdWRlcyByZXF1aXJlbWVudHMgZm9yIHRoZSBhc3Nlc3NtZW50IGFuZCB0cmVhdG1lbnQgb2YgaW5mb3JtYXRpb24gc2VjdXJpdHkgcmlza3MgdGFpbG9yZWQgdG8gdGhlIG5lZWRzIG9mIHRoZSBvcmdhbml6YXRpb24uIFRoZSByZXF1aXJlbWVudHMgc2V0IG91dCBpbiA8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDxlbT4yNzAwMTwvZW0+OjIwMTMgYXJlIGdlbmVyaWMgYW5kIGFyZSBpbnRlbmRlZCB0byBiZSBhcHBsaWNhYmxlIHRvIGFsbCBvcmdhbml6YXRpb25zLCByZWdhcmRsZXNzIG9mIHR5cGUsIHNpemUgb3IgbmF0dXJlLiAiLCJtYXRjaExldmVsIjoiZnVsbCIsImZ1bGx5SGlnaGxpZ2h0ZWQiOmZhbHNlLCJtYXRjaGVkV29yZHMiOlsiaXNvIiwiaWVjIiwiMjcwMDEiXX19fSx7ImNhdGVnb3J5Ijoic3RhbmRhcmQiLCJwYXRoIjoiL3NpdGVzL2lzb29yZy9jb250ZW50cy9kYXRhL3N0YW5kYXJkLzA0LzIxLzQyMTAzIiwidXVpZCI6IjFlMDA2Yzg5LTQ1MzctNDE1My04Y2VjLTM5Nzk0N2YxMmMxMyIsInRpdGxlIjoiSVNPL0lFQyAyNzAwMToyMDA1IEluZm9ybWF0aW9uIHRlY2hub2xvZ3kg4oCUIFNlY3VyaXR5IHRlY2huaXF1ZXMg4oCUIEluZm9ybWF0aW9uIHNlY3VyaXR5IG1hbmFnZW1lbnQgc3lzdGVtcyDigJQgUmVxdWlyZW1lbnRzIiwic3RhdHVzIjoiV2l0aGRyYXduIiwieWVhciI6MjAxMywib3JkZXIiOjEwMCwidGV4dCI6IklTTy9JRUMgMjcwMDE6MjAwNSBjb3ZlcnMgYWxsIHR5cGVzIG9mIG9yZ2FuaXphdGlvbnMgKGUuZy4gY29tbWVyY2lhbCBlbnRlcnByaXNlcywgZ292ZXJubWVudCBhZ2VuY2llcywgbm90LWZvciBwcm9maXQgb3JnYW5pemF0aW9ucykuIElTTy9JRUMgMjcwMDE6MjAwNSBzcGVjaWZpZXMgdGhlIHJlcXVpcmVtZW50cyBmb3IgZXN0YWJsaXNoaW5nLCBpbXBsZW1lbnRpbmcsIG9wZXJhdGluZywgbW9uaXRvcmluZywgcmV2aWV3aW5nLCBtYWludGFpbmluZyBhbmQgaW1wcm92aW5nIGEgZG9jdW1lbnRlZCBJbmZvcm1hdGlvbiBTZWN1cml0eSBNYW5hZ2VtZW50IFN5c3RlbSB3aXRoaW4gdGhlIGNvbnRleHQgb2YgdGhlIG9yZ2FuaXphdGlvbidzIG92ZXJhbGwgYnVzaW5lc3Mgcmlza3MuIEl0IHNwZWNpZmllcyByZXF1aXJlbWVudHMgZm9yIHRoZSBpbXBsZW1lbnRhdGlvbiBvZiBzZWN1cml0eSBjb250cm9scyBjdXN0b21pemVkIHRvIHRoZSBuZWVkcyBvZiBpbmRpdmlkdWFsIG9yZ2FuaXphdGlvbnMgb3IgcGFydHMgdGhlcmVvZi4gSVNPL0lFQyAyNzAwMToyMDA1IGlzIGRlc2lnbmVkIHRvIGVuc3VyZSB0aGUgc2VsZWN0aW9uIG9mIGFkZXF1YXRlIGFuZCBwcm9wb3J0aW9uYXRlIHNlY3VyaXR5IGNvbnRyb2xzIHRoYXQgcHJvdGVjdCBpbmZvcm1hdGlvbiBhc3NldHMgYW5kIGdpdmUgY29uZmlkZW5jZSB0byBpbnRlcmVzdGVkIHBhcnRpZXMuIElTTy9JRUMgMjcwMDE6MjAwNSBpcyBpbnRlbmRlZCB0byBiZSBzdWl0YWJsZSBmb3Igc2V2ZXJhbCBkaWZmZXJlbnQgdHlwZXMgb2YgdXNlLCBpbmNsdWRpbmcgdGhlIGZvbGxvd2luZzogdXNlIHdpdGhpbiBvcmdhbml6YXRpb25zIHRvIGZvcm11bGF0ZSBzZWN1cml0eSByZXF1aXJlbWVudHMgYW5kIG9iamVjdGl2ZXM7IHVzZSB3aXRoaW4gb3JnYW5pemF0aW9ucyBhcyBhIHdheSB0byBlbnN1cmUgdGhhdCBzZWN1cml0eSByaXNrcyBhcmUgY29zdCBlZmZlY3RpdmVseSBtYW5hZ2VkOyB1c2Ugd2l0aGluIG9yZ2FuaXphdGlvbnMgdG8gZW5zdXJlIGNvbXBsaWFuY2Ugd2l0aCBsYXdzIGFuZCByZWd1bGF0aW9uczsgdXNlIHdpdGhpbiBhbiBvcmdhbml6YXRpb24gYXMgYSBwcm9jZXNzIGZyYW1ld29yayBmb3IgdGhlIGltcGxlbWVudGF0aW9uIGFuZCBtYW5hZ2VtZW50IG9mIGNvbnRyb2xzIHRvIGVuc3VyZSB0aGF0IHRoZSBzcGVjaWZpYyBzZWN1cml0eSBvYmplY3RpdmVzIG9mIGFuIG9yZ2FuaXphdGlvbiBhcmUgbWV0OyBkZWZpbml0aW9uIG9mIG5ldyBpbmZvcm1hdGlvbiBzZWN1cml0eSBtYW5hZ2VtZW50IHByb2Nlc3NlczsgaWRlbnRpZmljYXRpb24gYW5kIGNsYXJpZmljYXRpb24gb2YgZXhpc3RpbmcgaW5mb3JtYXRpb24gc2VjdXJpdHkgbWFuYWdlbWVudCBwcm9jZXNzZXM7IHVzZSBieSB0aGUgbWFuYWdlbWVudCBvZiBvcmdhbml6YXRpb25zIHRvIGRldGVybWluZSB0aGUgc3RhdHVzIG9mIGluZm9ybWF0aW9uIHNlY3VyaXR5IG1hbmFnZW1lbnQgYWN0aXZpdGllczsgdXNlIGJ5IHRoZSBpbnRlcm5hbCBhbmQgZXh0ZXJuYWwgYXVkaXRvcnMgb2Ygb3JnYW5pemF0aW9ucyB0byBkZXRlcm1pbmUgdGhlIGRlZ3JlZSBvZiBjb21wbGlhbmNlIHdpdGggdGhlIHBvbGljaWVzLCBkaXJlY3RpdmVzIGFuZCBzdGFuZGFyZHMgYWRvcHRlZCBieSBhbiBvcmdhbml6YXRpb247IHVzZSBieSBvcmdhbml6YXRpb25zIHRvIHByb3ZpZGUgcmVsZXZhbnQgaW5mb3JtYXRpb24gYWJvdXQgaW5mb3JtYXRpb24gc2VjdXJpdHkgcG9saWNpZXMsIGRpcmVjdGl2ZXMsIHN0YW5kYXJkcyBhbmQgcHJvY2VkdXJlcyB0byB0cmFkaW5nIHBhcnRuZXJzIGFuZCBvdGhlciBvcmdhbml6YXRpb25zIHdpdGggd2hvbSB0aGV5IGludGVyYWN0IGZvciBvcGVyYXRpb25hbCBvciBjb21tZXJjaWFsIHJlYXNvbnM7IGltcGxlbWVudGF0aW9uIG9mIGJ1c2luZXNzLWVuYWJsaW5nIGluZm9ybWF0aW9uIHNlY3VyaXR5OyB1c2UgYnkgb3JnYW5pemF0aW9ucyB0byBwcm92aWRlIHJlbGV2YW50IGluZm9ybWF0aW9uIGFib3V0IGluZm9ybWF0aW9uIHNlY3VyaXR5IHRvIGN1c3RvbWVycy4gIiwib2JqZWN0SUQiOiI0MjEwM18wIiwiX2hpZ2hsaWdodFJlc3VsdCI6eyJ0aXRsZSI6eyJ2YWx1ZSI6IjxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gPGVtPjI3MDAxPC9lbT46MjAwNSBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBTZWN1cml0eSB0ZWNobmlxdWVzIOKAlCBJbmZvcm1hdGlvbiBzZWN1cml0eSBtYW5hZ2VtZW50IHN5c3RlbXMg4oCUIFJlcXVpcmVtZW50cyIsIm1hdGNoTGV2ZWwiOiJmdWxsIiwiZnVsbHlIaWdobGlnaHRlZCI6ZmFsc2UsIm1hdGNoZWRXb3JkcyI6WyJpc28iLCJpZWMiLCIyNzAwMSJdfSwidGV4dCI6eyJ2YWx1ZSI6IjxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gPGVtPjI3MDAxPC9lbT46MjAwNSBjb3ZlcnMgYWxsIHR5cGVzIG9mIG9yZ2FuaXphdGlvbnMgKGUuZy4gY29tbWVyY2lhbCBlbnRlcnByaXNlcywgZ292ZXJubWVudCBhZ2VuY2llcywgbm90LWZvciBwcm9maXQgb3JnYW5pemF0aW9ucykuIDxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gPGVtPjI3MDAxPC9lbT46MjAwNSBzcGVjaWZpZXMgdGhlIHJlcXVpcmVtZW50cyBmb3IgZXN0YWJsaXNoaW5nLCBpbXBsZW1lbnRpbmcsIG9wZXJhdGluZywgbW9uaXRvcmluZywgcmV2aWV3aW5nLCBtYWludGFpbmluZyBhbmQgaW1wcm92aW5nIGEgZG9jdW1lbnRlZCBJbmZvcm1hdGlvbiBTZWN1cml0eSBNYW5hZ2VtZW50IFN5c3RlbSB3aXRoaW4gdGhlIGNvbnRleHQgb2YgdGhlIG9yZ2FuaXphdGlvbidzIG92ZXJhbGwgYnVzaW5lc3Mgcmlza3MuIEl0IHNwZWNpZmllcyByZXF1aXJlbWVudHMgZm9yIHRoZSBpbXBsZW1lbnRhdGlvbiBvZiBzZWN1cml0eSBjb250cm9scyBjdXN0b21pemVkIHRvIHRoZSBuZWVkcyBvZiBpbmRpdmlkdWFsIG9yZ2FuaXphdGlvbnMgb3IgcGFydHMgdGhlcmVvZi4gPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiA8ZW0+MjcwMDE8L2VtPjoyMDA1IGlzIGRlc2lnbmVkIHRvIGVuc3VyZSB0aGUgc2VsZWN0aW9uIG9mIGFkZXF1YXRlIGFuZCBwcm9wb3J0aW9uYXRlIHNlY3VyaXR5IGNvbnRyb2xzIHRoYXQgcHJvdGVjdCBpbmZvcm1hdGlvbiBhc3NldHMgYW5kIGdpdmUgY29uZmlkZW5jZSB0byBpbnRlcmVzdGVkIHBhcnRpZXMuIDxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gPGVtPjI3MDAxPC9lbT46MjAwNSBpcyBpbnRlbmRlZCB0byBiZSBzdWl0YWJsZSBmb3Igc2V2ZXJhbCBkaWZmZXJlbnQgdHlwZXMgb2YgdXNlLCBpbmNsdWRpbmcgdGhlIGZvbGxvd2luZzogdXNlIHdpdGhpbiBvcmdhbml6YXRpb25zIHRvIGZvcm11bGF0ZSBzZWN1cml0eSByZXF1aXJlbWVudHMgYW5kIG9iamVjdGl2ZXM7IHVzZSB3aXRoaW4gb3JnYW5pemF0aW9ucyBhcyBhIHdheSB0byBlbnN1cmUgdGhhdCBzZWN1cml0eSByaXNrcyBhcmUgY29zdCBlZmZlY3RpdmVseSBtYW5hZ2VkOyB1c2Ugd2l0aGluIG9yZ2FuaXphdGlvbnMgdG8gZW5zdXJlIGNvbXBsaWFuY2Ugd2l0aCBsYXdzIGFuZCByZWd1bGF0aW9uczsgdXNlIHdpdGhpbiBhbiBvcmdhbml6YXRpb24gYXMgYSBwcm9jZXNzIGZyYW1ld29yayBmb3IgdGhlIGltcGxlbWVudGF0aW9uIGFuZCBtYW5hZ2VtZW50IG9mIGNvbnRyb2xzIHRvIGVuc3VyZSB0aGF0IHRoZSBzcGVjaWZpYyBzZWN1cml0eSBvYmplY3RpdmVzIG9mIGFuIG9yZ2FuaXphdGlvbiBhcmUgbWV0OyBkZWZpbml0aW9uIG9mIG5ldyBpbmZvcm1hdGlvbiBzZWN1cml0eSBtYW5hZ2VtZW50IHByb2Nlc3NlczsgaWRlbnRpZmljYXRpb24gYW5kIGNsYXJpZmljYXRpb24gb2YgZXhpc3RpbmcgaW5mb3JtYXRpb24gc2VjdXJpdHkgbWFuYWdlbWVudCBwcm9jZXNzZXM7IHVzZSBieSB0aGUgbWFuYWdlbWVudCBvZiBvcmdhbml6YXRpb25zIHRvIGRldGVybWluZSB0aGUgc3RhdHVzIG9mIGluZm9ybWF0aW9uIHNlY3VyaXR5IG1hbmFnZW1lbnQgYWN0aXZpdGllczsgdXNlIGJ5IHRoZSBpbnRlcm5hbCBhbmQgZXh0ZXJuYWwgYXVkaXRvcnMgb2Ygb3JnYW5pemF0aW9ucyB0byBkZXRlcm1pbmUgdGhlIGRlZ3JlZSBvZiBjb21wbGlhbmNlIHdpdGggdGhlIHBvbGljaWVzLCBkaXJlY3RpdmVzIGFuZCBzdGFuZGFyZHMgYWRvcHRlZCBieSBhbiBvcmdhbml6YXRpb247IHVzZSBieSBvcmdhbml6YXRpb25zIHRvIHByb3ZpZGUgcmVsZXZhbnQgaW5mb3JtYXRpb24gYWJvdXQgaW5mb3JtYXRpb24gc2VjdXJpdHkgcG9saWNpZXMsIGRpcmVjdGl2ZXMsIHN0YW5kYXJkcyBhbmQgcHJvY2VkdXJlcyB0byB0cmFkaW5nIHBhcnRuZXJzIGFuZCBvdGhlciBvcmdhbml6YXRpb25zIHdpdGggd2hvbSB0aGV5IGludGVyYWN0IGZvciBvcGVyYXRpb25hbCBvciBjb21tZXJjaWFsIHJlYXNvbnM7IGltcGxlbWVudGF0aW9uIG9mIGJ1c2luZXNzLWVuYWJsaW5nIGluZm9ybWF0aW9uIHNlY3VyaXR5OyB1c2UgYnkgb3JnYW5pemF0aW9ucyB0byBwcm92aWRlIHJlbGV2YW50IGluZm9ybWF0aW9uIGFib3V0IGluZm9ybWF0aW9uIHNlY3VyaXR5IHRvIGN1c3RvbWVycy4gIiwibWF0Y2hMZXZlbCI6ImZ1bGwiLCJmdWxseUhpZ2hsaWdodGVkIjpmYWxzZSwibWF0Y2hlZFdvcmRzIjpbImlzbyIsImllYyIsIjI3MDAxIl19fX0seyJjYXRlZ29yeSI6InN0YW5kYXJkIiwicGF0aCI6Ii9zaXRlcy9pc29vcmcvY29udGVudHMvZGF0YS9zdGFuZGFyZC8wNi8xMC82MTAwNiIsInV1aWQiOiIxZDVhOTM2YS03OTNiLTRmOWQtODM2OC1iNmY4YzVmYmM4MWEiLCJ0aXRsZSI6IklTTy9JRUMgQVdJIFRSIDI3MDI0IElTTy9JRUMgMjcwMDEgZmFtaWx5IG9mIHN0YW5kYXJkcyByZWZlcmVuY2VzIGxpc3Qg4oCUIFVzZSBvZiBJU08vSUVDIDI3MDAxIGZhbWlseSBvZiBzdGFuZGFyZHMgaW4gR292ZXJubWVudGFsIC8gUmVndWxhdG9yeSByZXF1aXJlbWVudHMiLCJzdGF0dXMiOiJVbmRlciBkZXZlbG9wbWVudCIsInllYXIiOjIwMjEsIm9yZGVyIjoxMiwib2JqZWN0SUQiOiI2MTAwNl8wIiwiX2hpZ2hsaWdodFJlc3VsdCI6eyJ0aXRsZSI6eyJ2YWx1ZSI6IjxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gQVdJIFRSIDI3MDI0IDxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gPGVtPjI3MDAxPC9lbT4gZmFtaWx5IG9mIHN0YW5kYXJkcyByZWZlcmVuY2VzIGxpc3Qg4oCUIFVzZSBvZiA8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDxlbT4yNzAwMTwvZW0+IGZhbWlseSBvZiBzdGFuZGFyZHMgaW4gR292ZXJubWVudGFsIC8gUmVndWxhdG9yeSByZXF1aXJlbWVudHMiLCJtYXRjaExldmVsIjoiZnVsbCIsImZ1bGx5SGlnaGxpZ2h0ZWQiOmZhbHNlLCJtYXRjaGVkV29yZHMiOlsiaXNvIiwiaWVjIiwiMjcwMDEiXX19fSx7ImNhdGVnb3J5Ijoic3RhbmRhcmQiLCJwYXRoIjoiL3NpdGVzL2lzb29yZy9jb250ZW50cy9kYXRhL3N0YW5kYXJkLzA4LzU4Lzg1ODE5IiwidXVpZCI6IjVkZjM3ZmMyLTRkMTYtNDZiNy05NTUwLTU1OWIwODQyNzFlMyIsInRpdGxlIjoiSVNPL0lFQyBESVMgMjc3MDEgU2VjdXJpdHkgdGVjaG5pcXVlcyDigJQgRXh0ZW5zaW9uIHRvIElTTy9JRUMgMjcwMDEgYW5kIElTTy9JRUMgMjcwMDIgZm9yIHByaXZhY3kgaW5mb3JtYXRpb24gbWFuYWdlbWVudCDigJQgUmVxdWlyZW1lbnRzIGFuZCBndWlkZWxpbmVzIiwic3RhdHVzIjoiVW5kZXIgZGV2ZWxvcG1lbnQiLCJ5ZWFyIjoyMDIzLCJvcmRlciI6MTIsInRleHQiOiJUaGlzIGRvY3VtZW50IHNwZWNpZmllcyByZXF1aXJlbWVudHMgYW5kIHByb3ZpZGVzIGd1aWRhbmNlIGZvciBlc3RhYmxpc2hpbmcsIGltcGxlbWVudGluZywgbWFpbnRhaW5pbmcgYW5kIGNvbnRpbnVhbGx5IGltcHJvdmluZyBhIFByaXZhY3kgSW5mb3JtYXRpb24gTWFuYWdlbWVudCBTeXN0ZW0gKFBJTVMpIGluIHRoZSBmb3JtIG9mIGFuIGV4dGVuc2lvbiB0byBJU08vSUVDIDI3MDAxIGFuZCBJU08vSUVDIDI3MDAyIGZvciBwcml2YWN5IG1hbmFnZW1lbnQgd2l0aGluIHRoZSBjb250ZXh0IG9mIHRoZSBvcmdhbml6YXRpb24uIFRoaXMgZG9jdW1lbnQgc3BlY2lmaWVzIFBJTVMtcmVsYXRlZCByZXF1aXJlbWVudHMgYW5kIHByb3ZpZGVzIGd1aWRhbmNlIGZvciBQSUkgY29udHJvbGxlcnMgYW5kIFBJSSBwcm9jZXNzb3JzIGhvbGRpbmcgcmVzcG9uc2liaWxpdHkgYW5kIGFjY291bnRhYmlsaXR5IGZvciBQSUkgcHJvY2Vzc2luZy4gVGhpcyBkb2N1bWVudCBpcyBhcHBsaWNhYmxlIHRvIGFsbCB0eXBlcyBhbmQgc2l6ZXMgb2Ygb3JnYW5pemF0aW9ucywgaW5jbHVkaW5nIHB1YmxpYyBhbmQgcHJpdmF0ZSBjb21wYW5pZXMsIGdvdmVybm1lbnQgZW50aXRpZXMgYW5kIG5vdC1mb3ItcHJvZml0IG9yZ2FuaXphdGlvbnMsIHdoaWNoIGFyZSBQSUkgY29udHJvbGxlcnMgYW5kL29yIFBJSSBwcm9jZXNzb3JzIHByb2Nlc3NpbmcgUElJIHdpdGhpbiBhbiBJU01TLiAiLCJvYmplY3RJRCI6Ijg1ODE5XzAiLCJfaGlnaGxpZ2h0UmVzdWx0Ijp7InRpdGxlIjp7InZhbHVlIjoiPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiBESVMgMjc3MDEgU2VjdXJpdHkgdGVjaG5pcXVlcyDigJQgRXh0ZW5zaW9uIHRvIDxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gPGVtPjI3MDAxPC9lbT4gYW5kIDxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gMjcwMDIgZm9yIHByaXZhY3kgaW5mb3JtYXRpb24gbWFuYWdlbWVudCDigJQgUmVxdWlyZW1lbnRzIGFuZCBndWlkZWxpbmVzIiwibWF0Y2hMZXZlbCI6ImZ1bGwiLCJmdWxseUhpZ2hsaWdodGVkIjpmYWxzZSwibWF0Y2hlZFdvcmRzIjpbImlzbyIsImllYyIsIjI3MDAxIl19LCJ0ZXh0Ijp7InZhbHVlIjoiVGhpcyBkb2N1bWVudCBzcGVjaWZpZXMgcmVxdWlyZW1lbnRzIGFuZCBwcm92aWRlcyBndWlkYW5jZSBmb3IgZXN0YWJsaXNoaW5nLCBpbXBsZW1lbnRpbmcsIG1haW50YWluaW5nIGFuZCBjb250aW51YWxseSBpbXByb3ZpbmcgYSBQcml2YWN5IEluZm9ybWF0aW9uIE1hbmFnZW1lbnQgU3lzdGVtIChQSU1TKSBpbiB0aGUgZm9ybSBvZiBhbiBleHRlbnNpb24gdG8gPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiA8ZW0+MjcwMDE8L2VtPiBhbmQgPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiAyNzAwMiBmb3IgcHJpdmFjeSBtYW5hZ2VtZW50IHdpdGhpbiB0aGUgY29udGV4dCBvZiB0aGUgb3JnYW5pemF0aW9uLiBUaGlzIGRvY3VtZW50IHNwZWNpZmllcyBQSU1TLXJlbGF0ZWQgcmVxdWlyZW1lbnRzIGFuZCBwcm92aWRlcyBndWlkYW5jZSBmb3IgUElJIGNvbnRyb2xsZXJzIGFuZCBQSUkgcHJvY2Vzc29ycyBob2xkaW5nIHJlc3BvbnNpYmlsaXR5IGFuZCBhY2NvdW50YWJpbGl0eSBmb3IgUElJIHByb2Nlc3NpbmcuIFRoaXMgZG9jdW1lbnQgaXMgYXBwbGljYWJsZSB0byBhbGwgdHlwZXMgYW5kIHNpemVzIG9mIG9yZ2FuaXphdGlvbnMsIGluY2x1ZGluZyBwdWJsaWMgYW5kIHByaXZhdGUgY29tcGFuaWVzLCBnb3Zlcm5tZW50IGVudGl0aWVzIGFuZCBub3QtZm9yLXByb2ZpdCBvcmdhbml6YXRpb25zLCB3aGljaCBhcmUgUElJIGNvbnRyb2xsZXJzIGFuZC9vciBQSUkgcHJvY2Vzc29ycyBwcm9jZXNzaW5nIFBJSSB3aXRoaW4gYW4gSVNNUy4gIiwibWF0Y2hMZXZlbCI6ImZ1bGwiLCJmdWxseUhpZ2hsaWdodGVkIjpmYWxzZSwibWF0Y2hlZFdvcmRzIjpbImlzbyIsImllYyIsIjI3MDAxIl19fX0seyJjYXRlZ29yeSI6InN0YW5kYXJkIiwicGF0aCI6Ii9zaXRlcy9pc29vcmcvY29udGVudHMvZGF0YS9zdGFuZGFyZC8wNy8xNi83MTY3MCIsInV1aWQiOiI0MDMyYzM1Zi1jNDQ3LTQ4MWUtOTExYi1iYWIyNDUxN2RhODAiLCJ0aXRsZSI6IklTTy9JRUMgMjc3MDE6MjAxOSBTZWN1cml0eSB0ZWNobmlxdWVzIOKAlCBFeHRlbnNpb24gdG8gSVNPL0lFQyAyNzAwMSBhbmQgSVNPL0lFQyAyNzAwMiBmb3IgcHJpdmFjeSBpbmZvcm1hdGlvbiBtYW5hZ2VtZW50IOKAlCBSZXF1aXJlbWVudHMgYW5kIGd1aWRlbGluZXMiLCJzdGF0dXMiOiJQdWJsaXNoZWQiLCJ5ZWFyIjoyMDIyLCJvcmRlciI6MTEsInRleHQiOiJUaGlzIGRvY3VtZW50IHNwZWNpZmllcyByZXF1aXJlbWVudHMgYW5kIHByb3ZpZGVzIGd1aWRhbmNlIGZvciBlc3RhYmxpc2hpbmcsIGltcGxlbWVudGluZywgbWFpbnRhaW5pbmcgYW5kIGNvbnRpbnVhbGx5IGltcHJvdmluZyBhIFByaXZhY3kgSW5mb3JtYXRpb24gTWFuYWdlbWVudCBTeXN0ZW0gKFBJTVMpIGluIHRoZSBmb3JtIG9mIGFuIGV4dGVuc2lvbiB0byBJU08vSUVDIDI3MDAxIGFuZCBJU08vSUVDIDI3MDAyIGZvciBwcml2YWN5IG1hbmFnZW1lbnQgd2l0aGluIHRoZSBjb250ZXh0IG9mIHRoZSBvcmdhbml6YXRpb24uIFRoaXMgZG9jdW1lbnQgc3BlY2lmaWVzIFBJTVMtcmVsYXRlZCByZXF1aXJlbWVudHMgYW5kIHByb3ZpZGVzIGd1aWRhbmNlIGZvciBQSUkgY29udHJvbGxlcnMgYW5kIFBJSSBwcm9jZXNzb3JzIGhvbGRpbmcgcmVzcG9uc2liaWxpdHkgYW5kIGFjY291bnRhYmlsaXR5IGZvciBQSUkgcHJvY2Vzc2luZy4gVGhpcyBkb2N1bWVudCBpcyBhcHBsaWNhYmxlIHRvIGFsbCB0eXBlcyBhbmQgc2l6ZXMgb2Ygb3JnYW5pemF0aW9ucywgaW5jbHVkaW5nIHB1YmxpYyBhbmQgcHJpdmF0ZSBjb21wYW5pZXMsIGdvdmVybm1lbnQgZW50aXRpZXMgYW5kIG5vdC1mb3ItcHJvZml0IG9yZ2FuaXphdGlvbnMsIHdoaWNoIGFyZSBQSUkgY29udHJvbGxlcnMgYW5kL29yIFBJSSBwcm9jZXNzb3JzIHByb2Nlc3NpbmcgUElJIHdpdGhpbiBhbiBJU01TLiAiLCJvYmplY3RJRCI6IjcxNjcwXzAiLCJfaGlnaGxpZ2h0UmVzdWx0Ijp7InRpdGxlIjp7InZhbHVlIjoiPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiAyNzcwMToyMDE5IFNlY3VyaXR5IHRlY2huaXF1ZXMg4oCUIEV4dGVuc2lvbiB0byA8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDxlbT4yNzAwMTwvZW0+IGFuZCA8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDI3MDAyIGZvciBwcml2YWN5IGluZm9ybWF0aW9uIG1hbmFnZW1lbnQg4oCUIFJlcXVpcmVtZW50cyBhbmQgZ3VpZGVsaW5lcyIsIm1hdGNoTGV2ZWwiOiJmdWxsIiwiZnVsbHlIaWdobGlnaHRlZCI6ZmFsc2UsIm1hdGNoZWRXb3JkcyI6WyJpc28iLCJpZWMiLCIyNzAwMSJdfSwidGV4dCI6eyJ2YWx1ZSI6IlRoaXMgZG9jdW1lbnQgc3BlY2lmaWVzIHJlcXVpcmVtZW50cyBhbmQgcHJvdmlkZXMgZ3VpZGFuY2UgZm9yIGVzdGFibGlzaGluZywgaW1wbGVtZW50aW5nLCBtYWludGFpbmluZyBhbmQgY29udGludWFsbHkgaW1wcm92aW5nIGEgUHJpdmFjeSBJbmZvcm1hdGlvbiBNYW5hZ2VtZW50IFN5c3RlbSAoUElNUykgaW4gdGhlIGZvcm0gb2YgYW4gZXh0ZW5zaW9uIHRvIDxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gPGVtPjI3MDAxPC9lbT4gYW5kIDxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gMjcwMDIgZm9yIHByaXZhY3kgbWFuYWdlbWVudCB3aXRoaW4gdGhlIGNvbnRleHQgb2YgdGhlIG9yZ2FuaXphdGlvbi4gVGhpcyBkb2N1bWVudCBzcGVjaWZpZXMgUElNUy1yZWxhdGVkIHJlcXVpcmVtZW50cyBhbmQgcHJvdmlkZXMgZ3VpZGFuY2UgZm9yIFBJSSBjb250cm9sbGVycyBhbmQgUElJIHByb2Nlc3NvcnMgaG9sZGluZyByZXNwb25zaWJpbGl0eSBhbmQgYWNjb3VudGFiaWxpdHkgZm9yIFBJSSBwcm9jZXNzaW5nLiBUaGlzIGRvY3VtZW50IGlzIGFwcGxpY2FibGUgdG8gYWxsIHR5cGVzIGFuZCBzaXplcyBvZiBvcmdhbml6YXRpb25zLCBpbmNsdWRpbmcgcHVibGljIGFuZCBwcml2YXRlIGNvbXBhbmllcywgZ292ZXJubWVudCBlbnRpdGllcyBhbmQgbm90LWZvci1wcm9maXQgb3JnYW5pemF0aW9ucywgd2hpY2ggYXJlIFBJSSBjb250cm9sbGVycyBhbmQvb3IgUElJIHByb2Nlc3NvcnMgcHJvY2Vzc2luZyBQSUkgd2l0aGluIGFuIElTTVMuICIsIm1hdGNoTGV2ZWwiOiJmdWxsIiwiZnVsbHlIaWdobGlnaHRlZCI6ZmFsc2UsIm1hdGNoZWRXb3JkcyI6WyJpc28iLCJpZWMiLCIyNzAwMSJdfX19LHsiY2F0ZWdvcnkiOiJzdGFuZGFyZCIsInBhdGgiOiIvc2l0ZXMvaXNvb3JnL2NvbnRlbnRzL2RhdGEvc3RhbmRhcmQvMDQvMjUvNDI1MDgiLCJ1dWlkIjoiNmJkODczZDAtMjA3Yy00NzE0LTk4M2EtMjVjMjE0NDMzYjUzIiwidGl0bGUiOiJJU08vSUVDIDI3MDA5OjIwMTYgSW5mb3JtYXRpb24gdGVjaG5vbG9neSDigJQgU2VjdXJpdHkgdGVjaG5pcXVlcyDigJQgU2VjdG9yLXNwZWNpZmljIGFwcGxpY2F0aW9uIG9mIElTTy9JRUMgMjcwMDEg4oCUIFJlcXVpcmVtZW50cyIsInN0YXR1cyI6IldpdGhkcmF3biIsInllYXIiOjIwMjAsIm9yZGVyIjoxMDAsInRleHQiOiJJU08vSUVDIDI3MDA5OjIwMTYgZGVmaW5lcyB0aGUgcmVxdWlyZW1lbnRzIGZvciB0aGUgdXNlIG9mIElTTy9JRUMgMjcwMDEgaW4gYW55IHNwZWNpZmljIHNlY3RvciAoZmllbGQsIGFwcGxpY2F0aW9uIGFyZWEgb3IgbWFya2V0IHNlY3RvcikuIEl0IGV4cGxhaW5zIGhvdyB0byBpbmNsdWRlIHJlcXVpcmVtZW50cyBhZGRpdGlvbmFsIHRvIHRob3NlIGluIElTTy9JRUMgMjcwMDEsIGhvdyB0byByZWZpbmUgYW55IG9mIHRoZSBJU08vSUVDIDI3MDAxIHJlcXVpcmVtZW50cywgYW5kIGhvdyB0byBpbmNsdWRlIGNvbnRyb2xzIG9yIGNvbnRyb2wgc2V0cyBpbiBhZGRpdGlvbiB0byBJU08vSUVDIDI3MDAxOjIwMTMsIEFubmV4IEEuIEl0IGVuc3VyZXMgdGhhdCBhZGRpdGlvbmFsIG9yIHJlZmluZWQgcmVxdWlyZW1lbnRzIGFyZSBub3QgaW4gY29uZmxpY3Qgd2l0aCB0aGUgcmVxdWlyZW1lbnRzIGluIElTTy9JRUMgMjcwMDEuIEl0IGlzIGFwcGxpY2FibGUgdG8gdGhvc2UgaW52b2x2ZWQgaW4gcHJvZHVjaW5nIHNlY3Rvci1zcGVjaWZpYyBzdGFuZGFyZHMgdGhhdCByZWxhdGUgdG8gSVNPL0lFQyAyNzAwMS4gIiwib2JqZWN0SUQiOiI0MjUwOF8wIiwiX2hpZ2hsaWdodFJlc3VsdCI6eyJ0aXRsZSI6eyJ2YWx1ZSI6IjxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gMjcwMDk6MjAxNiBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBTZWN1cml0eSB0ZWNobmlxdWVzIOKAlCBTZWN0b3Itc3BlY2lmaWMgYXBwbGljYXRpb24gb2YgPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiA8ZW0+MjcwMDE8L2VtPiDigJQgUmVxdWlyZW1lbnRzIiwibWF0Y2hMZXZlbCI6ImZ1bGwiLCJmdWxseUhpZ2hsaWdodGVkIjpmYWxzZSwibWF0Y2hlZFdvcmRzIjpbImlzbyIsImllYyIsIjI3MDAxIl19LCJ0ZXh0Ijp7InZhbHVlIjoiPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiAyNzAwOToyMDE2IGRlZmluZXMgdGhlIHJlcXVpcmVtZW50cyBmb3IgdGhlIHVzZSBvZiA8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDxlbT4yNzAwMTwvZW0+IGluIGFueSBzcGVjaWZpYyBzZWN0b3IgKGZpZWxkLCBhcHBsaWNhdGlvbiBhcmVhIG9yIG1hcmtldCBzZWN0b3IpLiBJdCBleHBsYWlucyBob3cgdG8gaW5jbHVkZSByZXF1aXJlbWVudHMgYWRkaXRpb25hbCB0byB0aG9zZSBpbiA8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDxlbT4yNzAwMTwvZW0+LCBob3cgdG8gcmVmaW5lIGFueSBvZiB0aGUgPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiA8ZW0+MjcwMDE8L2VtPiByZXF1aXJlbWVudHMsIGFuZCBob3cgdG8gaW5jbHVkZSBjb250cm9scyBvciBjb250cm9sIHNldHMgaW4gYWRkaXRpb24gdG8gPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiA8ZW0+MjcwMDE8L2VtPjoyMDEzLCBBbm5leCBBLiBJdCBlbnN1cmVzIHRoYXQgYWRkaXRpb25hbCBvciByZWZpbmVkIHJlcXVpcmVtZW50cyBhcmUgbm90IGluIGNvbmZsaWN0IHdpdGggdGhlIHJlcXVpcmVtZW50cyBpbiA8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDxlbT4yNzAwMTwvZW0+LiBJdCBpcyBhcHBsaWNhYmxlIHRvIHRob3NlIGludm9sdmVkIGluIHByb2R1Y2luZyBzZWN0b3Itc3BlY2lmaWMgc3RhbmRhcmRzIHRoYXQgcmVsYXRlIHRvIDxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gPGVtPjI3MDAxPC9lbT4uICIsIm1hdGNoTGV2ZWwiOiJmdWxsIiwiZnVsbHlIaWdobGlnaHRlZCI6ZmFsc2UsIm1hdGNoZWRXb3JkcyI6WyJpc28iLCJpZWMiLCIyNzAwMSJdfX19LHsiY2F0ZWdvcnkiOiJzdGFuZGFyZCIsInBhdGgiOiIvc2l0ZXMvaXNvb3JnL2NvbnRlbnRzL2RhdGEvc3RhbmRhcmQvMDcvMzkvNzM5MDciLCJ1dWlkIjoiNGFiN2FhMDMtNGU2OC00N2U1LTk4MjgtNTE5YzMwOTg4ZDMyIiwidGl0bGUiOiJJU08vSUVDIDI3MDA5OjIwMjAgSW5mb3JtYXRpb24gc2VjdXJpdHksIGN5YmVyc2VjdXJpdHkgYW5kIHByaXZhY3kgcHJvdGVjdGlvbiDigJQgU2VjdG9yLXNwZWNpZmljIGFwcGxpY2F0aW9uIG9mIElTTy9JRUMgMjcwMDEg4oCUIFJlcXVpcmVtZW50cyIsInN0YXR1cyI6IldpdGhkcmF3biIsInllYXIiOjIwMjMsIm9yZGVyIjoxMDAsInRleHQiOiJUaGlzIGRvY3VtZW50IHNwZWNpZmllcyB0aGUgcmVxdWlyZW1lbnRzIGZvciBjcmVhdGluZyBzZWN0b3Itc3BlY2lmaWMgc3RhbmRhcmRzIHRoYXQgZXh0ZW5kIElTTy9JRUMgMjcwMDEsIGFuZCBjb21wbGVtZW50IG9yIGFtZW5kIElTTy9JRUMgMjcwMDIgdG8gc3VwcG9ydCBhIHNwZWNpZmljIHNlY3RvciAoZG9tYWluLCBhcHBsaWNhdGlvbiBhcmVhIG9yIG1hcmtldCkuIFRoaXMgZG9jdW1lbnQgZXhwbGFpbnMgaG93IHRvOiDigJQgICAgIGluY2x1ZGUgcmVxdWlyZW1lbnRzIGluIGFkZGl0aW9uIHRvIHRob3NlIGluIElTTy9JRUMgMjcwMDEsIOKAlCAgICAgcmVmaW5lIG9yIGludGVycHJldCBhbnkgb2YgdGhlIElTTy9JRUMgMjcwMDEgcmVxdWlyZW1lbnRzLCDigJQgICAgIGluY2x1ZGUgY29udHJvbHMgaW4gYWRkaXRpb24gdG8gdGhvc2Ugb2YgSVNPL0lFQyAyNzAwMToyMDEzLCBBbm5leCBBIGFuZCBJU08vSUVDIDI3MDAyLCDigJQgICAgIG1vZGlmeSBhbnkgb2YgdGhlIGNvbnRyb2xzIG9mIElTTy9JRUMgMjcwMDE6MjAxMywgQW5uZXggQSBhbmQgSVNPL0lFQyAyNzAwMiwg4oCUICAgICBhZGQgZ3VpZGFuY2UgdG8gb3IgbW9kaWZ5IHRoZSBndWlkYW5jZSBvZiBJU08vSUVDIDI3MDAyLiBUaGlzIGRvY3VtZW50IHNwZWNpZmllcyB0aGF0IGFkZGl0aW9uYWwgb3IgcmVmaW5lZCByZXF1aXJlbWVudHMgZG8gbm90IGludmFsaWRhdGUgdGhlIHJlcXVpcmVtZW50cyBpbiBJU08vSUVDIDI3MDAxLiBUaGlzIGRvY3VtZW50IGlzIGFwcGxpY2FibGUgdG8gdGhvc2UgaW52b2x2ZWQgaW4gcHJvZHVjaW5nIHNlY3Rvci1zcGVjaWZpYyBzdGFuZGFyZHMuICIsIm9iamVjdElEIjoiNzM5MDdfMCIsIl9oaWdobGlnaHRSZXN1bHQiOnsidGl0bGUiOnsidmFsdWUiOiI8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDI3MDA5OjIwMjAgSW5mb3JtYXRpb24gc2VjdXJpdHksIGN5YmVyc2VjdXJpdHkgYW5kIHByaXZhY3kgcHJvdGVjdGlvbiDigJQgU2VjdG9yLXNwZWNpZmljIGFwcGxpY2F0aW9uIG9mIDxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gPGVtPjI3MDAxPC9lbT4g4oCUIFJlcXVpcmVtZW50cyIsIm1hdGNoTGV2ZWwiOiJmdWxsIiwiZnVsbHlIaWdobGlnaHRlZCI6ZmFsc2UsIm1hdGNoZWRXb3JkcyI6WyJpc28iLCJpZWMiLCIyNzAwMSJdfSwidGV4dCI6eyJ2YWx1ZSI6IlRoaXMgZG9jdW1lbnQgc3BlY2lmaWVzIHRoZSByZXF1aXJlbWVudHMgZm9yIGNyZWF0aW5nIHNlY3Rvci1zcGVjaWZpYyBzdGFuZGFyZHMgdGhhdCBleHRlbmQgPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiA8ZW0+MjcwMDE8L2VtPiwgYW5kIGNvbXBsZW1lbnQgb3IgYW1lbmQgPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiAyNzAwMiB0byBzdXBwb3J0IGEgc3BlY2lmaWMgc2VjdG9yIChkb21haW4sIGFwcGxpY2F0aW9uIGFyZWEgb3IgbWFya2V0KS4gVGhpcyBkb2N1bWVudCBleHBsYWlucyBob3cgdG86IOKAlCAgICAgaW5jbHVkZSByZXF1aXJlbWVudHMgaW4gYWRkaXRpb24gdG8gdGhvc2UgaW4gPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiA8ZW0+MjcwMDE8L2VtPiwg4oCUICAgICByZWZpbmUgb3IgaW50ZXJwcmV0IGFueSBvZiB0aGUgPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiA8ZW0+MjcwMDE8L2VtPiByZXF1aXJlbWVudHMsIOKAlCAgICAgaW5jbHVkZSBjb250cm9scyBpbiBhZGRpdGlvbiB0byB0aG9zZSBvZiA8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDxlbT4yNzAwMTwvZW0+OjIwMTMsIEFubmV4IEEgYW5kIDxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gMjcwMDIsIOKAlCAgICAgbW9kaWZ5IGFueSBvZiB0aGUgY29udHJvbHMgb2YgPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiA8ZW0+MjcwMDE8L2VtPjoyMDEzLCBBbm5leCBBIGFuZCA8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDI3MDAyLCDigJQgICAgIGFkZCBndWlkYW5jZSB0byBvciBtb2RpZnkgdGhlIGd1aWRhbmNlIG9mIDxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gMjcwMDIuIFRoaXMgZG9jdW1lbnQgc3BlY2lmaWVzIHRoYXQgYWRkaXRpb25hbCBvciByZWZpbmVkIHJlcXVpcmVtZW50cyBkbyBub3QgaW52YWxpZGF0ZSB0aGUgcmVxdWlyZW1lbnRzIGluIDxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gPGVtPjI3MDAxPC9lbT4uIFRoaXMgZG9jdW1lbnQgaXMgYXBwbGljYWJsZSB0byB0aG9zZSBpbnZvbHZlZCBpbiBwcm9kdWNpbmcgc2VjdG9yLXNwZWNpZmljIHN0YW5kYXJkcy4gIiwibWF0Y2hMZXZlbCI6ImZ1bGwiLCJmdWxseUhpZ2hsaWdodGVkIjpmYWxzZSwibWF0Y2hlZFdvcmRzIjpbImlzbyIsImllYyIsIjI3MDAxIl19fX0seyJjYXRlZ29yeSI6InN0YW5kYXJkIiwicGF0aCI6Ii9zaXRlcy9pc29vcmcvY29udGVudHMvZGF0YS9zdGFuZGFyZC8wNi8xMC82MTAwNSIsInV1aWQiOiIwNjBlNTY0MS1lMjI2LTQzZGYtYjA0Ni1iMmI0OTliZDdiMDgiLCJ0aXRsZSI6IklTTy9JRUMgVFIgMjcwMjM6MjAxNSBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBTZWN1cml0eSB0ZWNobmlxdWVzIOKAlCBNYXBwaW5nIHRoZSByZXZpc2VkIGVkaXRpb25zIG9mIElTTy9JRUMgMjcwMDEgYW5kIElTTy9JRUMgMjcwMDIiLCJzdGF0dXMiOiJXaXRoZHJhd24iLCJ5ZWFyIjoyMDIyLCJvcmRlciI6MTAwLCJ0ZXh0IjoiSVNPL0lFQyBUUiAyNzAyMzoyMDE1IGlzIHRvIHNob3cgdGhlIGNvcnJlc3BvbmRpbmcgcmVsYXRpb25zaGlwIGJldHdlZW4gdGhlIHJldmlzZWQgdmVyc2lvbnMgb2YgSVNPL0lFQyAyNzAwMSBhbmQgSVNPL0lFQyAyNzAwMi4gSVNPL0lFQyBUUiAyNzAyMzoyMDE1IHdpbGwgYmUgdXNlZnVsIHRvIGFsbCB1c2VycyBtaWdyYXRpbmcgZnJvbSB0aGUgMjAwNSB0byB0aGUgMjAxMyB2ZXJzaW9ucyBvZiBJU08vSUVDIDI3MDAxIGFuZCBJU08vSUVDIDI3MDAyLiAiLCJvYmplY3RJRCI6IjYxMDA1XzAiLCJfaGlnaGxpZ2h0UmVzdWx0Ijp7InRpdGxlIjp7InZhbHVlIjoiPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiBUUiAyNzAyMzoyMDE1IEluZm9ybWF0aW9uIHRlY2hub2xvZ3kg4oCUIFNlY3VyaXR5IHRlY2huaXF1ZXMg4oCUIE1hcHBpbmcgdGhlIHJldmlzZWQgZWRpdGlvbnMgb2YgPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiA8ZW0+MjcwMDE8L2VtPiBhbmQgPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiAyNzAwMiIsIm1hdGNoTGV2ZWwiOiJmdWxsIiwiZnVsbHlIaWdobGlnaHRlZCI6ZmFsc2UsIm1hdGNoZWRXb3JkcyI6WyJpc28iLCJpZWMiLCIyNzAwMSJdfSwidGV4dCI6eyJ2YWx1ZSI6IjxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gVFIgMjcwMjM6MjAxNSBpcyB0byBzaG93IHRoZSBjb3JyZXNwb25kaW5nIHJlbGF0aW9uc2hpcCBiZXR3ZWVuIHRoZSByZXZpc2VkIHZlcnNpb25zIG9mIDxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gPGVtPjI3MDAxPC9lbT4gYW5kIDxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gMjcwMDIuIDxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gVFIgMjcwMjM6MjAxNSB3aWxsIGJlIHVzZWZ1bCB0byBhbGwgdXNlcnMgbWlncmF0aW5nIGZyb20gdGhlIDIwMDUgdG8gdGhlIDIwMTMgdmVyc2lvbnMgb2YgPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiA8ZW0+MjcwMDE8L2VtPiBhbmQgPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiAyNzAwMi4gIiwibWF0Y2hMZXZlbCI6ImZ1bGwiLCJmdWxseUhpZ2hsaWdodGVkIjpmYWxzZSwibWF0Y2hlZFdvcmRzIjpbImlzbyIsImllYyIsIjI3MDAxIl19fX0seyJjYXRlZ29yeSI6InN0YW5kYXJkIiwicGF0aCI6Ii9zaXRlcy9pc29vcmcvY29udGVudHMvZGF0YS9zdGFuZGFyZC8wNi80MS82NDEzOCIsInV1aWQiOiI0MjUwNmI3ZC0xYTE5LTRkNGUtYWU2MS1iZWRkZmQzYWY3ZDAiLCJ0aXRsZSI6IklTTy9JRUMgMjcwMTM6MjAxNSBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBTZWN1cml0eSB0ZWNobmlxdWVzIOKAlCBHdWlkYW5jZSBvbiB0aGUgaW50ZWdyYXRlZCBpbXBsZW1lbnRhdGlvbiBvZiBJU08vSUVDIDI3MDAxIGFuZCBJU08vSUVDIDIwMDAwLTEiLCJzdGF0dXMiOiJXaXRoZHJhd24iLCJ5ZWFyIjoyMDIxLCJvcmRlciI6MTAwLCJ0ZXh0IjoiSVNPL0lFQyAyNzAxMzoyMDE1IHByb3ZpZGVzIGd1aWRhbmNlIG9uIHRoZSBpbnRlZ3JhdGVkIGltcGxlbWVudGF0aW9uIG9mIElTTy9JRUMgMjcwMDEgYW5kIElTTy9JRUMgMjAwMDDigJExIGZvciB0aG9zZSBvcmdhbml6YXRpb25zIHRoYXQgYXJlIGludGVuZGluZyB0byBlaXRoZXIgYSkgICAgaW1wbGVtZW50IElTTy9JRUMgMjcwMDEgd2hlbiBJU08vSUVDIDIwMDAw4oCRMSBpcyBhbHJlYWR5IGltcGxlbWVudGVkLCBvciB2aWNlIHZlcnNhLCBiKSAgICBpbXBsZW1lbnQgYm90aCBJU08vSUVDIDI3MDAxIGFuZCBJU08vSUVDIDIwMDAw4oCRMSB0b2dldGhlciwgb3IgYykgICAgaW50ZWdyYXRlIGV4aXN0aW5nIG1hbmFnZW1lbnQgc3lzdGVtcyBiYXNlZCBvbiBJU08vSUVDIDI3MDAxIGFuZCBJU08vSUVDIDIwMDAw4oCRMS4gSVNPL0lFQyAyNzAxMzoyMDE1IGZvY3VzZXMgZXhjbHVzaXZlbHkgb24gdGhlIGludGVncmF0ZWQgaW1wbGVtZW50YXRpb24gb2YgYW4gaW5mb3JtYXRpb24gc2VjdXJpdHkgbWFuYWdlbWVudCBzeXN0ZW0gKElTTVMpIGFzIHNwZWNpZmllZCBpbiBJU08vSUVDIDI3MDAxIGFuZCBhIHNlcnZpY2UgbWFuYWdlbWVudCBzeXN0ZW0gKFNNUykgYXMgc3BlY2lmaWVkIGluIElTTy9JRUMgMjAwMDDigJExLiBJbiBwcmFjdGljZSwgSVNPL0lFQyAyNzAwMSBhbmQgSVNPL0lFQyAyMDAwMOKAkTEgY2FuIGFsc28gYmUgaW50ZWdyYXRlZCB3aXRoIG90aGVyIG1hbmFnZW1lbnQgc3lzdGVtIHN0YW5kYXJkcywgc3VjaCBhcyBJU08gOTAwMSBhbmQgSVNPIDE0MDAxLiAiLCJvYmplY3RJRCI6IjY0MTM4XzAiLCJfaGlnaGxpZ2h0UmVzdWx0Ijp7InRpdGxlIjp7InZhbHVlIjoiPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiAyNzAxMzoyMDE1IEluZm9ybWF0aW9uIHRlY2hub2xvZ3kg4oCUIFNlY3VyaXR5IHRlY2huaXF1ZXMg4oCUIEd1aWRhbmNlIG9uIHRoZSBpbnRlZ3JhdGVkIGltcGxlbWVudGF0aW9uIG9mIDxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gPGVtPjI3MDAxPC9lbT4gYW5kIDxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gMjAwMDAtMSIsIm1hdGNoTGV2ZWwiOiJmdWxsIiwiZnVsbHlIaWdobGlnaHRlZCI6ZmFsc2UsIm1hdGNoZWRXb3JkcyI6WyJpc28iLCJpZWMiLCIyNzAwMSJdfSwidGV4dCI6eyJ2YWx1ZSI6IjxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gMjcwMTM6MjAxNSBwcm92aWRlcyBndWlkYW5jZSBvbiB0aGUgaW50ZWdyYXRlZCBpbXBsZW1lbnRhdGlvbiBvZiA8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDxlbT4yNzAwMTwvZW0+IGFuZCA8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDIwMDAw4oCRMSBmb3IgdGhvc2Ugb3JnYW5pemF0aW9ucyB0aGF0IGFyZSBpbnRlbmRpbmcgdG8gZWl0aGVyIGEpICAgIGltcGxlbWVudCA8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDxlbT4yNzAwMTwvZW0+IHdoZW4gPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiAyMDAwMOKAkTEgaXMgYWxyZWFkeSBpbXBsZW1lbnRlZCwgb3IgdmljZSB2ZXJzYSwgYikgICAgaW1wbGVtZW50IGJvdGggPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiA8ZW0+MjcwMDE8L2VtPiBhbmQgPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiAyMDAwMOKAkTEgdG9nZXRoZXIsIG9yIGMpICAgIGludGVncmF0ZSBleGlzdGluZyBtYW5hZ2VtZW50IHN5c3RlbXMgYmFzZWQgb24gPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiA8ZW0+MjcwMDE8L2VtPiBhbmQgPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiAyMDAwMOKAkTEuIDxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gMjcwMTM6MjAxNSBmb2N1c2VzIGV4Y2x1c2l2ZWx5IG9uIHRoZSBpbnRlZ3JhdGVkIGltcGxlbWVudGF0aW9uIG9mIGFuIGluZm9ybWF0aW9uIHNlY3VyaXR5IG1hbmFnZW1lbnQgc3lzdGVtIChJU01TKSBhcyBzcGVjaWZpZWQgaW4gPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiA8ZW0+MjcwMDE8L2VtPiBhbmQgYSBzZXJ2aWNlIG1hbmFnZW1lbnQgc3lzdGVtIChTTVMpIGFzIHNwZWNpZmllZCBpbiA8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDIwMDAw4oCRMS4gSW4gcHJhY3RpY2UsIDxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gPGVtPjI3MDAxPC9lbT4gYW5kIDxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gMjAwMDDigJExIGNhbiBhbHNvIGJlIGludGVncmF0ZWQgd2l0aCBvdGhlciBtYW5hZ2VtZW50IHN5c3RlbSBzdGFuZGFyZHMsIHN1Y2ggYXMgPGVtPklTTzwvZW0+IDkwMDEgYW5kIDxlbT5JU088L2VtPiAxNDAwMS4gIiwibWF0Y2hMZXZlbCI6ImZ1bGwiLCJmdWxseUhpZ2hsaWdodGVkIjpmYWxzZSwibWF0Y2hlZFdvcmRzIjpbImlzbyIsImllYyIsIjI3MDAxIl19fX0seyJjYXRlZ29yeSI6InN0YW5kYXJkIiwicGF0aCI6Ii9zaXRlcy9pc29vcmcvY29udGVudHMvZGF0YS9zdGFuZGFyZC8wNC8zNy80Mzc1MyIsInV1aWQiOiJlNWE3Mzk1Yy1mYjliLTRkMWQtOTQyZi02YjAyNDBjZjgzYWMiLCJ0aXRsZSI6IklTTy9JRUMgMjcwMTM6MjAxMiBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBTZWN1cml0eSB0ZWNobmlxdWVzIOKAlCBHdWlkYW5jZSBvbiB0aGUgaW50ZWdyYXRlZCBpbXBsZW1lbnRhdGlvbiBvZiBJU08vSUVDIDI3MDAxIGFuZCBJU08vSUVDIDIwMDAwLTEiLCJzdGF0dXMiOiJXaXRoZHJhd24iLCJ5ZWFyIjoyMDE1LCJvcmRlciI6MTAwLCJ0ZXh0IjoiSVNPL0lFQyAyNzAxMzoyMDEyIHByb3ZpZGVzIGd1aWRlbGluZXMgb24gdGhlIGludGVncmF0ZWQgaW1wbGVtZW50YXRpb24gb2YgSVNPL0lFQyAyNzAwMSBhbmQgSVNPL0lFQyAyMDAwMC0xIGZvciB0aG9zZSBvcmdhbml6YXRpb25zIHdoaWNoIGFyZSBpbnRlbmRpbmcgdG8gZWl0aGVyOiBhKSBpbXBsZW1lbnQgSVNPL0lFQyAyNzAwMSB3aGVuIElTTy9JRUMgMjAwMDAtMSBpcyBhbHJlYWR5IGltcGxlbWVudGVkLCBvciB2aWNlIHZlcnNhOyBiKSBpbXBsZW1lbnQgYm90aCBJU08vSUVDIDI3MDAxIGFuZCBJU08vSUVDIDIwMDAwLTEgdG9nZXRoZXI7IGMpIGludGVncmF0ZSBleGlzdGluZyBJU08vSUVDIDI3MDAxIGFuZCBJU08vSUVDIDIwMDAwLTEgbWFuYWdlbWVudCBzeXN0ZW1zLiBJU08vSUVDIDI3MDEzOjIwMTIgZm9jdXNlcyBleGNsdXNpdmVseSBvbiB0aGUgaW50ZWdyYXRlZCBpbXBsZW1lbnRhdGlvbiBvZiBJU08vSUVDIDI3MDAxIGFuZCBJU08vSUVDIDIwMDAwLTEuICIsIm9iamVjdElEIjoiNDM3NTNfMCIsIl9oaWdobGlnaHRSZXN1bHQiOnsidGl0bGUiOnsidmFsdWUiOiI8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDI3MDEzOjIwMTIgSW5mb3JtYXRpb24gdGVjaG5vbG9neSDigJQgU2VjdXJpdHkgdGVjaG5pcXVlcyDigJQgR3VpZGFuY2Ugb24gdGhlIGludGVncmF0ZWQgaW1wbGVtZW50YXRpb24gb2YgPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiA8ZW0+MjcwMDE8L2VtPiBhbmQgPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiAyMDAwMC0xIiwibWF0Y2hMZXZlbCI6ImZ1bGwiLCJmdWxseUhpZ2hsaWdodGVkIjpmYWxzZSwibWF0Y2hlZFdvcmRzIjpbImlzbyIsImllYyIsIjI3MDAxIl19LCJ0ZXh0Ijp7InZhbHVlIjoiPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiAyNzAxMzoyMDEyIHByb3ZpZGVzIGd1aWRlbGluZXMgb24gdGhlIGludGVncmF0ZWQgaW1wbGVtZW50YXRpb24gb2YgPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiA8ZW0+MjcwMDE8L2VtPiBhbmQgPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiAyMDAwMC0xIGZvciB0aG9zZSBvcmdhbml6YXRpb25zIHdoaWNoIGFyZSBpbnRlbmRpbmcgdG8gZWl0aGVyOiBhKSBpbXBsZW1lbnQgPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiA8ZW0+MjcwMDE8L2VtPiB3aGVuIDxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gMjAwMDAtMSBpcyBhbHJlYWR5IGltcGxlbWVudGVkLCBvciB2aWNlIHZlcnNhOyBiKSBpbXBsZW1lbnQgYm90aCA8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDxlbT4yNzAwMTwvZW0+IGFuZCA8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDIwMDAwLTEgdG9nZXRoZXI7IGMpIGludGVncmF0ZSBleGlzdGluZyA8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDxlbT4yNzAwMTwvZW0+IGFuZCA8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDIwMDAwLTEgbWFuYWdlbWVudCBzeXN0ZW1zLiA8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDI3MDEzOjIwMTIgZm9jdXNlcyBleGNsdXNpdmVseSBvbiB0aGUgaW50ZWdyYXRlZCBpbXBsZW1lbnRhdGlvbiBvZiA8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDxlbT4yNzAwMTwvZW0+IGFuZCA8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDIwMDAwLTEuICIsIm1hdGNoTGV2ZWwiOiJmdWxsIiwiZnVsbHlIaWdobGlnaHRlZCI6ZmFsc2UsIm1hdGNoZWRXb3JkcyI6WyJpc28iLCJpZWMiLCIyNzAwMSJdfX19LHsiY2F0ZWdvcnkiOiJzdGFuZGFyZCIsInBhdGgiOiIvc2l0ZXMvaXNvb3JnL2NvbnRlbnRzL2RhdGEvc3RhbmRhcmQvMDcvODcvNzg3NTIiLCJ1dWlkIjoiYmZmZmNkOTAtODEyZS00MzdlLTk5MGUtMjQ4NTg4NDNlMDMzIiwidGl0bGUiOiJJU08vSUVDIDI3MDEzOjIwMjEgSW5mb3JtYXRpb24gc2VjdXJpdHksIGN5YmVyc2VjdXJpdHkgYW5kIHByaXZhY3kgcHJvdGVjdGlvbiDigJQgR3VpZGFuY2Ugb24gdGhlIGludGVncmF0ZWQgaW1wbGVtZW50YXRpb24gb2YgSVNPL0lFQyAyNzAwMSBhbmQgSVNPL0lFQyAyMDAwMC0xIiwic3RhdHVzIjoiUHVibGlzaGVkIiwieWVhciI6MjAyMSwib3JkZXIiOjExLCJ0ZXh0IjoiVGhpcyBkb2N1bWVudCBnaXZlcyBndWlkYW5jZSBvbiB0aGUgaW50ZWdyYXRlZCBpbXBsZW1lbnRhdGlvbiBvZiBJU08vSUVDwqAyNzAwMSBhbmQgSVNPL0lFQ8KgMjAwMDAtMSBmb3Igb3JnYW5pemF0aW9ucyBpbnRlbmRpbmcgdG86IGEpIGltcGxlbWVudCBJU08vSUVDMjcwMDEgd2hlbiBJU08vSUVDwqAyMDAwMC0xIGlzIGFscmVhZHkgaW1wbGVtZW50ZWQsIG9yIHZpY2UgdmVyc2E7IGIpIGltcGxlbWVudCBib3RoIElTTy9JRUMyNzAwMSBhbmQgSVNPL0lFQ8KgMjAwMDAtMSB0b2dldGhlcjsgb3IgYykgaW50ZWdyYXRlIGV4aXN0aW5nIG1hbmFnZW1lbnQgc3lzdGVtcyBiYXNlZCBvbiBJU08vSUVDMjcwMDEgYW5kIElTTy9JRUPCoDIwMDAwLTEuIFRoaXMgZG9jdW1lbnQgZm9jdXNlcyBleGNsdXNpdmVseSBvbiB0aGUgaW50ZWdyYXRlZCBpbXBsZW1lbnRhdGlvbiBvZiBhbiBpbmZvcm1hdGlvbiBzZWN1cml0eSBtYW5hZ2VtZW50IHN5c3RlbSAoSVNNUykgYXMgc3BlY2lmaWVkIGluIElTTy9JRUPCoDI3MDAxIGFuZCBhIHNlcnZpY2UgbWFuYWdlbWVudCBzeXN0ZW0gKFNNUykgYXMgc3BlY2lmaWVkIGluIElTTy9JRUPCoDIwMDAwLTEuICIsIm9iamVjdElEIjoiNzg3NTJfMCIsIl9oaWdobGlnaHRSZXN1bHQiOnsidGl0bGUiOnsidmFsdWUiOiI8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDI3MDEzOjIwMjEgSW5mb3JtYXRpb24gc2VjdXJpdHksIGN5YmVyc2VjdXJpdHkgYW5kIHByaXZhY3kgcHJvdGVjdGlvbiDigJQgR3VpZGFuY2Ugb24gdGhlIGludGVncmF0ZWQgaW1wbGVtZW50YXRpb24gb2YgPGVtPklTTzwvZW0+LzxlbT5JRUMgMjcwMDE8L2VtPiBhbmQgPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiAyMDAwMC0xIiwibWF0Y2hMZXZlbCI6ImZ1bGwiLCJmdWxseUhpZ2hsaWdodGVkIjpmYWxzZSwibWF0Y2hlZFdvcmRzIjpbImlzbyIsImllYyIsIjI3MDAxIl19LCJ0ZXh0Ijp7InZhbHVlIjoiVGhpcyBkb2N1bWVudCBnaXZlcyBndWlkYW5jZSBvbiB0aGUgaW50ZWdyYXRlZCBpbXBsZW1lbnRhdGlvbiBvZiA8ZW0+SVNPPC9lbT4vPGVtPklFQ8KgMjcwMDE8L2VtPiBhbmQgPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPsKgMjAwMDAtMSBmb3Igb3JnYW5pemF0aW9ucyBpbnRlbmRpbmcgdG86IGEpIGltcGxlbWVudCA8ZW0+SVNPPC9lbT4vPGVtPklFQzI3MDAxPC9lbT4gd2hlbiA8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+wqAyMDAwMC0xIGlzIGFscmVhZHkgaW1wbGVtZW50ZWQsIG9yIHZpY2UgdmVyc2E7IGIpIGltcGxlbWVudCBib3RoIDxlbT5JU088L2VtPi88ZW0+SUVDMjcwMDE8L2VtPiBhbmQgPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPsKgMjAwMDAtMSB0b2dldGhlcjsgb3IgYykgaW50ZWdyYXRlIGV4aXN0aW5nIG1hbmFnZW1lbnQgc3lzdGVtcyBiYXNlZCBvbiA8ZW0+SVNPPC9lbT4vPGVtPklFQzI3MDAxPC9lbT4gYW5kIDxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT7CoDIwMDAwLTEuIFRoaXMgZG9jdW1lbnQgZm9jdXNlcyBleGNsdXNpdmVseSBvbiB0aGUgaW50ZWdyYXRlZCBpbXBsZW1lbnRhdGlvbiBvZiBhbiBpbmZvcm1hdGlvbiBzZWN1cml0eSBtYW5hZ2VtZW50IHN5c3RlbSAoSVNNUykgYXMgc3BlY2lmaWVkIGluIDxlbT5JU088L2VtPi88ZW0+SUVDwqAyNzAwMTwvZW0+IGFuZCBhIHNlcnZpY2UgbWFuYWdlbWVudCBzeXN0ZW0gKFNNUykgYXMgc3BlY2lmaWVkIGluIDxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT7CoDIwMDAwLTEuICIsIm1hdGNoTGV2ZWwiOiJmdWxsIiwiZnVsbHlIaWdobGlnaHRlZCI6ZmFsc2UsIm1hdGNoZWRXb3JkcyI6WyJpc28iLCJpZWMiLCIyNzAwMSJdfX19LHsiY2F0ZWdvcnkiOiJzdGFuZGFyZCIsInBhdGgiOiIvc2l0ZXMvaXNvb3JnL2NvbnRlbnRzL2RhdGEvc3RhbmRhcmQvMDgvNTkvODU5MjIiLCJ1dWlkIjoiZThmODE1MGItM2E2ZS00Nzc4LWJkZDMtMmZlZDU1NGQ4M2NmIiwidGl0bGUiOiJJU08vSUVDIDI3MDEzOjIwMjEvREFtZCAxIEluZm9ybWF0aW9uIHNlY3VyaXR5LCBjeWJlcnNlY3VyaXR5IGFuZCBwcml2YWN5IHByb3RlY3Rpb24g4oCUIEd1aWRhbmNlIG9uIHRoZSBpbnRlZ3JhdGVkIGltcGxlbWVudGF0aW9uIG9mIElTTy9JRUMgMjcwMDEgYW5kIElTTy9JRUMgMjAwMDAtMSDigJQgQW1lbmRtZW50IDEiLCJzdGF0dXMiOiJVbmRlciBkZXZlbG9wbWVudCIsInllYXIiOjIwMjMsIm9yZGVyIjoxMiwib2JqZWN0SUQiOiI4NTkyMl8wIiwiX2hpZ2hsaWdodFJlc3VsdCI6eyJ0aXRsZSI6eyJ2YWx1ZSI6IjxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gMjcwMTM6MjAyMS9EQW1kIDEgSW5mb3JtYXRpb24gc2VjdXJpdHksIGN5YmVyc2VjdXJpdHkgYW5kIHByaXZhY3kgcHJvdGVjdGlvbiDigJQgR3VpZGFuY2Ugb24gdGhlIGludGVncmF0ZWQgaW1wbGVtZW50YXRpb24gb2YgPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiA8ZW0+MjcwMDE8L2VtPiBhbmQgPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiAyMDAwMC0xIOKAlCBBbWVuZG1lbnQgMSIsIm1hdGNoTGV2ZWwiOiJmdWxsIiwiZnVsbHlIaWdobGlnaHRlZCI6ZmFsc2UsIm1hdGNoZWRXb3JkcyI6WyJpc28iLCJpZWMiLCIyNzAwMSJdfX19LHsiY2F0ZWdvcnkiOiJzdGFuZGFyZCIsInBhdGgiOiIvc2l0ZXMvaXNvb3JnL2NvbnRlbnRzL2RhdGEvc3RhbmRhcmQvMDcvODcvNzg3NDYiLCJ1dWlkIjoiZGNiYjQ3Y2EtZmU0Ny00ZTAyLWJjNWItNjRjNzUyMWFiNTQ1IiwidGl0bGUiOiJJU08vSUVDIDI3MDIxOjIwMTcvQW1kIDE6MjAyMSBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBTZWN1cml0eSB0ZWNobmlxdWVzIOKAlCBDb21wZXRlbmNlIHJlcXVpcmVtZW50cyBmb3IgaW5mb3JtYXRpb24gc2VjdXJpdHkgbWFuYWdlbWVudCBzeXN0ZW1zIHByb2Zlc3Npb25hbHMg4oCUIEFtZW5kbWVudCAxOiBBZGRpdGlvbiBvZiBJU08vSUVDIDI3MDAxOjIwMTMgY2xhdXNlcyBvciBzdWJjbGF1c2VzIHRvIGNvbXBldGVuY2UgcmVxdWlyZW1lbnRzIiwic3RhdHVzIjoiUHVibGlzaGVkIiwieWVhciI6MjAyMSwib3JkZXIiOjExLCJvYmplY3RJRCI6Ijc4NzQ2XzAiLCJfaGlnaGxpZ2h0UmVzdWx0Ijp7InRpdGxlIjp7InZhbHVlIjoiPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiAyNzAyMToyMDE3L0FtZCAxOjIwMjEgSW5mb3JtYXRpb24gdGVjaG5vbG9neSDigJQgU2VjdXJpdHkgdGVjaG5pcXVlcyDigJQgQ29tcGV0ZW5jZSByZXF1aXJlbWVudHMgZm9yIGluZm9ybWF0aW9uIHNlY3VyaXR5IG1hbmFnZW1lbnQgc3lzdGVtcyBwcm9mZXNzaW9uYWxzIOKAlCBBbWVuZG1lbnQgMTogQWRkaXRpb24gb2YgPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiA8ZW0+MjcwMDE8L2VtPjoyMDEzIGNsYXVzZXMgb3Igc3ViY2xhdXNlcyB0byBjb21wZXRlbmNlIHJlcXVpcmVtZW50cyIsIm1hdGNoTGV2ZWwiOiJmdWxsIiwiZnVsbHlIaWdobGlnaHRlZCI6ZmFsc2UsIm1hdGNoZWRXb3JkcyI6WyJpc28iLCJpZWMiLCIyNzAwMSJdfX19LHsiY2F0ZWdvcnkiOiJzdGFuZGFyZCIsInBhdGgiOiIvc2l0ZXMvaXNvb3JnL2NvbnRlbnRzL2RhdGEvc3RhbmRhcmQvMDcvNjUvNzY1NDIiLCJ1dWlkIjoiYTc3ZWIzNDAtMzg1OC00ZTMxLWI5NTEtNmYxYzUyZWFlNWI4IiwidGl0bGUiOiJJU08vSUVDIFRSIDIwMDAwLTc6MjAxOSBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBTZXJ2aWNlIG1hbmFnZW1lbnQg4oCUIFBhcnQgNzogR3VpZGFuY2Ugb24gdGhlIGludGVncmF0aW9uIGFuZCBjb3JyZWxhdGlvbiBvZiBJU08vSUVDIDIwMDAwLTE6MjAxOCB0byBJU08gOTAwMToyMDE1IGFuZCBJU08vSUVDIDI3MDAxOjIwMTMiLCJzdGF0dXMiOiJXaXRoZHJhd24iLCJ5ZWFyIjoyMDIyLCJvcmRlciI6MTAwLCJ0ZXh0IjoiVGhpcyBkb2N1bWVudCBwcm92aWRlcyBndWlkYW5jZSBvbiB0aGUgaW50ZWdyYXRlZCBpbXBsZW1lbnRhdGlvbiBvZiBhIHNlcnZpY2UgbWFuYWdlbWVudCBzeXN0ZW0gKFNNUykgYXMgc3BlY2lmaWVkIGluIElTTy9JRUMgMjAwMDAtMSB3aXRoIGEgcXVhbGl0eSBtYW5hZ2VtZW50IHN5c3RlbSAoUU1TKSBhcyBzcGVjaWZpZWQgaW4gSVNPIDkwMDEgYW5kIGFuIGluZm9ybWF0aW9uIHNlY3VyaXR5IG1hbmFnZW1lbnQgc3lzdGVtIChJU01TKSBhcyBzcGVjaWZpZWQgaW4gSVNPL0lFQyAyNzAwMS4gSXQgaXMgYWltZWQgYXQgdGhvc2Ugb3JnYW5pemF0aW9ucyB0aGF0IGFyZSBpbnRlbmRpbmcgdG8gZWl0aGVyOiBhKSAgICBpbXBsZW1lbnQgSVNPIDkwMDEgd2hlbiBJU08vSUVDIDIwMDAwLTEgaXMgYWxyZWFkeSBpbXBsZW1lbnRlZCwgb3IgdmljZSB2ZXJzYTsgYikgICAgaW1wbGVtZW50IElTTy9JRUMgMjcwMDEgd2hlbiBJU08vSUVDIDIwMDAwLTEgaXMgYWxyZWFkeSBpbXBsZW1lbnRlZCwgb3IgdmljZSB2ZXJzYTsgYykgICAgaW1wbGVtZW50IGJvdGggSVNPIDkwMDEgYW5kIElTTy9JRUMgMjAwMDAtMSB0b2dldGhlciwgb3IgaW1wbGVtZW50IGJvdGggSVNPL0lFQyAyNzAwMSBhbmQgSVNPL0lFQyAyMDAwMC0xIHRvZ2V0aGVyOyBkKSAgICBpbXBsZW1lbnQgSVNPL0lFQyAyMDAwMC0xLCBJU08gOTAwMSBhbmQgSVNPL0lFQyAyNzAwMSB0b2dldGhlcjsgb3IgZSkgICAgaW50ZWdyYXRlIGV4aXN0aW5nIG1hbmFnZW1lbnQgc3lzdGVtcyBiYXNlZCBvbiBJU08vSUVDIDIwMDAwLTEsIElTTyA5MDAxIGFuZCBJU08vSUVDIDI3MDAxLiBJbiBwcmFjdGljZSwgYW4gU01TLCBRTVMgb3IgSVNNUyBjYW4gYWxzbyBiZSBpbnRlZ3JhdGVkIHdpdGggb3RoZXIgbWFuYWdlbWVudCBzeXN0ZW0gc3RhbmRhcmRzIChNU1MpLCBzdWNoIGFzIElTTyAyMjMwMSBvciBJU08gNTUwMDEuIENsYXVzZSA0IHByb3ZpZGVzIGFuIGludHJvZHVjdGlvbiB0byBJU08vSUVDIDIwMDAwLTEsIHRoZSBITFMgb2YgTVNTIHNwZWNpZmllZCBpbiBJU08vSUVDIERpcmVjdGl2ZXMgUGFydCAxIGFuZCBjb25zaWRlcmF0aW9ucyBmb3IgdGhlIGludGVncmF0aW9uIG9mIGFuIE1TUy4gQ2xhdXNlIDUgcHJvdmlkZXMgYW4gaW50cm9kdWN0aW9uIHRvIElTTyA5MDAxLCBjb21tb25hbGl0aWVzIGFuZCBkaWZmZXJlbmNlcyB3aXRoIElTTy9JRUMgMjAwMDAtMSBhbmQgY29uc2lkZXJhdGlvbnMgZm9yIHRoZSBpbnRlZ3JhdGlvbiBvZiBhbiBTTVMgd2l0aCBhIFFNUy4gQ2xhdXNlIDYgcHJvdmlkZXMgYW4gaW50cm9kdWN0aW9uIHRvIElTTy9JRUMgMjcwMDEsIGNvbW1vbmFsaXRpZXMgYW5kIGRpZmZlcmVuY2VzIHdpdGggSVNPL0lFQyAyMDAwMC0xIGFuZCBjb25zaWRlcmF0aW9ucyBmb3IgdGhlIGludGVncmF0aW9uIG9mIGFuIFNNUyB3aXRoIGFuIElTTVMuIENsYXVzZSA3IGxvb2tzIGF0IGNvbnNpZGVyYXRpb25zIGZvciB0aGUgaW50ZWdyYXRpb24gb2YgYW4gU01TLCBhIFFNUywgYW5kIGFuIElTTVMuIFRoaXMgZG9jdW1lbnQgYWxzbyBwcm92aWRlcyBjb3JyZWxhdGlvbiBpbmZvcm1hdGlvbiBmb3IgdGhlIHRlcm1zIGFuZCBkZWZpbml0aW9ucyBvZiBJU08vSUVDIDIwMDAwLTEgd2l0aCBJU08gOTAwMSBhbmQgSVNPL0lFQyAyNzAwMSBpbiBBbm5leCBBLiBDb3JyZWxhdGlvbiBvZiB0aGUgY2xhdXNlcyBvZiBJU08vSUVDIDIwMDAwLTEgd2l0aCBJU08gOTAwMSBpcyBzaG93biBpbiBBbm5leCBCLiBDb3JyZWxhdGlvbiBvZiB0aGUgY2xhdXNlcyBvZiBJU08vSUVDIDIwMDAwLTEgd2l0aCBJU08vSUVDIDI3MDAxIGlzIHNob3duIGluIEFubmV4IEMuICIsIm9iamVjdElEIjoiNzY1NDJfMCIsIl9oaWdobGlnaHRSZXN1bHQiOnsidGl0bGUiOnsidmFsdWUiOiI8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IFRSIDIwMDAwLTc6MjAxOSBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBTZXJ2aWNlIG1hbmFnZW1lbnQg4oCUIFBhcnQgNzogR3VpZGFuY2Ugb24gdGhlIGludGVncmF0aW9uIGFuZCBjb3JyZWxhdGlvbiBvZiA8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDIwMDAwLTE6MjAxOCB0byA8ZW0+SVNPPC9lbT4gOTAwMToyMDE1IGFuZCA8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDxlbT4yNzAwMTwvZW0+OjIwMTMiLCJtYXRjaExldmVsIjoiZnVsbCIsImZ1bGx5SGlnaGxpZ2h0ZWQiOmZhbHNlLCJtYXRjaGVkV29yZHMiOlsiaXNvIiwiaWVjIiwiMjcwMDEiXX0sInRleHQiOnsidmFsdWUiOiJUaGlzIGRvY3VtZW50IHByb3ZpZGVzIGd1aWRhbmNlIG9uIHRoZSBpbnRlZ3JhdGVkIGltcGxlbWVudGF0aW9uIG9mIGEgc2VydmljZSBtYW5hZ2VtZW50IHN5c3RlbSAoU01TKSBhcyBzcGVjaWZpZWQgaW4gPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiAyMDAwMC0xIHdpdGggYSBxdWFsaXR5IG1hbmFnZW1lbnQgc3lzdGVtIChRTVMpIGFzIHNwZWNpZmllZCBpbiA8ZW0+SVNPPC9lbT4gOTAwMSBhbmQgYW4gaW5mb3JtYXRpb24gc2VjdXJpdHkgbWFuYWdlbWVudCBzeXN0ZW0gKElTTVMpIGFzIHNwZWNpZmllZCBpbiA8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDxlbT4yNzAwMTwvZW0+LiBJdCBpcyBhaW1lZCBhdCB0aG9zZSBvcmdhbml6YXRpb25zIHRoYXQgYXJlIGludGVuZGluZyB0byBlaXRoZXI6IGEpICAgIGltcGxlbWVudCA8ZW0+SVNPPC9lbT4gOTAwMSB3aGVuIDxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gMjAwMDAtMSBpcyBhbHJlYWR5IGltcGxlbWVudGVkLCBvciB2aWNlIHZlcnNhOyBiKSAgICBpbXBsZW1lbnQgPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiA8ZW0+MjcwMDE8L2VtPiB3aGVuIDxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gMjAwMDAtMSBpcyBhbHJlYWR5IGltcGxlbWVudGVkLCBvciB2aWNlIHZlcnNhOyBjKSAgICBpbXBsZW1lbnQgYm90aCA8ZW0+SVNPPC9lbT4gOTAwMSBhbmQgPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiAyMDAwMC0xIHRvZ2V0aGVyLCBvciBpbXBsZW1lbnQgYm90aCA8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDxlbT4yNzAwMTwvZW0+IGFuZCA8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDIwMDAwLTEgdG9nZXRoZXI7IGQpICAgIGltcGxlbWVudCA8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDIwMDAwLTEsIDxlbT5JU088L2VtPiA5MDAxIGFuZCA8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDxlbT4yNzAwMTwvZW0+IHRvZ2V0aGVyOyBvciBlKSAgICBpbnRlZ3JhdGUgZXhpc3RpbmcgbWFuYWdlbWVudCBzeXN0ZW1zIGJhc2VkIG9uIDxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gMjAwMDAtMSwgPGVtPklTTzwvZW0+IDkwMDEgYW5kIDxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gPGVtPjI3MDAxPC9lbT4uIEluIHByYWN0aWNlLCBhbiBTTVMsIFFNUyBvciBJU01TIGNhbiBhbHNvIGJlIGludGVncmF0ZWQgd2l0aCBvdGhlciBtYW5hZ2VtZW50IHN5c3RlbSBzdGFuZGFyZHMgKE1TUyksIHN1Y2ggYXMgPGVtPklTTzwvZW0+IDIyMzAxIG9yIDxlbT5JU088L2VtPiA1NTAwMS4gQ2xhdXNlIDQgcHJvdmlkZXMgYW4gaW50cm9kdWN0aW9uIHRvIDxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gMjAwMDAtMSwgdGhlIEhMUyBvZiBNU1Mgc3BlY2lmaWVkIGluIDxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gRGlyZWN0aXZlcyBQYXJ0IDEgYW5kIGNvbnNpZGVyYXRpb25zIGZvciB0aGUgaW50ZWdyYXRpb24gb2YgYW4gTVNTLiBDbGF1c2UgNSBwcm92aWRlcyBhbiBpbnRyb2R1Y3Rpb24gdG8gPGVtPklTTzwvZW0+IDkwMDEsIGNvbW1vbmFsaXRpZXMgYW5kIGRpZmZlcmVuY2VzIHdpdGggPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiAyMDAwMC0xIGFuZCBjb25zaWRlcmF0aW9ucyBmb3IgdGhlIGludGVncmF0aW9uIG9mIGFuIFNNUyB3aXRoIGEgUU1TLiBDbGF1c2UgNiBwcm92aWRlcyBhbiBpbnRyb2R1Y3Rpb24gdG8gPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiA8ZW0+MjcwMDE8L2VtPiwgY29tbW9uYWxpdGllcyBhbmQgZGlmZmVyZW5jZXMgd2l0aCA8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDIwMDAwLTEgYW5kIGNvbnNpZGVyYXRpb25zIGZvciB0aGUgaW50ZWdyYXRpb24gb2YgYW4gU01TIHdpdGggYW4gSVNNUy4gQ2xhdXNlIDcgbG9va3MgYXQgY29uc2lkZXJhdGlvbnMgZm9yIHRoZSBpbnRlZ3JhdGlvbiBvZiBhbiBTTVMsIGEgUU1TLCBhbmQgYW4gSVNNUy4gVGhpcyBkb2N1bWVudCBhbHNvIHByb3ZpZGVzIGNvcnJlbGF0aW9uIGluZm9ybWF0aW9uIGZvciB0aGUgdGVybXMgYW5kIGRlZmluaXRpb25zIG9mIDxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gMjAwMDAtMSB3aXRoIDxlbT5JU088L2VtPiA5MDAxIGFuZCA8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDxlbT4yNzAwMTwvZW0+IGluIEFubmV4IEEuIENvcnJlbGF0aW9uIG9mIHRoZSBjbGF1c2VzIG9mIDxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gMjAwMDAtMSB3aXRoIDxlbT5JU088L2VtPiA5MDAxIGlzIHNob3duIGluIEFubmV4IEIuIENvcnJlbGF0aW9uIG9mIHRoZSBjbGF1c2VzIG9mIDxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gMjAwMDAtMSB3aXRoIDxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gPGVtPjI3MDAxPC9lbT4gaXMgc2hvd24gaW4gQW5uZXggQy4gIiwibWF0Y2hMZXZlbCI6ImZ1bGwiLCJmdWxseUhpZ2hsaWdodGVkIjpmYWxzZSwibWF0Y2hlZFdvcmRzIjpbImlzbyIsImllYyIsIjI3MDAxIl19fX0seyJjYXRlZ29yeSI6InN0YW5kYXJkIiwicGF0aCI6Ii9zaXRlcy9pc29vcmcvY29udGVudHMvZGF0YS9zdGFuZGFyZC8wNi8zNC82MzQxNyIsInV1aWQiOiI1ZDM3NzA2Zi00MDE0LTQ3NzktYTRlZi0wZTE1ODNjYjBkMmQiLCJ0aXRsZSI6IklTTy9JRUMgMjcwMDM6MjAxNyBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBTZWN1cml0eSB0ZWNobmlxdWVzIOKAlCBJbmZvcm1hdGlvbiBzZWN1cml0eSBtYW5hZ2VtZW50IHN5c3RlbXMg4oCUIEd1aWRhbmNlIiwic3RhdHVzIjoiUHVibGlzaGVkIiwieWVhciI6MjAyMywib3JkZXIiOjExLCJ0ZXh0IjoiSVNPL0lFQyAyNzAwMzoyMDE3IHByb3ZpZGVzIGV4cGxhbmF0aW9uIGFuZCBndWlkYW5jZSBvbiBJU08vSUVDIDI3MDAxOjIwMTMuICIsIm9iamVjdElEIjoiNjM0MTdfMCIsIl9oaWdobGlnaHRSZXN1bHQiOnsidGl0bGUiOnsidmFsdWUiOiI8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDI3MDAzOjIwMTcgSW5mb3JtYXRpb24gdGVjaG5vbG9neSDigJQgU2VjdXJpdHkgdGVjaG5pcXVlcyDigJQgSW5mb3JtYXRpb24gc2VjdXJpdHkgbWFuYWdlbWVudCBzeXN0ZW1zIOKAlCBHdWlkYW5jZSIsIm1hdGNoTGV2ZWwiOiJwYXJ0aWFsIiwiZnVsbHlIaWdobGlnaHRlZCI6ZmFsc2UsIm1hdGNoZWRXb3JkcyI6WyJpc28iLCJpZWMiXX0sInRleHQiOnsidmFsdWUiOiI8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDI3MDAzOjIwMTcgcHJvdmlkZXMgZXhwbGFuYXRpb24gYW5kIGd1aWRhbmNlIG9uIDxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gPGVtPjI3MDAxPC9lbT46MjAxMy4gIiwibWF0Y2hMZXZlbCI6ImZ1bGwiLCJmdWxseUhpZ2hsaWdodGVkIjpmYWxzZSwibWF0Y2hlZFdvcmRzIjpbImlzbyIsImllYyIsIjI3MDAxIl19fX0seyJjYXRlZ29yeSI6InN0YW5kYXJkIiwicGF0aCI6Ii9zaXRlcy9pc29vcmcvY29udGVudHMvZGF0YS9zdGFuZGFyZC8wOC8wNS84MDU4NSIsInV1aWQiOiIxNjM3ZWI3Ny1hZmVkLTRmNGEtOTdkMi0yYzNiNmNiOTdlNjkiLCJ0aXRsZSI6IklTTy9JRUMgMjcwMDU6MjAyMiBJbmZvcm1hdGlvbiBzZWN1cml0eSwgY3liZXJzZWN1cml0eSBhbmQgcHJpdmFjeSBwcm90ZWN0aW9uIOKAlCBHdWlkYW5jZSBvbiBtYW5hZ2luZyBpbmZvcm1hdGlvbiBzZWN1cml0eSByaXNrcyIsInN0YXR1cyI6IlB1Ymxpc2hlZCIsInllYXIiOjIwMjIsIm9yZGVyIjoxMSwidGV4dCI6IlRoaXMgZG9jdW1lbnQgcHJvdmlkZXMgZ3VpZGFuY2UgdG8gYXNzaXN0IG9yZ2FuaXphdGlvbnMgdG86IOKAlMKgwqDCoCBmdWxmaWwgdGhlIHJlcXVpcmVtZW50cyBvZiBJU08vSUVDIDI3MDAxIGNvbmNlcm5pbmcgYWN0aW9ucyB0byBhZGRyZXNzIGluZm9ybWF0aW9uIHNlY3VyaXR5IHJpc2tzOyDigJTCoMKgwqAgcGVyZm9ybSBpbmZvcm1hdGlvbiBzZWN1cml0eSByaXNrIG1hbmFnZW1lbnQgYWN0aXZpdGllcywgc3BlY2lmaWNhbGx5IGluZm9ybWF0aW9uIHNlY3VyaXR5IHJpc2sgYXNzZXNzbWVudCBhbmQgdHJlYXRtZW50LiBUaGlzIGRvY3VtZW50IGlzIGFwcGxpY2FibGUgdG8gYWxsIG9yZ2FuaXphdGlvbnMsIHJlZ2FyZGxlc3Mgb2YgdHlwZSwgc2l6ZSBvciBzZWN0b3IuICIsIm9iamVjdElEIjoiODA1ODVfMCIsIl9oaWdobGlnaHRSZXN1bHQiOnsidGl0bGUiOnsidmFsdWUiOiI8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDI3MDA1OjIwMjIgSW5mb3JtYXRpb24gc2VjdXJpdHksIGN5YmVyc2VjdXJpdHkgYW5kIHByaXZhY3kgcHJvdGVjdGlvbiDigJQgR3VpZGFuY2Ugb24gbWFuYWdpbmcgaW5mb3JtYXRpb24gc2VjdXJpdHkgcmlza3MiLCJtYXRjaExldmVsIjoicGFydGlhbCIsImZ1bGx5SGlnaGxpZ2h0ZWQiOmZhbHNlLCJtYXRjaGVkV29yZHMiOlsiaXNvIiwiaWVjIl19LCJ0ZXh0Ijp7InZhbHVlIjoiVGhpcyBkb2N1bWVudCBwcm92aWRlcyBndWlkYW5jZSB0byBhc3Npc3Qgb3JnYW5pemF0aW9ucyB0bzog4oCUwqDCoMKgIGZ1bGZpbCB0aGUgcmVxdWlyZW1lbnRzIG9mIDxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gPGVtPjI3MDAxPC9lbT4gY29uY2VybmluZyBhY3Rpb25zIHRvIGFkZHJlc3MgaW5mb3JtYXRpb24gc2VjdXJpdHkgcmlza3M7IOKAlMKgwqDCoCBwZXJmb3JtIGluZm9ybWF0aW9uIHNlY3VyaXR5IHJpc2sgbWFuYWdlbWVudCBhY3Rpdml0aWVzLCBzcGVjaWZpY2FsbHkgaW5mb3JtYXRpb24gc2VjdXJpdHkgcmlzayBhc3Nlc3NtZW50IGFuZCB0cmVhdG1lbnQuIFRoaXMgZG9jdW1lbnQgaXMgYXBwbGljYWJsZSB0byBhbGwgb3JnYW5pemF0aW9ucywgcmVnYXJkbGVzcyBvZiB0eXBlLCBzaXplIG9yIHNlY3Rvci4gIiwibWF0Y2hMZXZlbCI6ImZ1bGwiLCJmdWxseUhpZ2hsaWdodGVkIjpmYWxzZSwibWF0Y2hlZFdvcmRzIjpbImlzbyIsImllYyIsIjI3MDAxIl19fX0seyJjYXRlZ29yeSI6InN0YW5kYXJkIiwicGF0aCI6Ii9zaXRlcy9pc29vcmcvY29udGVudHMvZGF0YS9zdGFuZGFyZC8wNy81Mi83NTI4MSIsInV1aWQiOiJlYTVlZjdhYS1jMzI1LTRkM2QtODRjYy1iNDA5NzVjMGY0OGIiLCJ0aXRsZSI6IklTTy9JRUMgMjcwMDU6MjAxOCBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBTZWN1cml0eSB0ZWNobmlxdWVzIOKAlCBJbmZvcm1hdGlvbiBzZWN1cml0eSByaXNrIG1hbmFnZW1lbnQiLCJzdGF0dXMiOiJXaXRoZHJhd24iLCJ5ZWFyIjoyMDIyLCJvcmRlciI6MTAwLCJ0ZXh0IjoiVGhpcyBkb2N1bWVudCBwcm92aWRlcyBndWlkZWxpbmVzIGZvciBpbmZvcm1hdGlvbiBzZWN1cml0eSByaXNrIG1hbmFnZW1lbnQuIFRoaXMgZG9jdW1lbnQgc3VwcG9ydHMgdGhlIGdlbmVyYWwgY29uY2VwdHMgc3BlY2lmaWVkIGluIElTTy9JRUMgMjcwMDEgYW5kIGlzIGRlc2lnbmVkIHRvIGFzc2lzdCB0aGUgc2F0aXNmYWN0b3J5IGltcGxlbWVudGF0aW9uIG9mIGluZm9ybWF0aW9uIHNlY3VyaXR5IGJhc2VkIG9uIGEgcmlzayBtYW5hZ2VtZW50IGFwcHJvYWNoLiBLbm93bGVkZ2Ugb2YgdGhlIGNvbmNlcHRzLCBtb2RlbHMsIHByb2Nlc3NlcyBhbmQgdGVybWlub2xvZ2llcyBkZXNjcmliZWQgaW4gSVNPL0lFQyAyNzAwMSBhbmQgSVNPL0lFQyAyNzAwMiBpcyBpbXBvcnRhbnQgZm9yIGEgY29tcGxldGUgdW5kZXJzdGFuZGluZyBvZiB0aGlzIGRvY3VtZW50LiBUaGlzIGRvY3VtZW50IGlzIGFwcGxpY2FibGUgdG8gYWxsIHR5cGVzIG9mIG9yZ2FuaXphdGlvbnMgKGUuZy4gY29tbWVyY2lhbCBlbnRlcnByaXNlcywgZ292ZXJubWVudCBhZ2VuY2llcywgbm9uLXByb2ZpdCBvcmdhbml6YXRpb25zKSB3aGljaCBpbnRlbmQgdG8gbWFuYWdlIHJpc2tzIHRoYXQgY2FuIGNvbXByb21pc2UgdGhlIG9yZ2FuaXphdGlvbidzIGluZm9ybWF0aW9uIHNlY3VyaXR5LiAiLCJvYmplY3RJRCI6Ijc1MjgxXzAiLCJfaGlnaGxpZ2h0UmVzdWx0Ijp7InRpdGxlIjp7InZhbHVlIjoiPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiAyNzAwNToyMDE4IEluZm9ybWF0aW9uIHRlY2hub2xvZ3kg4oCUIFNlY3VyaXR5IHRlY2huaXF1ZXMg4oCUIEluZm9ybWF0aW9uIHNlY3VyaXR5IHJpc2sgbWFuYWdlbWVudCIsIm1hdGNoTGV2ZWwiOiJwYXJ0aWFsIiwiZnVsbHlIaWdobGlnaHRlZCI6ZmFsc2UsIm1hdGNoZWRXb3JkcyI6WyJpc28iLCJpZWMiXX0sInRleHQiOnsidmFsdWUiOiJUaGlzIGRvY3VtZW50IHByb3ZpZGVzIGd1aWRlbGluZXMgZm9yIGluZm9ybWF0aW9uIHNlY3VyaXR5IHJpc2sgbWFuYWdlbWVudC4gVGhpcyBkb2N1bWVudCBzdXBwb3J0cyB0aGUgZ2VuZXJhbCBjb25jZXB0cyBzcGVjaWZpZWQgaW4gPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiA8ZW0+MjcwMDE8L2VtPiBhbmQgaXMgZGVzaWduZWQgdG8gYXNzaXN0IHRoZSBzYXRpc2ZhY3RvcnkgaW1wbGVtZW50YXRpb24gb2YgaW5mb3JtYXRpb24gc2VjdXJpdHkgYmFzZWQgb24gYSByaXNrIG1hbmFnZW1lbnQgYXBwcm9hY2guIEtub3dsZWRnZSBvZiB0aGUgY29uY2VwdHMsIG1vZGVscywgcHJvY2Vzc2VzIGFuZCB0ZXJtaW5vbG9naWVzIGRlc2NyaWJlZCBpbiA8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDxlbT4yNzAwMTwvZW0+IGFuZCA8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDI3MDAyIGlzIGltcG9ydGFudCBmb3IgYSBjb21wbGV0ZSB1bmRlcnN0YW5kaW5nIG9mIHRoaXMgZG9jdW1lbnQuIFRoaXMgZG9jdW1lbnQgaXMgYXBwbGljYWJsZSB0byBhbGwgdHlwZXMgb2Ygb3JnYW5pemF0aW9ucyAoZS5nLiBjb21tZXJjaWFsIGVudGVycHJpc2VzLCBnb3Zlcm5tZW50IGFnZW5jaWVzLCBub24tcHJvZml0IG9yZ2FuaXphdGlvbnMpIHdoaWNoIGludGVuZCB0byBtYW5hZ2Ugcmlza3MgdGhhdCBjYW4gY29tcHJvbWlzZSB0aGUgb3JnYW5pemF0aW9uJ3MgaW5mb3JtYXRpb24gc2VjdXJpdHkuICIsIm1hdGNoTGV2ZWwiOiJmdWxsIiwiZnVsbHlIaWdobGlnaHRlZCI6ZmFsc2UsIm1hdGNoZWRXb3JkcyI6WyJpc28iLCJpZWMiLCIyNzAwMSJdfX19LHsiY2F0ZWdvcnkiOiJzdGFuZGFyZCIsInBhdGgiOiIvc2l0ZXMvaXNvb3JnL2NvbnRlbnRzL2RhdGEvc3RhbmRhcmQvMDUvNjcvNTY3NDIiLCJ1dWlkIjoiMzQ2Zjk4YmQtNTlmZC00Y2E1LWFhOTEtNTVjYWE2M2JlYjExIiwidGl0bGUiOiJJU08vSUVDIDI3MDA1OjIwMTEgSW5mb3JtYXRpb24gdGVjaG5vbG9neSDigJQgU2VjdXJpdHkgdGVjaG5pcXVlcyDigJQgSW5mb3JtYXRpb24gc2VjdXJpdHkgcmlzayBtYW5hZ2VtZW50Iiwic3RhdHVzIjoiV2l0aGRyYXduIiwieWVhciI6MjAxOCwib3JkZXIiOjEwMCwidGV4dCI6IklTTy9JRUMgMjcwMDU6MjAxMSBwcm92aWRlcyBndWlkZWxpbmVzIGZvciBpbmZvcm1hdGlvbiBzZWN1cml0eSByaXNrIG1hbmFnZW1lbnQuIEl0IHN1cHBvcnRzIHRoZSBnZW5lcmFsIGNvbmNlcHRzIHNwZWNpZmllZCBpbiBJU08vSUVDIDI3MDAxIGFuZCBpcyBkZXNpZ25lZCB0byBhc3Npc3QgdGhlIHNhdGlzZmFjdG9yeSBpbXBsZW1lbnRhdGlvbiBvZiBpbmZvcm1hdGlvbiBzZWN1cml0eSBiYXNlZCBvbiBhIHJpc2sgbWFuYWdlbWVudCBhcHByb2FjaC4gS25vd2xlZGdlIG9mIHRoZSBjb25jZXB0cywgbW9kZWxzLCBwcm9jZXNzZXMgYW5kIHRlcm1pbm9sb2dpZXMgZGVzY3JpYmVkIGluIElTTy9JRUMgMjcwMDEgYW5kIElTTy9JRUMgMjcwMDIgaXMgaW1wb3J0YW50IGZvciBhIGNvbXBsZXRlIHVuZGVyc3RhbmRpbmcgb2YgSVNPL0lFQyAyNzAwNToyMDExLiBJU08vSUVDIDI3MDA1OjIwMTEgaXMgYXBwbGljYWJsZSB0byBhbGwgdHlwZXMgb2Ygb3JnYW5pemF0aW9ucyAoZS5nLiBjb21tZXJjaWFsIGVudGVycHJpc2VzLCBnb3Zlcm5tZW50IGFnZW5jaWVzLCBub24tcHJvZml0IG9yZ2FuaXphdGlvbnMpIHdoaWNoIGludGVuZCB0byBtYW5hZ2Ugcmlza3MgdGhhdCBjb3VsZCBjb21wcm9taXNlIHRoZSBvcmdhbml6YXRpb24ncyBpbmZvcm1hdGlvbiBzZWN1cml0eS4gIiwib2JqZWN0SUQiOiI1Njc0Ml8wIiwiX2hpZ2hsaWdodFJlc3VsdCI6eyJ0aXRsZSI6eyJ2YWx1ZSI6IjxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gMjcwMDU6MjAxMSBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBTZWN1cml0eSB0ZWNobmlxdWVzIOKAlCBJbmZvcm1hdGlvbiBzZWN1cml0eSByaXNrIG1hbmFnZW1lbnQiLCJtYXRjaExldmVsIjoicGFydGlhbCIsImZ1bGx5SGlnaGxpZ2h0ZWQiOmZhbHNlLCJtYXRjaGVkV29yZHMiOlsiaXNvIiwiaWVjIl19LCJ0ZXh0Ijp7InZhbHVlIjoiPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiAyNzAwNToyMDExIHByb3ZpZGVzIGd1aWRlbGluZXMgZm9yIGluZm9ybWF0aW9uIHNlY3VyaXR5IHJpc2sgbWFuYWdlbWVudC4gSXQgc3VwcG9ydHMgdGhlIGdlbmVyYWwgY29uY2VwdHMgc3BlY2lmaWVkIGluIDxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gPGVtPjI3MDAxPC9lbT4gYW5kIGlzIGRlc2lnbmVkIHRvIGFzc2lzdCB0aGUgc2F0aXNmYWN0b3J5IGltcGxlbWVudGF0aW9uIG9mIGluZm9ybWF0aW9uIHNlY3VyaXR5IGJhc2VkIG9uIGEgcmlzayBtYW5hZ2VtZW50IGFwcHJvYWNoLiBLbm93bGVkZ2Ugb2YgdGhlIGNvbmNlcHRzLCBtb2RlbHMsIHByb2Nlc3NlcyBhbmQgdGVybWlub2xvZ2llcyBkZXNjcmliZWQgaW4gPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiA8ZW0+MjcwMDE8L2VtPiBhbmQgPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiAyNzAwMiBpcyBpbXBvcnRhbnQgZm9yIGEgY29tcGxldGUgdW5kZXJzdGFuZGluZyBvZiA8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDI3MDA1OjIwMTEuIDxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gMjcwMDU6MjAxMSBpcyBhcHBsaWNhYmxlIHRvIGFsbCB0eXBlcyBvZiBvcmdhbml6YXRpb25zIChlLmcuIGNvbW1lcmNpYWwgZW50ZXJwcmlzZXMsIGdvdmVybm1lbnQgYWdlbmNpZXMsIG5vbi1wcm9maXQgb3JnYW5pemF0aW9ucykgd2hpY2ggaW50ZW5kIHRvIG1hbmFnZSByaXNrcyB0aGF0IGNvdWxkIGNvbXByb21pc2UgdGhlIG9yZ2FuaXphdGlvbidzIGluZm9ybWF0aW9uIHNlY3VyaXR5LiAiLCJtYXRjaExldmVsIjoiZnVsbCIsImZ1bGx5SGlnaGxpZ2h0ZWQiOmZhbHNlLCJtYXRjaGVkV29yZHMiOlsiaXNvIiwiaWVjIiwiMjcwMDEiXX19fSx7ImNhdGVnb3J5Ijoic3RhbmRhcmQiLCJwYXRoIjoiL3NpdGVzL2lzb29yZy9jb250ZW50cy9kYXRhL3N0YW5kYXJkLzA0LzIxLzQyMTA3IiwidXVpZCI6IjA3YjhmM2YxLWY4NmQtNDQzOS04MzdlLWY5MDcxNDMxNjVkYyIsInRpdGxlIjoiSVNPL0lFQyAyNzAwNToyMDA4IEluZm9ybWF0aW9uIHRlY2hub2xvZ3kg4oCUIFNlY3VyaXR5IHRlY2huaXF1ZXMg4oCUIEluZm9ybWF0aW9uIHNlY3VyaXR5IHJpc2sgbWFuYWdlbWVudCIsInN0YXR1cyI6IldpdGhkcmF3biIsInllYXIiOjIwMTEsIm9yZGVyIjoxMDAsInRleHQiOiJJU08vSUVDIDI3MDA1OjIwMDggcHJvdmlkZXMgZ3VpZGVsaW5lcyBmb3IgaW5mb3JtYXRpb24gc2VjdXJpdHkgcmlzayBtYW5hZ2VtZW50LiBJdCBzdXBwb3J0cyB0aGUgZ2VuZXJhbCBjb25jZXB0cyBzcGVjaWZpZWQgaW4gSVNPL0lFQyAyNzAwMSBhbmQgaXMgZGVzaWduZWQgdG8gYXNzaXN0IHRoZSBzYXRpc2ZhY3RvcnkgaW1wbGVtZW50YXRpb24gb2YgaW5mb3JtYXRpb24gc2VjdXJpdHkgYmFzZWQgb24gYSByaXNrIG1hbmFnZW1lbnQgYXBwcm9hY2guIEtub3dsZWRnZSBvZiB0aGUgY29uY2VwdHMsIG1vZGVscywgcHJvY2Vzc2VzIGFuZCB0ZXJtaW5vbG9naWVzIGRlc2NyaWJlZCBpbiBJU08vSUVDIDI3MDAxIGFuZCBJU08vSUVDIDI3MDAyIGlzIGltcG9ydGFudCBmb3IgYSBjb21wbGV0ZSB1bmRlcnN0YW5kaW5nIG9mIElTTy9JRUMgMjcwMDU6MjAwOC4gSVNPL0lFQyAyNzAwNToyMDA4IGlzIGFwcGxpY2FibGUgdG8gYWxsIHR5cGVzIG9mIG9yZ2FuaXphdGlvbnMgKGUuZy4gY29tbWVyY2lhbCBlbnRlcnByaXNlcywgZ292ZXJubWVudCBhZ2VuY2llcywgbm9uLXByb2ZpdCBvcmdhbml6YXRpb25zKSB3aGljaCBpbnRlbmQgdG8gbWFuYWdlIHJpc2tzIHRoYXQgY291bGQgY29tcHJvbWlzZSB0aGUgb3JnYW5pemF0aW9uJ3MgaW5mb3JtYXRpb24gc2VjdXJpdHkuICIsIm9iamVjdElEIjoiNDIxMDdfMCIsIl9oaWdobGlnaHRSZXN1bHQiOnsidGl0bGUiOnsidmFsdWUiOiI8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDI3MDA1OjIwMDggSW5mb3JtYXRpb24gdGVjaG5vbG9neSDigJQgU2VjdXJpdHkgdGVjaG5pcXVlcyDigJQgSW5mb3JtYXRpb24gc2VjdXJpdHkgcmlzayBtYW5hZ2VtZW50IiwibWF0Y2hMZXZlbCI6InBhcnRpYWwiLCJmdWxseUhpZ2hsaWdodGVkIjpmYWxzZSwibWF0Y2hlZFdvcmRzIjpbImlzbyIsImllYyJdfSwidGV4dCI6eyJ2YWx1ZSI6IjxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gMjcwMDU6MjAwOCBwcm92aWRlcyBndWlkZWxpbmVzIGZvciBpbmZvcm1hdGlvbiBzZWN1cml0eSByaXNrIG1hbmFnZW1lbnQuIEl0IHN1cHBvcnRzIHRoZSBnZW5lcmFsIGNvbmNlcHRzIHNwZWNpZmllZCBpbiA8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDxlbT4yNzAwMTwvZW0+IGFuZCBpcyBkZXNpZ25lZCB0byBhc3Npc3QgdGhlIHNhdGlzZmFjdG9yeSBpbXBsZW1lbnRhdGlvbiBvZiBpbmZvcm1hdGlvbiBzZWN1cml0eSBiYXNlZCBvbiBhIHJpc2sgbWFuYWdlbWVudCBhcHByb2FjaC4gS25vd2xlZGdlIG9mIHRoZSBjb25jZXB0cywgbW9kZWxzLCBwcm9jZXNzZXMgYW5kIHRlcm1pbm9sb2dpZXMgZGVzY3JpYmVkIGluIDxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gPGVtPjI3MDAxPC9lbT4gYW5kIDxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gMjcwMDIgaXMgaW1wb3J0YW50IGZvciBhIGNvbXBsZXRlIHVuZGVyc3RhbmRpbmcgb2YgPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiAyNzAwNToyMDA4LiA8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDI3MDA1OjIwMDggaXMgYXBwbGljYWJsZSB0byBhbGwgdHlwZXMgb2Ygb3JnYW5pemF0aW9ucyAoZS5nLiBjb21tZXJjaWFsIGVudGVycHJpc2VzLCBnb3Zlcm5tZW50IGFnZW5jaWVzLCBub24tcHJvZml0IG9yZ2FuaXphdGlvbnMpIHdoaWNoIGludGVuZCB0byBtYW5hZ2Ugcmlza3MgdGhhdCBjb3VsZCBjb21wcm9taXNlIHRoZSBvcmdhbml6YXRpb24ncyBpbmZvcm1hdGlvbiBzZWN1cml0eS4gIiwibWF0Y2hMZXZlbCI6ImZ1bGwiLCJmdWxseUhpZ2hsaWdodGVkIjpmYWxzZSwibWF0Y2hlZFdvcmRzIjpbImlzbyIsImllYyIsIjI3MDAxIl19fX0seyJjYXRlZ29yeSI6InN0YW5kYXJkIiwicGF0aCI6Ii9zaXRlcy9pc29vcmcvY29udGVudHMvZGF0YS9zdGFuZGFyZC8wNC8yMS80MjEwNSIsInV1aWQiOiI4Mjc1OTcyNy0xZjQzLTQ5NWQtYmNhOC1kY2FiZWRhMDA5ZDUiLCJ0aXRsZSI6IklTTy9JRUMgMjcwMDM6MjAxMCBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBTZWN1cml0eSB0ZWNobmlxdWVzIOKAlCBJbmZvcm1hdGlvbiBzZWN1cml0eSBtYW5hZ2VtZW50IHN5c3RlbSBpbXBsZW1lbnRhdGlvbiBndWlkYW5jZSIsInN0YXR1cyI6IldpdGhkcmF3biIsInllYXIiOjIwMTcsIm9yZGVyIjoxMDAsInRleHQiOiJJU08vSUVDIDI3MDAzOjIwMTAgZm9jdXNlcyBvbiB0aGUgY3JpdGljYWwgYXNwZWN0cyBuZWVkZWQgZm9yIHN1Y2Nlc3NmdWwgZGVzaWduIGFuZCBpbXBsZW1lbnRhdGlvbiBvZiBhbiBJbmZvcm1hdGlvbiBTZWN1cml0eSBNYW5hZ2VtZW50IFN5c3RlbSAoSVNNUykgaW4gYWNjb3JkYW5jZSB3aXRoIElTTy9JRUMgMjcwMDE6MjAwNS4gSXQgZGVzY3JpYmVzIHRoZSBwcm9jZXNzIG9mIElTTVMgc3BlY2lmaWNhdGlvbiBhbmQgZGVzaWduIGZyb20gaW5jZXB0aW9uIHRvIHRoZSBwcm9kdWN0aW9uIG9mIGltcGxlbWVudGF0aW9uIHBsYW5zLiBJdCBkZXNjcmliZXMgdGhlIHByb2Nlc3Mgb2Ygb2J0YWluaW5nIG1hbmFnZW1lbnQgYXBwcm92YWwgdG8gaW1wbGVtZW50IGFuIElTTVMsIGRlZmluZXMgYSBwcm9qZWN0IHRvIGltcGxlbWVudCBhbiBJU01TIChyZWZlcnJlZCB0byBpbiBJU08vSUVDIDI3MDAzOjIwMTAgYXMgdGhlIElTTVMgcHJvamVjdCksIGFuZCBwcm92aWRlcyBndWlkYW5jZSBvbiBob3cgdG8gcGxhbiB0aGUgSVNNUyBwcm9qZWN0LCByZXN1bHRpbmcgaW4gYSBmaW5hbCBJU01TIHByb2plY3QgaW1wbGVtZW50YXRpb24gcGxhbi4gIiwib2JqZWN0SUQiOiI0MjEwNV8wIiwiX2hpZ2hsaWdodFJlc3VsdCI6eyJ0aXRsZSI6eyJ2YWx1ZSI6IjxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gMjcwMDM6MjAxMCBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBTZWN1cml0eSB0ZWNobmlxdWVzIOKAlCBJbmZvcm1hdGlvbiBzZWN1cml0eSBtYW5hZ2VtZW50IHN5c3RlbSBpbXBsZW1lbnRhdGlvbiBndWlkYW5jZSIsIm1hdGNoTGV2ZWwiOiJwYXJ0aWFsIiwiZnVsbHlIaWdobGlnaHRlZCI6ZmFsc2UsIm1hdGNoZWRXb3JkcyI6WyJpc28iLCJpZWMiXX0sInRleHQiOnsidmFsdWUiOiI8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDI3MDAzOjIwMTAgZm9jdXNlcyBvbiB0aGUgY3JpdGljYWwgYXNwZWN0cyBuZWVkZWQgZm9yIHN1Y2Nlc3NmdWwgZGVzaWduIGFuZCBpbXBsZW1lbnRhdGlvbiBvZiBhbiBJbmZvcm1hdGlvbiBTZWN1cml0eSBNYW5hZ2VtZW50IFN5c3RlbSAoSVNNUykgaW4gYWNjb3JkYW5jZSB3aXRoIDxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gPGVtPjI3MDAxPC9lbT46MjAwNS4gSXQgZGVzY3JpYmVzIHRoZSBwcm9jZXNzIG9mIElTTVMgc3BlY2lmaWNhdGlvbiBhbmQgZGVzaWduIGZyb20gaW5jZXB0aW9uIHRvIHRoZSBwcm9kdWN0aW9uIG9mIGltcGxlbWVudGF0aW9uIHBsYW5zLiBJdCBkZXNjcmliZXMgdGhlIHByb2Nlc3Mgb2Ygb2J0YWluaW5nIG1hbmFnZW1lbnQgYXBwcm92YWwgdG8gaW1wbGVtZW50IGFuIElTTVMsIGRlZmluZXMgYSBwcm9qZWN0IHRvIGltcGxlbWVudCBhbiBJU01TIChyZWZlcnJlZCB0byBpbiA8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDI3MDAzOjIwMTAgYXMgdGhlIElTTVMgcHJvamVjdCksIGFuZCBwcm92aWRlcyBndWlkYW5jZSBvbiBob3cgdG8gcGxhbiB0aGUgSVNNUyBwcm9qZWN0LCByZXN1bHRpbmcgaW4gYSBmaW5hbCBJU01TIHByb2plY3QgaW1wbGVtZW50YXRpb24gcGxhbi4gIiwibWF0Y2hMZXZlbCI6ImZ1bGwiLCJmdWxseUhpZ2hsaWdodGVkIjpmYWxzZSwibWF0Y2hlZFdvcmRzIjpbImlzbyIsImllYyIsIjI3MDAxIl19fX0seyJjYXRlZ29yeSI6InN0YW5kYXJkIiwicGF0aCI6Ii9zaXRlcy9pc29vcmcvY29udGVudHMvZGF0YS9zdGFuZGFyZC8wNy8xNi83MTY3NiIsInV1aWQiOiI3YWVmMjY3NC0wOGRmLTRhYTItYTk3Zi1jZDNlY2E2Y2RlNjMiLCJ0aXRsZSI6IklTTy9JRUMgVFMgMjcwMDYtMjoyMDIxIFJlcXVpcmVtZW50cyBmb3IgYm9kaWVzIHByb3ZpZGluZyBhdWRpdCBhbmQgY2VydGlmaWNhdGlvbiBvZiBpbmZvcm1hdGlvbiBzZWN1cml0eSBtYW5hZ2VtZW50IHN5c3RlbXMg4oCUIFBhcnQgMjogUHJpdmFjeSBpbmZvcm1hdGlvbiBtYW5hZ2VtZW50IHN5c3RlbXMiLCJzdGF0dXMiOiJQdWJsaXNoZWQiLCJ5ZWFyIjoyMDIxLCJvcmRlciI6MTEsInRleHQiOiJUaGlzIGRvY3VtZW50IHNwZWNpZmllcyByZXF1aXJlbWVudHMgYW5kIHByb3ZpZGVzIGd1aWRhbmNlIGZvciBib2RpZXMgcHJvdmlkaW5nIGF1ZGl0IGFuZCBjZXJ0aWZpY2F0aW9uIG9mIGEgcHJpdmFjeSBpbmZvcm1hdGlvbiBtYW5hZ2VtZW50IHN5c3RlbSAoUElNUykgYWNjb3JkaW5nIHRvIElTTy9JRUMgMjc3MDEgaW4gY29tYmluYXRpb24gd2l0aCBJU08vSUVDIDI3MDAxLCBpbiBhZGRpdGlvbiB0byB0aGUgcmVxdWlyZW1lbnRzIGNvbnRhaW5lZCB3aXRoaW4gSVNPL0lFQyAyNzAwNiBhbmQgSVNPL0lFQyAyNzcwMS4gSXQgaXMgcHJpbWFyaWx5IGludGVuZGVkIHRvIHN1cHBvcnQgdGhlIGFjY3JlZGl0YXRpb24gb2YgY2VydGlmaWNhdGlvbiBib2RpZXMgcHJvdmlkaW5nIFBJTVMgY2VydGlmaWNhdGlvbi4gVGhlIHJlcXVpcmVtZW50cyBjb250YWluZWQgaW4gdGhpcyBkb2N1bWVudCBuZWVkIHRvIGJlIGRlbW9uc3RyYXRlZCBpbiB0ZXJtcyBvZiBjb21wZXRlbmNlIGFuZCByZWxpYWJpbGl0eSBieSBhbnlib2R5IHByb3ZpZGluZyBQSU1TIGNlcnRpZmljYXRpb24sIGFuZCB0aGUgZ3VpZGFuY2UgY29udGFpbmVkIGluIHRoaXMgZG9jdW1lbnQgcHJvdmlkZXMgYWRkaXRpb25hbCBpbnRlcnByZXRhdGlvbiBvZiB0aGVzZSByZXF1aXJlbWVudHMgZm9yIGFueSBib2R5IHByb3ZpZGluZyBQSU1TIGNlcnRpZmljYXRpb24uIE5PVEUgICAgIFRoaXMgZG9jdW1lbnQgY2FuIGJlIHVzZWQgYXMgYSBjcml0ZXJpYSBkb2N1bWVudCBmb3IgYWNjcmVkaXRhdGlvbiwgcGVlciBhc3Nlc3NtZW50IG9yIG90aGVyIGF1ZGl0IHByb2Nlc3Nlcy4gIiwib2JqZWN0SUQiOiI3MTY3Nl8wIiwiX2hpZ2hsaWdodFJlc3VsdCI6eyJ0aXRsZSI6eyJ2YWx1ZSI6IjxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gVFMgMjcwMDYtMjoyMDIxIFJlcXVpcmVtZW50cyBmb3IgYm9kaWVzIHByb3ZpZGluZyBhdWRpdCBhbmQgY2VydGlmaWNhdGlvbiBvZiBpbmZvcm1hdGlvbiBzZWN1cml0eSBtYW5hZ2VtZW50IHN5c3RlbXMg4oCUIFBhcnQgMjogUHJpdmFjeSBpbmZvcm1hdGlvbiBtYW5hZ2VtZW50IHN5c3RlbXMiLCJtYXRjaExldmVsIjoicGFydGlhbCIsImZ1bGx5SGlnaGxpZ2h0ZWQiOmZhbHNlLCJtYXRjaGVkV29yZHMiOlsiaXNvIiwiaWVjIl19LCJ0ZXh0Ijp7InZhbHVlIjoiVGhpcyBkb2N1bWVudCBzcGVjaWZpZXMgcmVxdWlyZW1lbnRzIGFuZCBwcm92aWRlcyBndWlkYW5jZSBmb3IgYm9kaWVzIHByb3ZpZGluZyBhdWRpdCBhbmQgY2VydGlmaWNhdGlvbiBvZiBhIHByaXZhY3kgaW5mb3JtYXRpb24gbWFuYWdlbWVudCBzeXN0ZW0gKFBJTVMpIGFjY29yZGluZyB0byA8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDI3NzAxIGluIGNvbWJpbmF0aW9uIHdpdGggPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiA8ZW0+MjcwMDE8L2VtPiwgaW4gYWRkaXRpb24gdG8gdGhlIHJlcXVpcmVtZW50cyBjb250YWluZWQgd2l0aGluIDxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gMjcwMDYgYW5kIDxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gMjc3MDEuIEl0IGlzIHByaW1hcmlseSBpbnRlbmRlZCB0byBzdXBwb3J0IHRoZSBhY2NyZWRpdGF0aW9uIG9mIGNlcnRpZmljYXRpb24gYm9kaWVzIHByb3ZpZGluZyBQSU1TIGNlcnRpZmljYXRpb24uIFRoZSByZXF1aXJlbWVudHMgY29udGFpbmVkIGluIHRoaXMgZG9jdW1lbnQgbmVlZCB0byBiZSBkZW1vbnN0cmF0ZWQgaW4gdGVybXMgb2YgY29tcGV0ZW5jZSBhbmQgcmVsaWFiaWxpdHkgYnkgYW55Ym9keSBwcm92aWRpbmcgUElNUyBjZXJ0aWZpY2F0aW9uLCBhbmQgdGhlIGd1aWRhbmNlIGNvbnRhaW5lZCBpbiB0aGlzIGRvY3VtZW50IHByb3ZpZGVzIGFkZGl0aW9uYWwgaW50ZXJwcmV0YXRpb24gb2YgdGhlc2UgcmVxdWlyZW1lbnRzIGZvciBhbnkgYm9keSBwcm92aWRpbmcgUElNUyBjZXJ0aWZpY2F0aW9uLiBOT1RFICAgICBUaGlzIGRvY3VtZW50IGNhbiBiZSB1c2VkIGFzIGEgY3JpdGVyaWEgZG9jdW1lbnQgZm9yIGFjY3JlZGl0YXRpb24sIHBlZXIgYXNzZXNzbWVudCBvciBvdGhlciBhdWRpdCBwcm9jZXNzZXMuICIsIm1hdGNoTGV2ZWwiOiJmdWxsIiwiZnVsbHlIaWdobGlnaHRlZCI6ZmFsc2UsIm1hdGNoZWRXb3JkcyI6WyJpc28iLCJpZWMiLCIyNzAwMSJdfX19LHsiY2F0ZWdvcnkiOiJzdGFuZGFyZCIsInBhdGgiOiIvc2l0ZXMvaXNvb3JnL2NvbnRlbnRzL2RhdGEvc3RhbmRhcmQvMDgvMjgvODI4OTQiLCJ1dWlkIjoiNTY5YTU2YjktN2FiZi00MWFkLTg3NDctMTQ5OGI2MzA5OWFlIiwidGl0bGUiOiJJU08vSUVDIERJUyAyNzAwNi0yIFJlcXVpcmVtZW50cyBmb3IgYm9kaWVzIHByb3ZpZGluZyBhdWRpdCBhbmQgY2VydGlmaWNhdGlvbiBvZiBpbmZvcm1hdGlvbiBzZWN1cml0eSBtYW5hZ2VtZW50IHN5c3RlbXMg4oCUIFBhcnQgMjogUHJpdmFjeSBpbmZvcm1hdGlvbiBtYW5hZ2VtZW50IHN5c3RlbXMiLCJzdGF0dXMiOiJVbmRlciBkZXZlbG9wbWVudCIsInllYXIiOjIwMjMsIm9yZGVyIjoxMiwidGV4dCI6IlRoaXMgZG9jdW1lbnQgc3BlY2lmaWVzIHJlcXVpcmVtZW50cyBhbmQgcHJvdmlkZXMgZ3VpZGFuY2UgZm9yIGJvZGllcyBwcm92aWRpbmcgYXVkaXQgYW5kIGNlcnRpZmljYXRpb24gb2YgYSBwcml2YWN5IGluZm9ybWF0aW9uIG1hbmFnZW1lbnQgc3lzdGVtIChQSU1TKSBhY2NvcmRpbmcgdG8gSVNPL0lFQyAyNzcwMSBpbiBjb21iaW5hdGlvbiB3aXRoIElTTy9JRUMgMjcwMDEsIGluIGFkZGl0aW9uIHRvIHRoZSByZXF1aXJlbWVudHMgY29udGFpbmVkIHdpdGhpbiBJU08vSUVDIDI3MDA2LiBJdCBpcyBwcmltYXJpbHkgaW50ZW5kZWQgdG8gc3VwcG9ydCB0aGUgYWNjcmVkaXRhdGlvbiBvZiBjZXJ0aWZpY2F0aW9uIGJvZGllcyBwcm92aWRpbmcgUElNUyBjZXJ0aWZpY2F0aW9uLiBUaGUgcmVxdWlyZW1lbnRzIGNvbnRhaW5lZCBpbiB0aGlzIGRvY3VtZW50IG5lZWQgdG8gYmUgZGVtb25zdHJhdGVkIGluIHRlcm1zIG9mIGNvbXBldGVuY2UgYW5kIHJlbGlhYmlsaXR5IGJ5IGFueSBib2R5IHByb3ZpZGluZyBQSU1TIGNlcnRpZmljYXRpb24sIGFuZCB0aGUgZ3VpZGFuY2UgY29udGFpbmVkIGluIHRoaXMgZG9jdW1lbnQgcHJvdmlkZXMgYWRkaXRpb25hbCBpbnRlcnByZXRhdGlvbiBvZiB0aGVzZSByZXF1aXJlbWVudHMgZm9yIGFueSBib2R5IHByb3ZpZGluZyBQSU1TIGNlcnRpZmljYXRpb24uIE5PVEUgVGhpcyBkb2N1bWVudCBjYW4gYmUgdXNlZCBhcyBhIGNyaXRlcmlhIGRvY3VtZW50IGZvciBhY2NyZWRpdGF0aW9uLCBwZWVyIGFzc2Vzc21lbnQgb3Igb3RoZXIgYXVkaXQgcHJvY2Vzc2VzLiAiLCJvYmplY3RJRCI6IjgyODk0XzAiLCJfaGlnaGxpZ2h0UmVzdWx0Ijp7InRpdGxlIjp7InZhbHVlIjoiPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiBESVMgMjcwMDYtMiBSZXF1aXJlbWVudHMgZm9yIGJvZGllcyBwcm92aWRpbmcgYXVkaXQgYW5kIGNlcnRpZmljYXRpb24gb2YgaW5mb3JtYXRpb24gc2VjdXJpdHkgbWFuYWdlbWVudCBzeXN0ZW1zIOKAlCBQYXJ0IDI6IFByaXZhY3kgaW5mb3JtYXRpb24gbWFuYWdlbWVudCBzeXN0ZW1zIiwibWF0Y2hMZXZlbCI6InBhcnRpYWwiLCJmdWxseUhpZ2hsaWdodGVkIjpmYWxzZSwibWF0Y2hlZFdvcmRzIjpbImlzbyIsImllYyJdfSwidGV4dCI6eyJ2YWx1ZSI6IlRoaXMgZG9jdW1lbnQgc3BlY2lmaWVzIHJlcXVpcmVtZW50cyBhbmQgcHJvdmlkZXMgZ3VpZGFuY2UgZm9yIGJvZGllcyBwcm92aWRpbmcgYXVkaXQgYW5kIGNlcnRpZmljYXRpb24gb2YgYSBwcml2YWN5IGluZm9ybWF0aW9uIG1hbmFnZW1lbnQgc3lzdGVtIChQSU1TKSBhY2NvcmRpbmcgdG8gPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiAyNzcwMSBpbiBjb21iaW5hdGlvbiB3aXRoIDxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gPGVtPjI3MDAxPC9lbT4sIGluIGFkZGl0aW9uIHRvIHRoZSByZXF1aXJlbWVudHMgY29udGFpbmVkIHdpdGhpbiA8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDI3MDA2LiBJdCBpcyBwcmltYXJpbHkgaW50ZW5kZWQgdG8gc3VwcG9ydCB0aGUgYWNjcmVkaXRhdGlvbiBvZiBjZXJ0aWZpY2F0aW9uIGJvZGllcyBwcm92aWRpbmcgUElNUyBjZXJ0aWZpY2F0aW9uLiBUaGUgcmVxdWlyZW1lbnRzIGNvbnRhaW5lZCBpbiB0aGlzIGRvY3VtZW50IG5lZWQgdG8gYmUgZGVtb25zdHJhdGVkIGluIHRlcm1zIG9mIGNvbXBldGVuY2UgYW5kIHJlbGlhYmlsaXR5IGJ5IGFueSBib2R5IHByb3ZpZGluZyBQSU1TIGNlcnRpZmljYXRpb24sIGFuZCB0aGUgZ3VpZGFuY2UgY29udGFpbmVkIGluIHRoaXMgZG9jdW1lbnQgcHJvdmlkZXMgYWRkaXRpb25hbCBpbnRlcnByZXRhdGlvbiBvZiB0aGVzZSByZXF1aXJlbWVudHMgZm9yIGFueSBib2R5IHByb3ZpZGluZyBQSU1TIGNlcnRpZmljYXRpb24uIE5PVEUgVGhpcyBkb2N1bWVudCBjYW4gYmUgdXNlZCBhcyBhIGNyaXRlcmlhIGRvY3VtZW50IGZvciBhY2NyZWRpdGF0aW9uLCBwZWVyIGFzc2Vzc21lbnQgb3Igb3RoZXIgYXVkaXQgcHJvY2Vzc2VzLiAiLCJtYXRjaExldmVsIjoiZnVsbCIsImZ1bGx5SGlnaGxpZ2h0ZWQiOmZhbHNlLCJtYXRjaGVkV29yZHMiOlsiaXNvIiwiaWVjIiwiMjcwMDEiXX19fSx7ImNhdGVnb3J5Ijoic3RhbmRhcmQiLCJwYXRoIjoiL3NpdGVzL2lzb29yZy9jb250ZW50cy9kYXRhL3N0YW5kYXJkLzA2LzQxLzY0MTIwIiwidXVpZCI6ImJkMTQ1MjZhLTQzOWEtNDQyYy1iZWYxLTkzNTQ5MDVlYWM3YiIsInRpdGxlIjoiSVNPL0lFQyAyNzAwNDoyMDE2IEluZm9ybWF0aW9uIHRlY2hub2xvZ3kg4oCUIFNlY3VyaXR5IHRlY2huaXF1ZXMg4oCUIEluZm9ybWF0aW9uIHNlY3VyaXR5IG1hbmFnZW1lbnQg4oCUIE1vbml0b3JpbmcsIG1lYXN1cmVtZW50LCBhbmFseXNpcyBhbmQgZXZhbHVhdGlvbiIsInN0YXR1cyI6IlB1Ymxpc2hlZCIsInllYXIiOjIwMjIsIm9yZGVyIjoxMSwidGV4dCI6IklTTy9JRUMgMjcwMDQ6MjAxNiBwcm92aWRlcyBndWlkZWxpbmVzIGludGVuZGVkIHRvIGFzc2lzdCBvcmdhbml6YXRpb25zIGluIGV2YWx1YXRpbmcgdGhlIGluZm9ybWF0aW9uIHNlY3VyaXR5IHBlcmZvcm1hbmNlIGFuZCB0aGUgZWZmZWN0aXZlbmVzcyBvZiBhbiBpbmZvcm1hdGlvbiBzZWN1cml0eSBtYW5hZ2VtZW50IHN5c3RlbSBpbiBvcmRlciB0byBmdWxmaWwgdGhlIHJlcXVpcmVtZW50cyBvZiBJU08vSUVDIDI3MDAxOjIwMTMsIDkuMS4gSXQgZXN0YWJsaXNoZXM6IGEpICAgIHRoZSBtb25pdG9yaW5nIGFuZCBtZWFzdXJlbWVudCBvZiBpbmZvcm1hdGlvbiBzZWN1cml0eSBwZXJmb3JtYW5jZTsgYikgICAgdGhlIG1vbml0b3JpbmcgYW5kIG1lYXN1cmVtZW50IG9mIHRoZSBlZmZlY3RpdmVuZXNzIG9mIGFuIGluZm9ybWF0aW9uIHNlY3VyaXR5IG1hbmFnZW1lbnQgc3lzdGVtIChJU01TKSBpbmNsdWRpbmcgaXRzIHByb2Nlc3NlcyBhbmQgY29udHJvbHM7IGMpICAgIHRoZSBhbmFseXNpcyBhbmQgZXZhbHVhdGlvbiBvZiB0aGUgcmVzdWx0cyBvZiBtb25pdG9yaW5nIGFuZCBtZWFzdXJlbWVudC4gSVNPL0lFQyAyNzAwNDoyMDE2IGlzIGFwcGxpY2FibGUgdG8gYWxsIHR5cGVzIGFuZCBzaXplcyBvZiBvcmdhbml6YXRpb25zLiAiLCJvYmplY3RJRCI6IjY0MTIwXzAiLCJfaGlnaGxpZ2h0UmVzdWx0Ijp7InRpdGxlIjp7InZhbHVlIjoiPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiAyNzAwNDoyMDE2IEluZm9ybWF0aW9uIHRlY2hub2xvZ3kg4oCUIFNlY3VyaXR5IHRlY2huaXF1ZXMg4oCUIEluZm9ybWF0aW9uIHNlY3VyaXR5IG1hbmFnZW1lbnQg4oCUIE1vbml0b3JpbmcsIG1lYXN1cmVtZW50LCBhbmFseXNpcyBhbmQgZXZhbHVhdGlvbiIsIm1hdGNoTGV2ZWwiOiJwYXJ0aWFsIiwiZnVsbHlIaWdobGlnaHRlZCI6ZmFsc2UsIm1hdGNoZWRXb3JkcyI6WyJpc28iLCJpZWMiXX0sInRleHQiOnsidmFsdWUiOiI8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDI3MDA0OjIwMTYgcHJvdmlkZXMgZ3VpZGVsaW5lcyBpbnRlbmRlZCB0byBhc3Npc3Qgb3JnYW5pemF0aW9ucyBpbiBldmFsdWF0aW5nIHRoZSBpbmZvcm1hdGlvbiBzZWN1cml0eSBwZXJmb3JtYW5jZSBhbmQgdGhlIGVmZmVjdGl2ZW5lc3Mgb2YgYW4gaW5mb3JtYXRpb24gc2VjdXJpdHkgbWFuYWdlbWVudCBzeXN0ZW0gaW4gb3JkZXIgdG8gZnVsZmlsIHRoZSByZXF1aXJlbWVudHMgb2YgPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiA8ZW0+MjcwMDE8L2VtPjoyMDEzLCA5LjEuIEl0IGVzdGFibGlzaGVzOiBhKSAgICB0aGUgbW9uaXRvcmluZyBhbmQgbWVhc3VyZW1lbnQgb2YgaW5mb3JtYXRpb24gc2VjdXJpdHkgcGVyZm9ybWFuY2U7IGIpICAgIHRoZSBtb25pdG9yaW5nIGFuZCBtZWFzdXJlbWVudCBvZiB0aGUgZWZmZWN0aXZlbmVzcyBvZiBhbiBpbmZvcm1hdGlvbiBzZWN1cml0eSBtYW5hZ2VtZW50IHN5c3RlbSAoSVNNUykgaW5jbHVkaW5nIGl0cyBwcm9jZXNzZXMgYW5kIGNvbnRyb2xzOyBjKSAgICB0aGUgYW5hbHlzaXMgYW5kIGV2YWx1YXRpb24gb2YgdGhlIHJlc3VsdHMgb2YgbW9uaXRvcmluZyBhbmQgbWVhc3VyZW1lbnQuIDxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gMjcwMDQ6MjAxNiBpcyBhcHBsaWNhYmxlIHRvIGFsbCB0eXBlcyBhbmQgc2l6ZXMgb2Ygb3JnYW5pemF0aW9ucy4gIiwibWF0Y2hMZXZlbCI6ImZ1bGwiLCJmdWxseUhpZ2hsaWdodGVkIjpmYWxzZSwibWF0Y2hlZFdvcmRzIjpbImlzbyIsImllYyIsIjI3MDAxIl19fX0seyJjYXRlZ29yeSI6InN0YW5kYXJkIiwicGF0aCI6Ii9zaXRlcy9pc29vcmcvY29udGVudHMvZGF0YS9zdGFuZGFyZC8wNi8xMC82MTAwMyIsInV1aWQiOiI1MjUzM2Q5MC00YWY4LTRkMmItODZjOC1jNDIxZWI5OWQxODkiLCJ0aXRsZSI6IklTTy9JRUMgMjcwMjE6MjAxNyBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBTZWN1cml0eSB0ZWNobmlxdWVzIOKAlCBDb21wZXRlbmNlIHJlcXVpcmVtZW50cyBmb3IgaW5mb3JtYXRpb24gc2VjdXJpdHkgbWFuYWdlbWVudCBzeXN0ZW1zIHByb2Zlc3Npb25hbHMiLCJzdGF0dXMiOiJQdWJsaXNoZWQiLCJ5ZWFyIjoyMDIzLCJvcmRlciI6MTEsInRleHQiOiJJU08vSUVDIDI3MDIxOjIwMTcgc3BlY2lmaWVzIHRoZSByZXF1aXJlbWVudHMgb2YgY29tcGV0ZW5jZSBmb3IgSVNNUyBwcm9mZXNzaW9uYWxzIGxlYWRpbmcgb3IgaW52b2x2ZWQgaW4gZXN0YWJsaXNoaW5nLCBpbXBsZW1lbnRpbmcsIG1haW50YWluaW5nIGFuZCBjb250aW51YWxseSBpbXByb3Zpbmcgb25lIG9yIG1vcmUgaW5mb3JtYXRpb24gc2VjdXJpdHkgbWFuYWdlbWVudCBzeXN0ZW0gcHJvY2Vzc2VzIHRoYXQgY29uZm9ybXMgdG8gSVNPL0lFQyAyNzAwMS4gIiwib2JqZWN0SUQiOiI2MTAwM18wIiwiX2hpZ2hsaWdodFJlc3VsdCI6eyJ0aXRsZSI6eyJ2YWx1ZSI6IjxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gMjcwMjE6MjAxNyBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBTZWN1cml0eSB0ZWNobmlxdWVzIOKAlCBDb21wZXRlbmNlIHJlcXVpcmVtZW50cyBmb3IgaW5mb3JtYXRpb24gc2VjdXJpdHkgbWFuYWdlbWVudCBzeXN0ZW1zIHByb2Zlc3Npb25hbHMiLCJtYXRjaExldmVsIjoicGFydGlhbCIsImZ1bGx5SGlnaGxpZ2h0ZWQiOmZhbHNlLCJtYXRjaGVkV29yZHMiOlsiaXNvIiwiaWVjIl19LCJ0ZXh0Ijp7InZhbHVlIjoiPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiAyNzAyMToyMDE3IHNwZWNpZmllcyB0aGUgcmVxdWlyZW1lbnRzIG9mIGNvbXBldGVuY2UgZm9yIElTTVMgcHJvZmVzc2lvbmFscyBsZWFkaW5nIG9yIGludm9sdmVkIGluIGVzdGFibGlzaGluZywgaW1wbGVtZW50aW5nLCBtYWludGFpbmluZyBhbmQgY29udGludWFsbHkgaW1wcm92aW5nIG9uZSBvciBtb3JlIGluZm9ybWF0aW9uIHNlY3VyaXR5IG1hbmFnZW1lbnQgc3lzdGVtIHByb2Nlc3NlcyB0aGF0IGNvbmZvcm1zIHRvIDxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gPGVtPjI3MDAxPC9lbT4uICIsIm1hdGNoTGV2ZWwiOiJmdWxsIiwiZnVsbHlIaWdobGlnaHRlZCI6ZmFsc2UsIm1hdGNoZWRXb3JkcyI6WyJpc28iLCJpZWMiLCIyNzAwMSJdfX19LHsiY2F0ZWdvcnkiOiJzdGFuZGFyZCIsInBhdGgiOiIvc2l0ZXMvaXNvb3JnL2NvbnRlbnRzL2RhdGEvc3RhbmRhcmQvMDUvOTEvNTkxNDQiLCJ1dWlkIjoiYzJmZDQ2MTAtMjM1YS00YjQzLTk3MjItMDdkZDMwMTdlYWE4IiwidGl0bGUiOiJJU08vSUVDIDI3MDA2OjIwMTEgSW5mb3JtYXRpb24gdGVjaG5vbG9neSDigJQgU2VjdXJpdHkgdGVjaG5pcXVlcyDigJQgUmVxdWlyZW1lbnRzIGZvciBib2RpZXMgcHJvdmlkaW5nIGF1ZGl0IGFuZCBjZXJ0aWZpY2F0aW9uIG9mIGluZm9ybWF0aW9uIHNlY3VyaXR5IG1hbmFnZW1lbnQgc3lzdGVtcyIsInN0YXR1cyI6IldpdGhkcmF3biIsInllYXIiOjIwMTUsIm9yZGVyIjoxMDAsInRleHQiOiJJU08vSUVDIDI3MDA2OjIwMTEgc3BlY2lmaWVzIHJlcXVpcmVtZW50cyBhbmQgcHJvdmlkZXMgZ3VpZGFuY2UgZm9yIGJvZGllcyBwcm92aWRpbmcgYXVkaXQgYW5kIGNlcnRpZmljYXRpb24gb2YgYW4gaW5mb3JtYXRpb24gc2VjdXJpdHkgbWFuYWdlbWVudCBzeXN0ZW0gKElTTVMpLCBpbiBhZGRpdGlvbiB0byB0aGUgcmVxdWlyZW1lbnRzIGNvbnRhaW5lZCB3aXRoaW4gSVNPL0lFQyAxNzAyMSBhbmQgSVNPL0lFQyAyNzAwMS4gSXQgaXMgcHJpbWFyaWx5IGludGVuZGVkIHRvIHN1cHBvcnQgdGhlIGFjY3JlZGl0YXRpb24gb2YgY2VydGlmaWNhdGlvbiBib2RpZXMgcHJvdmlkaW5nIElTTVMgY2VydGlmaWNhdGlvbi4gVGhlIHJlcXVpcmVtZW50cyBjb250YWluZWQgaW4gSVNPL0lFQyAyNzAwNjoyMDExIG5lZWQgdG8gYmUgZGVtb25zdHJhdGVkIGluIHRlcm1zIG9mIGNvbXBldGVuY2UgYW5kIHJlbGlhYmlsaXR5IGJ5IGFueSBib2R5IHByb3ZpZGluZyBJU01TIGNlcnRpZmljYXRpb24sIGFuZCB0aGUgZ3VpZGFuY2UgY29udGFpbmVkIGluIElTTy9JRUMgMjcwMDY6MjAxMSBwcm92aWRlcyBhZGRpdGlvbmFsIGludGVycHJldGF0aW9uIG9mIHRoZXNlIHJlcXVpcmVtZW50cyBmb3IgYW55IGJvZHkgcHJvdmlkaW5nIElTTVMgY2VydGlmaWNhdGlvbi4gIiwib2JqZWN0SUQiOiI1OTE0NF8wIiwiX2hpZ2hsaWdodFJlc3VsdCI6eyJ0aXRsZSI6eyJ2YWx1ZSI6IjxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gMjcwMDY6MjAxMSBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBTZWN1cml0eSB0ZWNobmlxdWVzIOKAlCBSZXF1aXJlbWVudHMgZm9yIGJvZGllcyBwcm92aWRpbmcgYXVkaXQgYW5kIGNlcnRpZmljYXRpb24gb2YgaW5mb3JtYXRpb24gc2VjdXJpdHkgbWFuYWdlbWVudCBzeXN0ZW1zIiwibWF0Y2hMZXZlbCI6InBhcnRpYWwiLCJmdWxseUhpZ2hsaWdodGVkIjpmYWxzZSwibWF0Y2hlZFdvcmRzIjpbImlzbyIsImllYyJdfSwidGV4dCI6eyJ2YWx1ZSI6IjxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gMjcwMDY6MjAxMSBzcGVjaWZpZXMgcmVxdWlyZW1lbnRzIGFuZCBwcm92aWRlcyBndWlkYW5jZSBmb3IgYm9kaWVzIHByb3ZpZGluZyBhdWRpdCBhbmQgY2VydGlmaWNhdGlvbiBvZiBhbiBpbmZvcm1hdGlvbiBzZWN1cml0eSBtYW5hZ2VtZW50IHN5c3RlbSAoSVNNUyksIGluIGFkZGl0aW9uIHRvIHRoZSByZXF1aXJlbWVudHMgY29udGFpbmVkIHdpdGhpbiA8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDE3MDIxIGFuZCA8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDxlbT4yNzAwMTwvZW0+LiBJdCBpcyBwcmltYXJpbHkgaW50ZW5kZWQgdG8gc3VwcG9ydCB0aGUgYWNjcmVkaXRhdGlvbiBvZiBjZXJ0aWZpY2F0aW9uIGJvZGllcyBwcm92aWRpbmcgSVNNUyBjZXJ0aWZpY2F0aW9uLiBUaGUgcmVxdWlyZW1lbnRzIGNvbnRhaW5lZCBpbiA8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDI3MDA2OjIwMTEgbmVlZCB0byBiZSBkZW1vbnN0cmF0ZWQgaW4gdGVybXMgb2YgY29tcGV0ZW5jZSBhbmQgcmVsaWFiaWxpdHkgYnkgYW55IGJvZHkgcHJvdmlkaW5nIElTTVMgY2VydGlmaWNhdGlvbiwgYW5kIHRoZSBndWlkYW5jZSBjb250YWluZWQgaW4gPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiAyNzAwNjoyMDExIHByb3ZpZGVzIGFkZGl0aW9uYWwgaW50ZXJwcmV0YXRpb24gb2YgdGhlc2UgcmVxdWlyZW1lbnRzIGZvciBhbnkgYm9keSBwcm92aWRpbmcgSVNNUyBjZXJ0aWZpY2F0aW9uLiAiLCJtYXRjaExldmVsIjoiZnVsbCIsImZ1bGx5SGlnaGxpZ2h0ZWQiOmZhbHNlLCJtYXRjaGVkV29yZHMiOlsiaXNvIiwiaWVjIiwiMjcwMDEiXX19fSx7ImNhdGVnb3J5Ijoic3RhbmRhcmQiLCJwYXRoIjoiL3NpdGVzL2lzb29yZy9jb250ZW50cy9kYXRhL3N0YW5kYXJkLzA0LzI1LzQyNTA1IiwidXVpZCI6IjNiYWVlMzdjLTI1MzctNDYwZi05Nzc0LTQ2ZDQ1YWUzZWQ2MiIsInRpdGxlIjoiSVNPL0lFQyAyNzAwNjoyMDA3IEluZm9ybWF0aW9uIHRlY2hub2xvZ3kg4oCUIFNlY3VyaXR5IHRlY2huaXF1ZXMg4oCUIFJlcXVpcmVtZW50cyBmb3IgYm9kaWVzIHByb3ZpZGluZyBhdWRpdCBhbmQgY2VydGlmaWNhdGlvbiBvZiBpbmZvcm1hdGlvbiBzZWN1cml0eSBtYW5hZ2VtZW50IHN5c3RlbXMiLCJzdGF0dXMiOiJXaXRoZHJhd24iLCJ5ZWFyIjoyMDExLCJvcmRlciI6MTAwLCJ0ZXh0IjoiSVNPL0lFQyAyNzAwNjoyMDA3IHNwZWNpZmllcyByZXF1aXJlbWVudHMgYW5kIHByb3ZpZGVzIGd1aWRhbmNlIGZvciBib2RpZXMgcHJvdmlkaW5nIGF1ZGl0IGFuZCBjZXJ0aWZpY2F0aW9uIG9mIGFuIGluZm9ybWF0aW9uIHNlY3VyaXR5IG1hbmFnZW1lbnQgc3lzdGVtIChJU01TKSwgaW4gYWRkaXRpb24gdG8gdGhlIHJlcXVpcmVtZW50cyBjb250YWluZWQgd2l0aGluIElTTy9JRUMgMTcwMjEgYW5kIElTTy9JRUMgMjcwMDEuIEl0IGlzIHByaW1hcmlseSBpbnRlbmRlZCB0byBzdXBwb3J0IHRoZSBhY2NyZWRpdGF0aW9uIG9mIGNlcnRpZmljYXRpb24gYm9kaWVzIHByb3ZpZGluZyBJU01TIGNlcnRpZmljYXRpb24uIFRoZSByZXF1aXJlbWVudHMgY29udGFpbmVkIGluIElTTy9JRUMgMjcwMDY6MjAwNyBuZWVkIHRvIGJlIGRlbW9uc3RyYXRlZCBpbiB0ZXJtcyBvZiBjb21wZXRlbmNlIGFuZCByZWxpYWJpbGl0eSBieSBhbnkgYm9keSBwcm92aWRpbmcgSVNNUyBjZXJ0aWZpY2F0aW9uLCBhbmQgdGhlIGd1aWRhbmNlIGNvbnRhaW5lZCBpbiBJU08vSUVDIDI3MDA2OjIwMDcgcHJvdmlkZXMgYWRkaXRpb25hbCBpbnRlcnByZXRhdGlvbiBvZiB0aGVzZSByZXF1aXJlbWVudHMgZm9yIGFueSBib2R5IHByb3ZpZGluZyBJU01TIGNlcnRpZmljYXRpb24uICIsIm9iamVjdElEIjoiNDI1MDVfMCIsIl9oaWdobGlnaHRSZXN1bHQiOnsidGl0bGUiOnsidmFsdWUiOiI8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDI3MDA2OjIwMDcgSW5mb3JtYXRpb24gdGVjaG5vbG9neSDigJQgU2VjdXJpdHkgdGVjaG5pcXVlcyDigJQgUmVxdWlyZW1lbnRzIGZvciBib2RpZXMgcHJvdmlkaW5nIGF1ZGl0IGFuZCBjZXJ0aWZpY2F0aW9uIG9mIGluZm9ybWF0aW9uIHNlY3VyaXR5IG1hbmFnZW1lbnQgc3lzdGVtcyIsIm1hdGNoTGV2ZWwiOiJwYXJ0aWFsIiwiZnVsbHlIaWdobGlnaHRlZCI6ZmFsc2UsIm1hdGNoZWRXb3JkcyI6WyJpc28iLCJpZWMiXX0sInRleHQiOnsidmFsdWUiOiI8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDI3MDA2OjIwMDcgc3BlY2lmaWVzIHJlcXVpcmVtZW50cyBhbmQgcHJvdmlkZXMgZ3VpZGFuY2UgZm9yIGJvZGllcyBwcm92aWRpbmcgYXVkaXQgYW5kIGNlcnRpZmljYXRpb24gb2YgYW4gaW5mb3JtYXRpb24gc2VjdXJpdHkgbWFuYWdlbWVudCBzeXN0ZW0gKElTTVMpLCBpbiBhZGRpdGlvbiB0byB0aGUgcmVxdWlyZW1lbnRzIGNvbnRhaW5lZCB3aXRoaW4gPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiAxNzAyMSBhbmQgPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiA8ZW0+MjcwMDE8L2VtPi4gSXQgaXMgcHJpbWFyaWx5IGludGVuZGVkIHRvIHN1cHBvcnQgdGhlIGFjY3JlZGl0YXRpb24gb2YgY2VydGlmaWNhdGlvbiBib2RpZXMgcHJvdmlkaW5nIElTTVMgY2VydGlmaWNhdGlvbi4gVGhlIHJlcXVpcmVtZW50cyBjb250YWluZWQgaW4gPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiAyNzAwNjoyMDA3IG5lZWQgdG8gYmUgZGVtb25zdHJhdGVkIGluIHRlcm1zIG9mIGNvbXBldGVuY2UgYW5kIHJlbGlhYmlsaXR5IGJ5IGFueSBib2R5IHByb3ZpZGluZyBJU01TIGNlcnRpZmljYXRpb24sIGFuZCB0aGUgZ3VpZGFuY2UgY29udGFpbmVkIGluIDxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gMjcwMDY6MjAwNyBwcm92aWRlcyBhZGRpdGlvbmFsIGludGVycHJldGF0aW9uIG9mIHRoZXNlIHJlcXVpcmVtZW50cyBmb3IgYW55IGJvZHkgcHJvdmlkaW5nIElTTVMgY2VydGlmaWNhdGlvbi4gIiwibWF0Y2hMZXZlbCI6ImZ1bGwiLCJmdWxseUhpZ2hsaWdodGVkIjpmYWxzZSwibWF0Y2hlZFdvcmRzIjpbImlzbyIsImllYyIsIjI3MDAxIl19fX0seyJjYXRlZ29yeSI6InN0YW5kYXJkIiwicGF0aCI6Ii9zaXRlcy9pc29vcmcvY29udGVudHMvZGF0YS9zdGFuZGFyZC8wNi8yMy82MjMxMyIsInV1aWQiOiIyNDQ4NTM0MS01OTFiLTQyY2YtODI2Mi1jZTc3YWEzNWQxYjciLCJ0aXRsZSI6IklTTy9JRUMgMjcwMDY6MjAxNSBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBTZWN1cml0eSB0ZWNobmlxdWVzIOKAlCBSZXF1aXJlbWVudHMgZm9yIGJvZGllcyBwcm92aWRpbmcgYXVkaXQgYW5kIGNlcnRpZmljYXRpb24gb2YgaW5mb3JtYXRpb24gc2VjdXJpdHkgbWFuYWdlbWVudCBzeXN0ZW1zIiwic3RhdHVzIjoiUHVibGlzaGVkIiwieWVhciI6MjAyMSwib3JkZXIiOjExLCJ0ZXh0IjoiSVNPL0lFQyAyNzAwNjoyMDE1IHNwZWNpZmllcyByZXF1aXJlbWVudHMgYW5kIHByb3ZpZGVzIGd1aWRhbmNlIGZvciBib2RpZXMgcHJvdmlkaW5nIGF1ZGl0IGFuZCBjZXJ0aWZpY2F0aW9uIG9mIGFuIGluZm9ybWF0aW9uIHNlY3VyaXR5IG1hbmFnZW1lbnQgc3lzdGVtIChJU01TKSwgaW4gYWRkaXRpb24gdG8gdGhlIHJlcXVpcmVtZW50cyBjb250YWluZWQgd2l0aGluIElTTy9JRUMgMTcwMjHigJExIGFuZCBJU08vSUVDIDI3MDAxLiBJdCBpcyBwcmltYXJpbHkgaW50ZW5kZWQgdG8gc3VwcG9ydCB0aGUgYWNjcmVkaXRhdGlvbiBvZiBjZXJ0aWZpY2F0aW9uIGJvZGllcyBwcm92aWRpbmcgSVNNUyBjZXJ0aWZpY2F0aW9uLiBUaGUgcmVxdWlyZW1lbnRzIGNvbnRhaW5lZCBpbiB0aGlzIEludGVybmF0aW9uYWwgU3RhbmRhcmQgbmVlZCB0byBiZSBkZW1vbnN0cmF0ZWQgaW4gdGVybXMgb2YgY29tcGV0ZW5jZSBhbmQgcmVsaWFiaWxpdHkgYnkgYW55IGJvZHkgcHJvdmlkaW5nIElTTVMgY2VydGlmaWNhdGlvbiwgYW5kIHRoZSBndWlkYW5jZSBjb250YWluZWQgaW4gdGhpcyBJbnRlcm5hdGlvbmFsIFN0YW5kYXJkIHByb3ZpZGVzIGFkZGl0aW9uYWwgaW50ZXJwcmV0YXRpb24gb2YgdGhlc2UgcmVxdWlyZW1lbnRzIGZvciBhbnkgYm9keSBwcm92aWRpbmcgSVNNUyBjZXJ0aWZpY2F0aW9uLiBOT1RFICAgICAgICAgIFRoaXMgSW50ZXJuYXRpb25hbCBTdGFuZGFyZCBjYW4gYmUgdXNlZCBhcyBhIGNyaXRlcmlhIGRvY3VtZW50IGZvciBhY2NyZWRpdGF0aW9uLCBwZWVyIGFzc2Vzc21lbnQgb3Igb3RoZXIgYXVkaXQgcHJvY2Vzc2VzLiAiLCJvYmplY3RJRCI6IjYyMzEzXzAiLCJfaGlnaGxpZ2h0UmVzdWx0Ijp7InRpdGxlIjp7InZhbHVlIjoiPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiAyNzAwNjoyMDE1IEluZm9ybWF0aW9uIHRlY2hub2xvZ3kg4oCUIFNlY3VyaXR5IHRlY2huaXF1ZXMg4oCUIFJlcXVpcmVtZW50cyBmb3IgYm9kaWVzIHByb3ZpZGluZyBhdWRpdCBhbmQgY2VydGlmaWNhdGlvbiBvZiBpbmZvcm1hdGlvbiBzZWN1cml0eSBtYW5hZ2VtZW50IHN5c3RlbXMiLCJtYXRjaExldmVsIjoicGFydGlhbCIsImZ1bGx5SGlnaGxpZ2h0ZWQiOmZhbHNlLCJtYXRjaGVkV29yZHMiOlsiaXNvIiwiaWVjIl19LCJ0ZXh0Ijp7InZhbHVlIjoiPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiAyNzAwNjoyMDE1IHNwZWNpZmllcyByZXF1aXJlbWVudHMgYW5kIHByb3ZpZGVzIGd1aWRhbmNlIGZvciBib2RpZXMgcHJvdmlkaW5nIGF1ZGl0IGFuZCBjZXJ0aWZpY2F0aW9uIG9mIGFuIGluZm9ybWF0aW9uIHNlY3VyaXR5IG1hbmFnZW1lbnQgc3lzdGVtIChJU01TKSwgaW4gYWRkaXRpb24gdG8gdGhlIHJlcXVpcmVtZW50cyBjb250YWluZWQgd2l0aGluIDxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gMTcwMjHigJExIGFuZCA8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDxlbT4yNzAwMTwvZW0+LiBJdCBpcyBwcmltYXJpbHkgaW50ZW5kZWQgdG8gc3VwcG9ydCB0aGUgYWNjcmVkaXRhdGlvbiBvZiBjZXJ0aWZpY2F0aW9uIGJvZGllcyBwcm92aWRpbmcgSVNNUyBjZXJ0aWZpY2F0aW9uLiBUaGUgcmVxdWlyZW1lbnRzIGNvbnRhaW5lZCBpbiB0aGlzIEludGVybmF0aW9uYWwgU3RhbmRhcmQgbmVlZCB0byBiZSBkZW1vbnN0cmF0ZWQgaW4gdGVybXMgb2YgY29tcGV0ZW5jZSBhbmQgcmVsaWFiaWxpdHkgYnkgYW55IGJvZHkgcHJvdmlkaW5nIElTTVMgY2VydGlmaWNhdGlvbiwgYW5kIHRoZSBndWlkYW5jZSBjb250YWluZWQgaW4gdGhpcyBJbnRlcm5hdGlvbmFsIFN0YW5kYXJkIHByb3ZpZGVzIGFkZGl0aW9uYWwgaW50ZXJwcmV0YXRpb24gb2YgdGhlc2UgcmVxdWlyZW1lbnRzIGZvciBhbnkgYm9keSBwcm92aWRpbmcgSVNNUyBjZXJ0aWZpY2F0aW9uLiBOT1RFICAgICAgICAgIFRoaXMgSW50ZXJuYXRpb25hbCBTdGFuZGFyZCBjYW4gYmUgdXNlZCBhcyBhIGNyaXRlcmlhIGRvY3VtZW50IGZvciBhY2NyZWRpdGF0aW9uLCBwZWVyIGFzc2Vzc21lbnQgb3Igb3RoZXIgYXVkaXQgcHJvY2Vzc2VzLiAiLCJtYXRjaExldmVsIjoiZnVsbCIsImZ1bGx5SGlnaGxpZ2h0ZWQiOmZhbHNlLCJtYXRjaGVkV29yZHMiOlsiaXNvIiwiaWVjIiwiMjcwMDEiXX19fSx7ImNhdGVnb3J5Ijoic3RhbmRhcmQiLCJwYXRoIjoiL3NpdGVzL2lzb29yZy9jb250ZW50cy9kYXRhL3N0YW5kYXJkLzA4LzI5LzgyOTA4IiwidXVpZCI6IjQ4MmQzZWIxLTQ2MmEtNGQ4My04ZGEwLTljZmU3OTFmZWFjZSIsInRpdGxlIjoiSVNPL0lFQyBGRElTIDI3MDA2LTEgSW5mb3JtYXRpb24gc2VjdXJpdHksIGN5YmVyc2VjdXJpdHkgYW5kIHByaXZhY3kgcHJvdGVjdGlvbiDigJQgUmVxdWlyZW1lbnRzIGZvciBib2RpZXMgcHJvdmlkaW5nIGF1ZGl0IGFuZCBjZXJ0aWZpY2F0aW9uIG9mIGluZm9ybWF0aW9uIHNlY3VyaXR5IG1hbmFnZW1lbnQgc3lzdGVtcyDigJQgUGFydCAxOiBHZW5lcmFsIiwic3RhdHVzIjoiVW5kZXIgZGV2ZWxvcG1lbnQiLCJ5ZWFyIjoyMDIzLCJvcmRlciI6MTIsInRleHQiOiJJU08vSUVDIDI3MDA2OjIwMTUgc3BlY2lmaWVzIHJlcXVpcmVtZW50cyBhbmQgcHJvdmlkZXMgZ3VpZGFuY2UgZm9yIGJvZGllcyBwcm92aWRpbmcgYXVkaXQgYW5kIGNlcnRpZmljYXRpb24gb2YgYW4gaW5mb3JtYXRpb24gc2VjdXJpdHkgbWFuYWdlbWVudCBzeXN0ZW0gKElTTVMpLCBpbiBhZGRpdGlvbiB0byB0aGUgcmVxdWlyZW1lbnRzIGNvbnRhaW5lZCB3aXRoaW4gSVNPL0lFQyAxNzAyMeKAkTEgYW5kIElTTy9JRUMgMjcwMDEuIEl0IGlzIHByaW1hcmlseSBpbnRlbmRlZCB0byBzdXBwb3J0IHRoZSBhY2NyZWRpdGF0aW9uIG9mIGNlcnRpZmljYXRpb24gYm9kaWVzIHByb3ZpZGluZyBJU01TIGNlcnRpZmljYXRpb24uIFRoZSByZXF1aXJlbWVudHMgY29udGFpbmVkIGluIHRoaXMgSW50ZXJuYXRpb25hbCBTdGFuZGFyZCBuZWVkIHRvIGJlIGRlbW9uc3RyYXRlZCBpbiB0ZXJtcyBvZiBjb21wZXRlbmNlIGFuZCByZWxpYWJpbGl0eSBieSBhbnkgYm9keSBwcm92aWRpbmcgSVNNUyBjZXJ0aWZpY2F0aW9uLCBhbmQgdGhlIGd1aWRhbmNlIGNvbnRhaW5lZCBpbiB0aGlzIEludGVybmF0aW9uYWwgU3RhbmRhcmQgcHJvdmlkZXMgYWRkaXRpb25hbCBpbnRlcnByZXRhdGlvbiBvZiB0aGVzZSByZXF1aXJlbWVudHMgZm9yIGFueSBib2R5IHByb3ZpZGluZyBJU01TIGNlcnRpZmljYXRpb24uIE5PVEUgICAgICAgICAgVGhpcyBJbnRlcm5hdGlvbmFsIFN0YW5kYXJkIGNhbiBiZSB1c2VkIGFzIGEgY3JpdGVyaWEgZG9jdW1lbnQgZm9yIGFjY3JlZGl0YXRpb24sIHBlZXIgYXNzZXNzbWVudCBvciBvdGhlciBhdWRpdCBwcm9jZXNzZXMuICIsIm9iamVjdElEIjoiODI5MDhfMCIsIl9oaWdobGlnaHRSZXN1bHQiOnsidGl0bGUiOnsidmFsdWUiOiI8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IEZESVMgMjcwMDYtMSBJbmZvcm1hdGlvbiBzZWN1cml0eSwgY3liZXJzZWN1cml0eSBhbmQgcHJpdmFjeSBwcm90ZWN0aW9uIOKAlCBSZXF1aXJlbWVudHMgZm9yIGJvZGllcyBwcm92aWRpbmcgYXVkaXQgYW5kIGNlcnRpZmljYXRpb24gb2YgaW5mb3JtYXRpb24gc2VjdXJpdHkgbWFuYWdlbWVudCBzeXN0ZW1zIOKAlCBQYXJ0IDE6IEdlbmVyYWwiLCJtYXRjaExldmVsIjoicGFydGlhbCIsImZ1bGx5SGlnaGxpZ2h0ZWQiOmZhbHNlLCJtYXRjaGVkV29yZHMiOlsiaXNvIiwiaWVjIl19LCJ0ZXh0Ijp7InZhbHVlIjoiPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiAyNzAwNjoyMDE1IHNwZWNpZmllcyByZXF1aXJlbWVudHMgYW5kIHByb3ZpZGVzIGd1aWRhbmNlIGZvciBib2RpZXMgcHJvdmlkaW5nIGF1ZGl0IGFuZCBjZXJ0aWZpY2F0aW9uIG9mIGFuIGluZm9ybWF0aW9uIHNlY3VyaXR5IG1hbmFnZW1lbnQgc3lzdGVtIChJU01TKSwgaW4gYWRkaXRpb24gdG8gdGhlIHJlcXVpcmVtZW50cyBjb250YWluZWQgd2l0aGluIDxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gMTcwMjHigJExIGFuZCA8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDxlbT4yNzAwMTwvZW0+LiBJdCBpcyBwcmltYXJpbHkgaW50ZW5kZWQgdG8gc3VwcG9ydCB0aGUgYWNjcmVkaXRhdGlvbiBvZiBjZXJ0aWZpY2F0aW9uIGJvZGllcyBwcm92aWRpbmcgSVNNUyBjZXJ0aWZpY2F0aW9uLiBUaGUgcmVxdWlyZW1lbnRzIGNvbnRhaW5lZCBpbiB0aGlzIEludGVybmF0aW9uYWwgU3RhbmRhcmQgbmVlZCB0byBiZSBkZW1vbnN0cmF0ZWQgaW4gdGVybXMgb2YgY29tcGV0ZW5jZSBhbmQgcmVsaWFiaWxpdHkgYnkgYW55IGJvZHkgcHJvdmlkaW5nIElTTVMgY2VydGlmaWNhdGlvbiwgYW5kIHRoZSBndWlkYW5jZSBjb250YWluZWQgaW4gdGhpcyBJbnRlcm5hdGlvbmFsIFN0YW5kYXJkIHByb3ZpZGVzIGFkZGl0aW9uYWwgaW50ZXJwcmV0YXRpb24gb2YgdGhlc2UgcmVxdWlyZW1lbnRzIGZvciBhbnkgYm9keSBwcm92aWRpbmcgSVNNUyBjZXJ0aWZpY2F0aW9uLiBOT1RFICAgICAgICAgIFRoaXMgSW50ZXJuYXRpb25hbCBTdGFuZGFyZCBjYW4gYmUgdXNlZCBhcyBhIGNyaXRlcmlhIGRvY3VtZW50IGZvciBhY2NyZWRpdGF0aW9uLCBwZWVyIGFzc2Vzc21lbnQgb3Igb3RoZXIgYXVkaXQgcHJvY2Vzc2VzLiAiLCJtYXRjaExldmVsIjoiZnVsbCIsImZ1bGx5SGlnaGxpZ2h0ZWQiOmZhbHNlLCJtYXRjaGVkV29yZHMiOlsiaXNvIiwiaWVjIiwiMjcwMDEiXX19fSx7ImNhdGVnb3J5Ijoic3RhbmRhcmQiLCJwYXRoIjoiL3NpdGVzL2lzb29yZy9jb250ZW50cy9kYXRhL3N0YW5kYXJkLzA3LzU2Lzc1NjUyIiwidXVpZCI6IjEzMWY1MmE0LTYwZjAtNDFlOS04NTk1LTY4MjMyNGQzNjFlOCIsInRpdGxlIjoiSVNPL0lFQyAyNzAwMjoyMDIyIEluZm9ybWF0aW9uIHNlY3VyaXR5LCBjeWJlcnNlY3VyaXR5IGFuZCBwcml2YWN5IHByb3RlY3Rpb24g4oCUIEluZm9ybWF0aW9uIHNlY3VyaXR5IGNvbnRyb2xzIiwic3RhdHVzIjoiUHVibGlzaGVkIiwieWVhciI6MjAyMiwib3JkZXIiOjExLCJ0ZXh0IjoiVGhpcyBkb2N1bWVudCBwcm92aWRlcyBhIHJlZmVyZW5jZSBzZXQgb2YgZ2VuZXJpYyBpbmZvcm1hdGlvbiBzZWN1cml0eSBjb250cm9scyBpbmNsdWRpbmcgaW1wbGVtZW50YXRpb24gZ3VpZGFuY2UuIFRoaXMgZG9jdW1lbnQgaXMgZGVzaWduZWQgdG8gYmUgdXNlZCBieSBvcmdhbml6YXRpb25zOiBhKSB3aXRoaW4gdGhlIGNvbnRleHQgb2YgYW4gaW5mb3JtYXRpb24gc2VjdXJpdHkgbWFuYWdlbWVudCBzeXN0ZW0gKElTTVMpIGJhc2VkIG9uIElTTy9JRUMyNzAwMTsgYikgZm9yIGltcGxlbWVudGluZyBpbmZvcm1hdGlvbiBzZWN1cml0eSBjb250cm9scyBiYXNlZCBvbiBpbnRlcm5hdGlvbmFsbHkgcmVjb2duaXplZCBiZXN0IHByYWN0aWNlczsgYykgZm9yIGRldmVsb3Bpbmcgb3JnYW5pemF0aW9uLXNwZWNpZmljIGluZm9ybWF0aW9uIHNlY3VyaXR5IG1hbmFnZW1lbnQgZ3VpZGVsaW5lcy4gIiwib2JqZWN0SUQiOiI3NTY1Ml8wIiwiX2hpZ2hsaWdodFJlc3VsdCI6eyJ0aXRsZSI6eyJ2YWx1ZSI6IjxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gMjcwMDI6MjAyMiBJbmZvcm1hdGlvbiBzZWN1cml0eSwgY3liZXJzZWN1cml0eSBhbmQgcHJpdmFjeSBwcm90ZWN0aW9uIOKAlCBJbmZvcm1hdGlvbiBzZWN1cml0eSBjb250cm9scyIsIm1hdGNoTGV2ZWwiOiJwYXJ0aWFsIiwiZnVsbHlIaWdobGlnaHRlZCI6ZmFsc2UsIm1hdGNoZWRXb3JkcyI6WyJpc28iLCJpZWMiXX0sInRleHQiOnsidmFsdWUiOiJUaGlzIGRvY3VtZW50IHByb3ZpZGVzIGEgcmVmZXJlbmNlIHNldCBvZiBnZW5lcmljIGluZm9ybWF0aW9uIHNlY3VyaXR5IGNvbnRyb2xzIGluY2x1ZGluZyBpbXBsZW1lbnRhdGlvbiBndWlkYW5jZS4gVGhpcyBkb2N1bWVudCBpcyBkZXNpZ25lZCB0byBiZSB1c2VkIGJ5IG9yZ2FuaXphdGlvbnM6IGEpIHdpdGhpbiB0aGUgY29udGV4dCBvZiBhbiBpbmZvcm1hdGlvbiBzZWN1cml0eSBtYW5hZ2VtZW50IHN5c3RlbSAoSVNNUykgYmFzZWQgb24gPGVtPklTTzwvZW0+LzxlbT5JRUMyNzAwMTwvZW0+OyBiKSBmb3IgaW1wbGVtZW50aW5nIGluZm9ybWF0aW9uIHNlY3VyaXR5IGNvbnRyb2xzIGJhc2VkIG9uIGludGVybmF0aW9uYWxseSByZWNvZ25pemVkIGJlc3QgcHJhY3RpY2VzOyBjKSBmb3IgZGV2ZWxvcGluZyBvcmdhbml6YXRpb24tc3BlY2lmaWMgaW5mb3JtYXRpb24gc2VjdXJpdHkgbWFuYWdlbWVudCBndWlkZWxpbmVzLiAiLCJtYXRjaExldmVsIjoiZnVsbCIsImZ1bGx5SGlnaGxpZ2h0ZWQiOmZhbHNlLCJtYXRjaGVkV29yZHMiOlsiaXNvIiwiaWVjIiwiMjcwMDEiXX19fSx7ImNhdGVnb3J5Ijoic3RhbmRhcmQiLCJwYXRoIjoiL3NpdGVzL2lzb29yZy9jb250ZW50cy9kYXRhL3N0YW5kYXJkLzA2LzEwLzYxMDA0IiwidXVpZCI6IjdkNmY4MGVmLWU3MjYtNDVhZS05YzZhLTgwYWFiMDdhZjVhMiIsInRpdGxlIjoiSVNPL0lFQyBUUyAyNzAyMjoyMDIxIEluZm9ybWF0aW9uIHRlY2hub2xvZ3kg4oCUIEd1aWRhbmNlIG9uIGluZm9ybWF0aW9uIHNlY3VyaXR5IG1hbmFnZW1lbnQgc3lzdGVtIHByb2Nlc3NlcyIsInN0YXR1cyI6IlB1Ymxpc2hlZCIsInllYXIiOjIwMjMsIm9yZGVyIjoxMSwidGV4dCI6IlRoaXMgZG9jdW1lbnQgZGVmaW5lcyBhIHByb2Nlc3MgcmVmZXJlbmNlIG1vZGVsIChQUk0pIGZvciB0aGUgZG9tYWluIG9mIGluZm9ybWF0aW9uIHNlY3VyaXR5IG1hbmFnZW1lbnQsIHdoaWNoIGlzIG1lZXRpbmcgdGhlIGNyaXRlcmlhIGRlZmluZWQgaW4gSVNPL0lFQyAzMzAwNCBmb3IgcHJvY2VzcyByZWZlcmVuY2UgbW9kZWxzIChzZWUgQW5uZXggQSkuIEl0IGlzIGludGVuZGVkIHRvIGd1aWRlIHVzZXJzIG9mIElTTy9JRUMgMjcwMDEgdG86IOKAlCAgICAgaW5jb3Jwb3JhdGUgdGhlIHByb2Nlc3MgYXBwcm9hY2ggYXMgZGVzY3JpYmVkIGJ5IElTTy9JRUMgMjcwMDA6MjAxOCwgNC4zLCB3aXRoaW4gdGhlIElTTVM7IOKAlCAgICAgYmUgYWxpZ25lZCB0byBhbGwgdGhlIHdvcmsgZG9uZSB3aXRoaW4gb3RoZXIgc3RhbmRhcmRzIG9mIHRoZSBJU08vSUVDIDI3MDAwIGZhbWlseSBmcm9tIHRoZSBwZXJzcGVjdGl2ZSBvZiB0aGUgb3BlcmF0aW9uIG9mIElTTVMgcHJvY2Vzc2VzIOKAlCAgICAgc3VwcG9ydCB1c2VycyBpbiB0aGUgb3BlcmF0aW9uIG9mIGFuIElTTVMgPyB0aGlzIGRvY3VtZW50IGlzIGNvbXBsZW1lbnRpbmcgdGhlIHJlcXVpcmVtZW50cy1vcmllbnRlZCBwZXJzcGVjdGl2ZSBvZiBJU08vSUVDIDI3MDAzIHdpdGggYW4gb3BlcmF0aW9uYWwsIHByb2Nlc3Mtb3JpZW50ZWQgcG9pbnQgb2Ygdmlldy4gIiwib2JqZWN0SUQiOiI2MTAwNF8wIiwiX2hpZ2hsaWdodFJlc3VsdCI6eyJ0aXRsZSI6eyJ2YWx1ZSI6IjxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gVFMgMjcwMjI6MjAyMSBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBHdWlkYW5jZSBvbiBpbmZvcm1hdGlvbiBzZWN1cml0eSBtYW5hZ2VtZW50IHN5c3RlbSBwcm9jZXNzZXMiLCJtYXRjaExldmVsIjoicGFydGlhbCIsImZ1bGx5SGlnaGxpZ2h0ZWQiOmZhbHNlLCJtYXRjaGVkV29yZHMiOlsiaXNvIiwiaWVjIl19LCJ0ZXh0Ijp7InZhbHVlIjoiVGhpcyBkb2N1bWVudCBkZWZpbmVzIGEgcHJvY2VzcyByZWZlcmVuY2UgbW9kZWwgKFBSTSkgZm9yIHRoZSBkb21haW4gb2YgaW5mb3JtYXRpb24gc2VjdXJpdHkgbWFuYWdlbWVudCwgd2hpY2ggaXMgbWVldGluZyB0aGUgY3JpdGVyaWEgZGVmaW5lZCBpbiA8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDMzMDA0IGZvciBwcm9jZXNzIHJlZmVyZW5jZSBtb2RlbHMgKHNlZSBBbm5leCBBKS4gSXQgaXMgaW50ZW5kZWQgdG8gZ3VpZGUgdXNlcnMgb2YgPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiA8ZW0+MjcwMDE8L2VtPiB0bzog4oCUICAgICBpbmNvcnBvcmF0ZSB0aGUgcHJvY2VzcyBhcHByb2FjaCBhcyBkZXNjcmliZWQgYnkgPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiAyNzAwMDoyMDE4LCA0LjMsIHdpdGhpbiB0aGUgSVNNUzsg4oCUICAgICBiZSBhbGlnbmVkIHRvIGFsbCB0aGUgd29yayBkb25lIHdpdGhpbiBvdGhlciBzdGFuZGFyZHMgb2YgdGhlIDxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gMjcwMDAgZmFtaWx5IGZyb20gdGhlIHBlcnNwZWN0aXZlIG9mIHRoZSBvcGVyYXRpb24gb2YgSVNNUyBwcm9jZXNzZXMg4oCUICAgICBzdXBwb3J0IHVzZXJzIGluIHRoZSBvcGVyYXRpb24gb2YgYW4gSVNNUyA/IHRoaXMgZG9jdW1lbnQgaXMgY29tcGxlbWVudGluZyB0aGUgcmVxdWlyZW1lbnRzLW9yaWVudGVkIHBlcnNwZWN0aXZlIG9mIDxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gMjcwMDMgd2l0aCBhbiBvcGVyYXRpb25hbCwgcHJvY2Vzcy1vcmllbnRlZCBwb2ludCBvZiB2aWV3LiAiLCJtYXRjaExldmVsIjoiZnVsbCIsImZ1bGx5SGlnaGxpZ2h0ZWQiOmZhbHNlLCJtYXRjaGVkV29yZHMiOlsiaXNvIiwiaWVjIiwiMjcwMDEiXX19fSx7ImNhdGVnb3J5Ijoic3RhbmRhcmQiLCJwYXRoIjoiL3NpdGVzL2lzb29yZy9jb250ZW50cy9kYXRhL3N0YW5kYXJkLzA0LzIxLzQyMTA2IiwidXVpZCI6ImQwNjEzZTA4LWZhNmMtNDY0OC1iYTMwLWQ4NDdmNWEzY2IzZCIsInRpdGxlIjoiSVNPL0lFQyAyNzAwNDoyMDA5IEluZm9ybWF0aW9uIHRlY2hub2xvZ3kg4oCUIFNlY3VyaXR5IHRlY2huaXF1ZXMg4oCUIEluZm9ybWF0aW9uIHNlY3VyaXR5IG1hbmFnZW1lbnQg4oCUIE1lYXN1cmVtZW50Iiwic3RhdHVzIjoiV2l0aGRyYXduIiwieWVhciI6MjAxNiwib3JkZXIiOjEwMCwidGV4dCI6IklTTy9JRUMgMjcwMDQ6MjAwOSBwcm92aWRlcyBndWlkYW5jZSBvbiB0aGUgZGV2ZWxvcG1lbnQgYW5kIHVzZSBvZiBtZWFzdXJlcyBhbmQgbWVhc3VyZW1lbnQgaW4gb3JkZXIgdG8gYXNzZXNzIHRoZSBlZmZlY3RpdmVuZXNzIG9mIGFuIGltcGxlbWVudGVkIGluZm9ybWF0aW9uIHNlY3VyaXR5IG1hbmFnZW1lbnQgc3lzdGVtIChJU01TKSBhbmQgY29udHJvbHMgb3IgZ3JvdXBzIG9mIGNvbnRyb2xzLCBhcyBzcGVjaWZpZWQgaW4gSVNPL0lFQyAyNzAwMS4gSVNPL0lFQyAyNzAwNDoyMDA5IGlzIGFwcGxpY2FibGUgdG8gYWxsIHR5cGVzIGFuZCBzaXplcyBvZiBvcmdhbml6YXRpb24uICIsIm9iamVjdElEIjoiNDIxMDZfMCIsIl9oaWdobGlnaHRSZXN1bHQiOnsidGl0bGUiOnsidmFsdWUiOiI8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDI3MDA0OjIwMDkgSW5mb3JtYXRpb24gdGVjaG5vbG9neSDigJQgU2VjdXJpdHkgdGVjaG5pcXVlcyDigJQgSW5mb3JtYXRpb24gc2VjdXJpdHkgbWFuYWdlbWVudCDigJQgTWVhc3VyZW1lbnQiLCJtYXRjaExldmVsIjoicGFydGlhbCIsImZ1bGx5SGlnaGxpZ2h0ZWQiOmZhbHNlLCJtYXRjaGVkV29yZHMiOlsiaXNvIiwiaWVjIl19LCJ0ZXh0Ijp7InZhbHVlIjoiPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiAyNzAwNDoyMDA5IHByb3ZpZGVzIGd1aWRhbmNlIG9uIHRoZSBkZXZlbG9wbWVudCBhbmQgdXNlIG9mIG1lYXN1cmVzIGFuZCBtZWFzdXJlbWVudCBpbiBvcmRlciB0byBhc3Nlc3MgdGhlIGVmZmVjdGl2ZW5lc3Mgb2YgYW4gaW1wbGVtZW50ZWQgaW5mb3JtYXRpb24gc2VjdXJpdHkgbWFuYWdlbWVudCBzeXN0ZW0gKElTTVMpIGFuZCBjb250cm9scyBvciBncm91cHMgb2YgY29udHJvbHMsIGFzIHNwZWNpZmllZCBpbiA8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDxlbT4yNzAwMTwvZW0+LiA8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDI3MDA0OjIwMDkgaXMgYXBwbGljYWJsZSB0byBhbGwgdHlwZXMgYW5kIHNpemVzIG9mIG9yZ2FuaXphdGlvbi4gIiwibWF0Y2hMZXZlbCI6ImZ1bGwiLCJmdWxseUhpZ2hsaWdodGVkIjpmYWxzZSwibWF0Y2hlZFdvcmRzIjpbImlzbyIsImllYyIsIjI3MDAxIl19fX0seyJjYXRlZ29yeSI6InN0YW5kYXJkIiwicGF0aCI6Ii9zaXRlcy9pc29vcmcvY29udGVudHMvZGF0YS9zdGFuZGFyZC8wNS80NS81NDUzMyIsInV1aWQiOiIzMGIwNjBiZC1mOWExLTRmMjAtYTQwNy03ZTNiNzdhYzJjZWMiLCJ0aXRsZSI6IklTTy9JRUMgMjcwMDI6MjAxMyBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBTZWN1cml0eSB0ZWNobmlxdWVzIOKAlCBDb2RlIG9mIHByYWN0aWNlIGZvciBpbmZvcm1hdGlvbiBzZWN1cml0eSBjb250cm9scyIsInN0YXR1cyI6IldpdGhkcmF3biIsInllYXIiOjIwMjIsIm9yZGVyIjoxMDAsInRleHQiOiJJU08vSUVDIDI3MDAyOjIwMTMgZ2l2ZXMgZ3VpZGVsaW5lcyBmb3Igb3JnYW5pemF0aW9uYWwgaW5mb3JtYXRpb24gc2VjdXJpdHkgc3RhbmRhcmRzIGFuZCBpbmZvcm1hdGlvbiBzZWN1cml0eSBtYW5hZ2VtZW50IHByYWN0aWNlcyBpbmNsdWRpbmcgdGhlIHNlbGVjdGlvbiwgaW1wbGVtZW50YXRpb24gYW5kIG1hbmFnZW1lbnQgb2YgY29udHJvbHMgdGFraW5nIGludG8gY29uc2lkZXJhdGlvbiB0aGUgb3JnYW5pemF0aW9uJ3MgaW5mb3JtYXRpb24gc2VjdXJpdHkgcmlzayBlbnZpcm9ubWVudChzKS4gSXQgaXMgZGVzaWduZWQgdG8gYmUgdXNlZCBieSBvcmdhbml6YXRpb25zIHRoYXQgaW50ZW5kIHRvOiBzZWxlY3QgY29udHJvbHMgd2l0aGluIHRoZSBwcm9jZXNzIG9mIGltcGxlbWVudGluZyBhbiBJbmZvcm1hdGlvbiBTZWN1cml0eSBNYW5hZ2VtZW50IFN5c3RlbSBiYXNlZCBvbiBJU08vSUVDIDI3MDAxOyBpbXBsZW1lbnQgY29tbW9ubHkgYWNjZXB0ZWQgaW5mb3JtYXRpb24gc2VjdXJpdHkgY29udHJvbHM7IGRldmVsb3AgdGhlaXIgb3duIGluZm9ybWF0aW9uIHNlY3VyaXR5IG1hbmFnZW1lbnQgZ3VpZGVsaW5lcy4gIiwib2JqZWN0SUQiOiI1NDUzM18wIiwiX2hpZ2hsaWdodFJlc3VsdCI6eyJ0aXRsZSI6eyJ2YWx1ZSI6IjxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gMjcwMDI6MjAxMyBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBTZWN1cml0eSB0ZWNobmlxdWVzIOKAlCBDb2RlIG9mIHByYWN0aWNlIGZvciBpbmZvcm1hdGlvbiBzZWN1cml0eSBjb250cm9scyIsIm1hdGNoTGV2ZWwiOiJwYXJ0aWFsIiwiZnVsbHlIaWdobGlnaHRlZCI6ZmFsc2UsIm1hdGNoZWRXb3JkcyI6WyJpc28iLCJpZWMiXX0sInRleHQiOnsidmFsdWUiOiI8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDI3MDAyOjIwMTMgZ2l2ZXMgZ3VpZGVsaW5lcyBmb3Igb3JnYW5pemF0aW9uYWwgaW5mb3JtYXRpb24gc2VjdXJpdHkgc3RhbmRhcmRzIGFuZCBpbmZvcm1hdGlvbiBzZWN1cml0eSBtYW5hZ2VtZW50IHByYWN0aWNlcyBpbmNsdWRpbmcgdGhlIHNlbGVjdGlvbiwgaW1wbGVtZW50YXRpb24gYW5kIG1hbmFnZW1lbnQgb2YgY29udHJvbHMgdGFraW5nIGludG8gY29uc2lkZXJhdGlvbiB0aGUgb3JnYW5pemF0aW9uJ3MgaW5mb3JtYXRpb24gc2VjdXJpdHkgcmlzayBlbnZpcm9ubWVudChzKS4gSXQgaXMgZGVzaWduZWQgdG8gYmUgdXNlZCBieSBvcmdhbml6YXRpb25zIHRoYXQgaW50ZW5kIHRvOiBzZWxlY3QgY29udHJvbHMgd2l0aGluIHRoZSBwcm9jZXNzIG9mIGltcGxlbWVudGluZyBhbiBJbmZvcm1hdGlvbiBTZWN1cml0eSBNYW5hZ2VtZW50IFN5c3RlbSBiYXNlZCBvbiA8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDxlbT4yNzAwMTwvZW0+OyBpbXBsZW1lbnQgY29tbW9ubHkgYWNjZXB0ZWQgaW5mb3JtYXRpb24gc2VjdXJpdHkgY29udHJvbHM7IGRldmVsb3AgdGhlaXIgb3duIGluZm9ybWF0aW9uIHNlY3VyaXR5IG1hbmFnZW1lbnQgZ3VpZGVsaW5lcy4gIiwibWF0Y2hMZXZlbCI6ImZ1bGwiLCJmdWxseUhpZ2hsaWdodGVkIjpmYWxzZSwibWF0Y2hlZFdvcmRzIjpbImlzbyIsImllYyIsIjI3MDAxIl19fX0seyJjYXRlZ29yeSI6InN0YW5kYXJkIiwicGF0aCI6Ii9zaXRlcy9pc29vcmcvY29udGVudHMvZGF0YS9zdGFuZGFyZC8wNy80MC83NDA0NiIsInV1aWQiOiI3MzZlYzZjYi0wMDQ1LTQ3YTgtOTE0Yi1mN2NkOTQzZTk3YWIiLCJ0aXRsZSI6IklTTy9JRUMgMjcwMTQ6MjAyMCBJbmZvcm1hdGlvbiBzZWN1cml0eSwgY3liZXJzZWN1cml0eSBhbmQgcHJpdmFjeSBwcm90ZWN0aW9uIOKAlCBHb3Zlcm5hbmNlIG9mIGluZm9ybWF0aW9uIHNlY3VyaXR5Iiwic3RhdHVzIjoiUHVibGlzaGVkIiwieWVhciI6MjAyMCwib3JkZXIiOjExLCJ0ZXh0IjoiVGhpcyBkb2N1bWVudCBwcm92aWRlcyBndWlkYW5jZSBvbiBjb25jZXB0cywgb2JqZWN0aXZlcyBhbmQgcHJvY2Vzc2VzIGZvciB0aGUgZ292ZXJuYW5jZSBvZiBpbmZvcm1hdGlvbiBzZWN1cml0eSwgYnkgd2hpY2ggb3JnYW5pemF0aW9ucyBjYW4gZXZhbHVhdGUsIGRpcmVjdCwgbW9uaXRvciBhbmQgY29tbXVuaWNhdGUgdGhlIGluZm9ybWF0aW9uIHNlY3VyaXR5LXJlbGF0ZWQgcHJvY2Vzc2VzIHdpdGhpbiB0aGUgb3JnYW5pemF0aW9uLiBUaGUgaW50ZW5kZWQgYXVkaWVuY2UgZm9yIHRoaXMgZG9jdW1lbnQgaXM6IOKAlCAgICAgZ292ZXJuaW5nIGJvZHkgYW5kIHRvcCBtYW5hZ2VtZW50OyDigJQgICAgIHRob3NlIHdobyBhcmUgcmVzcG9uc2libGUgZm9yIGV2YWx1YXRpbmcsIGRpcmVjdGluZyBhbmQgbW9uaXRvcmluZyBhbiBpbmZvcm1hdGlvbiBzZWN1cml0eSBtYW5hZ2VtZW50IHN5c3RlbSAoSVNNUykgYmFzZWQgb24gSVNPL0lFQyAyNzAwMTsg4oCUICAgICB0aG9zZSByZXNwb25zaWJsZSBmb3IgaW5mb3JtYXRpb24gc2VjdXJpdHkgbWFuYWdlbWVudCB0aGF0IHRha2VzIHBsYWNlIG91dHNpZGUgdGhlIHNjb3BlIG9mIGFuIElTTVMgYmFzZWQgb24gSVNPL0lFQyAyNzAwMSwgYnV0IHdpdGhpbiB0aGUgc2NvcGUgb2YgZ292ZXJuYW5jZS4gVGhpcyBkb2N1bWVudCBpcyBhcHBsaWNhYmxlIHRvIGFsbCB0eXBlcyBhbmQgc2l6ZXMgb2Ygb3JnYW5pemF0aW9ucy4gQWxsIHJlZmVyZW5jZXMgdG8gYW4gSVNNUyBpbiB0aGlzIGRvY3VtZW50IGFwcGx5IHRvIGFuIElTTVMgYmFzZWQgb24gSVNPL0lFQyAyNzAwMS4gVGhpcyBkb2N1bWVudCBmb2N1c2VzIG9uIHRoZSB0aHJlZSB0eXBlcyBvZiBJU01TIG9yZ2FuaXphdGlvbnMgZ2l2ZW4gaW4gQW5uZXggQi4gSG93ZXZlciwgdGhpcyBkb2N1bWVudCBjYW4gYWxzbyBiZSB1c2VkIGJ5IG90aGVyIHR5cGVzIG9mIG9yZ2FuaXphdGlvbnMuICIsIm9iamVjdElEIjoiNzQwNDZfMCIsIl9oaWdobGlnaHRSZXN1bHQiOnsidGl0bGUiOnsidmFsdWUiOiI8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDI3MDE0OjIwMjAgSW5mb3JtYXRpb24gc2VjdXJpdHksIGN5YmVyc2VjdXJpdHkgYW5kIHByaXZhY3kgcHJvdGVjdGlvbiDigJQgR292ZXJuYW5jZSBvZiBpbmZvcm1hdGlvbiBzZWN1cml0eSIsIm1hdGNoTGV2ZWwiOiJwYXJ0aWFsIiwiZnVsbHlIaWdobGlnaHRlZCI6ZmFsc2UsIm1hdGNoZWRXb3JkcyI6WyJpc28iLCJpZWMiXX0sInRleHQiOnsidmFsdWUiOiJUaGlzIGRvY3VtZW50IHByb3ZpZGVzIGd1aWRhbmNlIG9uIGNvbmNlcHRzLCBvYmplY3RpdmVzIGFuZCBwcm9jZXNzZXMgZm9yIHRoZSBnb3Zlcm5hbmNlIG9mIGluZm9ybWF0aW9uIHNlY3VyaXR5LCBieSB3aGljaCBvcmdhbml6YXRpb25zIGNhbiBldmFsdWF0ZSwgZGlyZWN0LCBtb25pdG9yIGFuZCBjb21tdW5pY2F0ZSB0aGUgaW5mb3JtYXRpb24gc2VjdXJpdHktcmVsYXRlZCBwcm9jZXNzZXMgd2l0aGluIHRoZSBvcmdhbml6YXRpb24uIFRoZSBpbnRlbmRlZCBhdWRpZW5jZSBmb3IgdGhpcyBkb2N1bWVudCBpczog4oCUICAgICBnb3Zlcm5pbmcgYm9keSBhbmQgdG9wIG1hbmFnZW1lbnQ7IOKAlCAgICAgdGhvc2Ugd2hvIGFyZSByZXNwb25zaWJsZSBmb3IgZXZhbHVhdGluZywgZGlyZWN0aW5nIGFuZCBtb25pdG9yaW5nIGFuIGluZm9ybWF0aW9uIHNlY3VyaXR5IG1hbmFnZW1lbnQgc3lzdGVtIChJU01TKSBiYXNlZCBvbiA8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDxlbT4yNzAwMTwvZW0+OyDigJQgICAgIHRob3NlIHJlc3BvbnNpYmxlIGZvciBpbmZvcm1hdGlvbiBzZWN1cml0eSBtYW5hZ2VtZW50IHRoYXQgdGFrZXMgcGxhY2Ugb3V0c2lkZSB0aGUgc2NvcGUgb2YgYW4gSVNNUyBiYXNlZCBvbiA8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDxlbT4yNzAwMTwvZW0+LCBidXQgd2l0aGluIHRoZSBzY29wZSBvZiBnb3Zlcm5hbmNlLiBUaGlzIGRvY3VtZW50IGlzIGFwcGxpY2FibGUgdG8gYWxsIHR5cGVzIGFuZCBzaXplcyBvZiBvcmdhbml6YXRpb25zLiBBbGwgcmVmZXJlbmNlcyB0byBhbiBJU01TIGluIHRoaXMgZG9jdW1lbnQgYXBwbHkgdG8gYW4gSVNNUyBiYXNlZCBvbiA8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDxlbT4yNzAwMTwvZW0+LiBUaGlzIGRvY3VtZW50IGZvY3VzZXMgb24gdGhlIHRocmVlIHR5cGVzIG9mIElTTVMgb3JnYW5pemF0aW9ucyBnaXZlbiBpbiBBbm5leCBCLiBIb3dldmVyLCB0aGlzIGRvY3VtZW50IGNhbiBhbHNvIGJlIHVzZWQgYnkgb3RoZXIgdHlwZXMgb2Ygb3JnYW5pemF0aW9ucy4gIiwibWF0Y2hMZXZlbCI6ImZ1bGwiLCJmdWxseUhpZ2hsaWdodGVkIjpmYWxzZSwibWF0Y2hlZFdvcmRzIjpbImlzbyIsImllYyIsIjI3MDAxIl19fX0seyJjYXRlZ29yeSI6InN0YW5kYXJkIiwicGF0aCI6Ii9zaXRlcy9pc29vcmcvY29udGVudHMvZGF0YS9zdGFuZGFyZC8wNi83My82NzM5NyIsInV1aWQiOiI1NTY1ZTQ5Yy1lZWNhLTQwNDAtYTQ4Yy0wYzdmZjA0YmNiYmUiLCJ0aXRsZSI6IklTTy9JRUMgVFMgMjcwMDg6MjAxOSBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBTZWN1cml0eSB0ZWNobmlxdWVzIOKAlCBHdWlkZWxpbmVzIGZvciB0aGUgYXNzZXNzbWVudCBvZiBpbmZvcm1hdGlvbiBzZWN1cml0eSBjb250cm9scyIsInN0YXR1cyI6IlB1Ymxpc2hlZCIsInllYXIiOjIwMjMsIm9yZGVyIjoxMSwidGV4dCI6IlRoaXMgZG9jdW1lbnQgcHJvdmlkZXMgZ3VpZGFuY2Ugb24gcmV2aWV3aW5nIGFuZCBhc3Nlc3NpbmcgdGhlIGltcGxlbWVudGF0aW9uIGFuZCBvcGVyYXRpb24gb2YgaW5mb3JtYXRpb24gc2VjdXJpdHkgY29udHJvbHMsIGluY2x1ZGluZyB0aGUgdGVjaG5pY2FsIGFzc2Vzc21lbnQgb2YgaW5mb3JtYXRpb24gc3lzdGVtIGNvbnRyb2xzLCBpbiBjb21wbGlhbmNlIHdpdGggYW4gb3JnYW5pemF0aW9uJ3MgZXN0YWJsaXNoZWQgaW5mb3JtYXRpb24gc2VjdXJpdHkgcmVxdWlyZW1lbnRzIGluY2x1ZGluZyB0ZWNobmljYWwgY29tcGxpYW5jZSBhZ2FpbnN0IGFzc2Vzc21lbnQgY3JpdGVyaWEgYmFzZWQgb24gdGhlIGluZm9ybWF0aW9uIHNlY3VyaXR5IHJlcXVpcmVtZW50cyBlc3RhYmxpc2hlZCBieSB0aGUgb3JnYW5pemF0aW9uLiBUaGlzIGRvY3VtZW50IG9mZmVycyBndWlkYW5jZSBvbiBob3cgdG8gcmV2aWV3IGFuZCBhc3Nlc3MgaW5mb3JtYXRpb24gc2VjdXJpdHkgY29udHJvbHMgYmVpbmcgbWFuYWdlZCB0aHJvdWdoIGFuIEluZm9ybWF0aW9uIFNlY3VyaXR5IE1hbmFnZW1lbnQgU3lzdGVtIHNwZWNpZmllZCBieSBJU08vSUVDIDI3MDAxLiBJdCBpcyBhcHBsaWNhYmxlIHRvIGFsbCB0eXBlcyBhbmQgc2l6ZXMgb2Ygb3JnYW5pemF0aW9ucywgaW5jbHVkaW5nIHB1YmxpYyBhbmQgcHJpdmF0ZSBjb21wYW5pZXMsIGdvdmVybm1lbnQgZW50aXRpZXMsIGFuZCBub3QtZm9yLXByb2ZpdCBvcmdhbml6YXRpb25zIGNvbmR1Y3RpbmcgaW5mb3JtYXRpb24gc2VjdXJpdHkgcmV2aWV3cyBhbmQgdGVjaG5pY2FsIGNvbXBsaWFuY2UgY2hlY2tzLiAiLCJvYmplY3RJRCI6IjY3Mzk3XzAiLCJfaGlnaGxpZ2h0UmVzdWx0Ijp7InRpdGxlIjp7InZhbHVlIjoiPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiBUUyAyNzAwODoyMDE5IEluZm9ybWF0aW9uIHRlY2hub2xvZ3kg4oCUIFNlY3VyaXR5IHRlY2huaXF1ZXMg4oCUIEd1aWRlbGluZXMgZm9yIHRoZSBhc3Nlc3NtZW50IG9mIGluZm9ybWF0aW9uIHNlY3VyaXR5IGNvbnRyb2xzIiwibWF0Y2hMZXZlbCI6InBhcnRpYWwiLCJmdWxseUhpZ2hsaWdodGVkIjpmYWxzZSwibWF0Y2hlZFdvcmRzIjpbImlzbyIsImllYyJdfSwidGV4dCI6eyJ2YWx1ZSI6IlRoaXMgZG9jdW1lbnQgcHJvdmlkZXMgZ3VpZGFuY2Ugb24gcmV2aWV3aW5nIGFuZCBhc3Nlc3NpbmcgdGhlIGltcGxlbWVudGF0aW9uIGFuZCBvcGVyYXRpb24gb2YgaW5mb3JtYXRpb24gc2VjdXJpdHkgY29udHJvbHMsIGluY2x1ZGluZyB0aGUgdGVjaG5pY2FsIGFzc2Vzc21lbnQgb2YgaW5mb3JtYXRpb24gc3lzdGVtIGNvbnRyb2xzLCBpbiBjb21wbGlhbmNlIHdpdGggYW4gb3JnYW5pemF0aW9uJ3MgZXN0YWJsaXNoZWQgaW5mb3JtYXRpb24gc2VjdXJpdHkgcmVxdWlyZW1lbnRzIGluY2x1ZGluZyB0ZWNobmljYWwgY29tcGxpYW5jZSBhZ2FpbnN0IGFzc2Vzc21lbnQgY3JpdGVyaWEgYmFzZWQgb24gdGhlIGluZm9ybWF0aW9uIHNlY3VyaXR5IHJlcXVpcmVtZW50cyBlc3RhYmxpc2hlZCBieSB0aGUgb3JnYW5pemF0aW9uLiBUaGlzIGRvY3VtZW50IG9mZmVycyBndWlkYW5jZSBvbiBob3cgdG8gcmV2aWV3IGFuZCBhc3Nlc3MgaW5mb3JtYXRpb24gc2VjdXJpdHkgY29udHJvbHMgYmVpbmcgbWFuYWdlZCB0aHJvdWdoIGFuIEluZm9ybWF0aW9uIFNlY3VyaXR5IE1hbmFnZW1lbnQgU3lzdGVtIHNwZWNpZmllZCBieSA8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDxlbT4yNzAwMTwvZW0+LiBJdCBpcyBhcHBsaWNhYmxlIHRvIGFsbCB0eXBlcyBhbmQgc2l6ZXMgb2Ygb3JnYW5pemF0aW9ucywgaW5jbHVkaW5nIHB1YmxpYyBhbmQgcHJpdmF0ZSBjb21wYW5pZXMsIGdvdmVybm1lbnQgZW50aXRpZXMsIGFuZCBub3QtZm9yLXByb2ZpdCBvcmdhbml6YXRpb25zIGNvbmR1Y3RpbmcgaW5mb3JtYXRpb24gc2VjdXJpdHkgcmV2aWV3cyBhbmQgdGVjaG5pY2FsIGNvbXBsaWFuY2UgY2hlY2tzLiAiLCJtYXRjaExldmVsIjoiZnVsbCIsImZ1bGx5SGlnaGxpZ2h0ZWQiOmZhbHNlLCJtYXRjaGVkV29yZHMiOlsiaXNvIiwiaWVjIiwiMjcwMDEiXX19fSx7ImNhdGVnb3J5Ijoic3RhbmRhcmQiLCJwYXRoIjoiL3NpdGVzL2lzb29yZy9jb250ZW50cy9kYXRhL3N0YW5kYXJkLzA0LzM3LzQzNzU5IiwidXVpZCI6IjcxNjcyZDFmLWYwYzUtNGJhZC05NmRiLTFiYmVhN2NjZDZiOSIsInRpdGxlIjoiSVNPL0lFQyBUUiAyNzAxOToyMDEzIEluZm9ybWF0aW9uIHRlY2hub2xvZ3kg4oCUIFNlY3VyaXR5IHRlY2huaXF1ZXMg4oCUIEluZm9ybWF0aW9uIHNlY3VyaXR5IG1hbmFnZW1lbnQgZ3VpZGVsaW5lcyBiYXNlZCBvbiBJU08vSUVDIDI3MDAyIGZvciBwcm9jZXNzIGNvbnRyb2wgc3lzdGVtcyBzcGVjaWZpYyB0byB0aGUgZW5lcmd5IHV0aWxpdHkgaW5kdXN0cnkiLCJzdGF0dXMiOiJXaXRoZHJhd24iLCJ5ZWFyIjoyMDE3LCJvcmRlciI6MTAwLCJ0ZXh0IjoiSVNPL0lFQyBUUiAyNzAxOToyMDEzIHByb3ZpZGVzIGd1aWRpbmcgcHJpbmNpcGxlcyBiYXNlZCBvbiBJU08vSUVDIDI3MDAyIGZvciBpbmZvcm1hdGlvbiBzZWN1cml0eSBtYW5hZ2VtZW50IGFwcGxpZWQgdG8gcHJvY2VzcyBjb250cm9sIHN5c3RlbXMgYXMgdXNlZCBpbiB0aGUgZW5lcmd5IHV0aWxpdHkgaW5kdXN0cnkuIFRoZSBhaW0gb2YgSVNPL0lFQyBUUiAyNzAxOToyMDEzIGlzIHRvIGV4dGVuZCB0aGUgSVNPL0lFQyAyNzAwMCBzZXQgb2Ygc3RhbmRhcmRzIHRvIHRoZSBkb21haW4gb2YgcHJvY2VzcyBjb250cm9sIHN5c3RlbXMgYW5kIGF1dG9tYXRpb24gdGVjaG5vbG9neSwgdGh1cyBhbGxvd2luZyB0aGUgZW5lcmd5IHV0aWxpdHkgaW5kdXN0cnkgdG8gaW1wbGVtZW50IGEgc3RhbmRhcmRpemVkIGluZm9ybWF0aW9uIHNlY3VyaXR5IG1hbmFnZW1lbnQgc3lzdGVtIChJU01TKSBpbiBhY2NvcmRhbmNlIHdpdGggSVNPL0lFQyAyNzAwMSB0aGF0IGV4dGVuZHMgZnJvbSB0aGUgYnVzaW5lc3MgdG8gdGhlIHByb2Nlc3MgY29udHJvbCBsZXZlbC4gVGhlIHNjb3BlIG9mIElTTy9JRUMgVFIgMjcwMTk6MjAxMyBjb3ZlcnMgcHJvY2VzcyBjb250cm9sIHN5c3RlbXMgdXNlZCBieSB0aGUgZW5lcmd5IHV0aWxpdHkgaW5kdXN0cnkgZm9yIGNvbnRyb2xsaW5nIGFuZCBtb25pdG9yaW5nIHRoZSBnZW5lcmF0aW9uLCB0cmFuc21pc3Npb24sIHN0b3JhZ2UgYW5kIGRpc3RyaWJ1dGlvbiBvZiBlbGVjdHJpYyBwb3dlciwgZ2FzIGFuZCBoZWF0IGluIGNvbWJpbmF0aW9uIHdpdGggdGhlIGNvbnRyb2wgb2Ygc3VwcG9ydGluZyBwcm9jZXNzZXMuIFRoaXMgaW5jbHVkZXMgaW4gcGFydGljdWxhciB0aGUgZm9sbG93aW5nIHN5c3RlbXMsIGFwcGxpY2F0aW9ucyBhbmQgY29tcG9uZW50czogdGhlIG92ZXJhbGwgSVQtc3VwcG9ydGVkIGNlbnRyYWwgYW5kIGRpc3RyaWJ1dGVkIHByb2Nlc3MgY29udHJvbCwgbW9uaXRvcmluZyBhbmQgYXV0b21hdGlvbiB0ZWNobm9sb2d5IGFzIHdlbGwgYXMgSVQgc3lzdGVtcyB1c2VkIGZvciB0aGVpciBvcGVyYXRpb24sIHN1Y2ggYXMgcHJvZ3JhbW1pbmcgYW5kIHBhcmFtZXRlcml6YXRpb24gZGV2aWNlczsgZGlnaXRhbCBjb250cm9sbGVycyBhbmQgYXV0b21hdGlvbiBjb21wb25lbnRzIHN1Y2ggYXMgY29udHJvbCBhbmQgZmllbGQgZGV2aWNlcyBvciBQTENzLCBpbmNsdWRpbmcgZGlnaXRhbCBzZW5zb3IgYW5kIGFjdHVhdG9yIGVsZW1lbnRzOyBhbGwgZnVydGhlciBzdXBwb3J0aW5nIElUIHN5c3RlbXMgdXNlZCBpbiB0aGUgcHJvY2VzcyBjb250cm9sIGRvbWFpbiwgZS5nLiBmb3Igc3VwcGxlbWVudGFyeSBkYXRhIHZpc3VhbGl6YXRpb24gdGFza3MgYW5kIGZvciBjb250cm9sbGluZywgbW9uaXRvcmluZywgZGF0YSBhcmNoaXZpbmcgYW5kIGRvY3VtZW50YXRpb24gcHVycG9zZXM7IHRoZSBvdmVyYWxsIGNvbW11bmljYXRpb25zIHRlY2hub2xvZ3kgdXNlZCBpbiB0aGUgcHJvY2VzcyBjb250cm9sIGRvbWFpbiwgZS5nLiBuZXR3b3JrcywgdGVsZW1ldHJ5LCB0ZWxlY29udHJvbCBhcHBsaWNhdGlvbnMgYW5kIHJlbW90ZSBjb250cm9sIHRlY2hub2xvZ3k7IGRpZ2l0YWwgbWV0ZXJpbmcgYW5kIG1lYXN1cmVtZW50IGRldmljZXMsIGUuZy4gZm9yIG1lYXN1cmluZyBlbmVyZ3kgY29uc3VtcHRpb24sIGdlbmVyYXRpb24gb3IgZW1pc3Npb24gdmFsdWVzOyBkaWdpdGFsIHByb3RlY3Rpb24gYW5kIHNhZmV0eSBzeXN0ZW1zLCBlLmcuIHByb3RlY3Rpb24gcmVsYXlzIG9yIHNhZmV0eSBQTENzOyBkaXN0cmlidXRlZCBjb21wb25lbnRzIG9mIGZ1dHVyZSBzbWFydCBncmlkIGVudmlyb25tZW50czsgYWxsIHNvZnR3YXJlLCBmaXJtd2FyZSBhbmQgYXBwbGljYXRpb25zIGluc3RhbGxlZCBvbiBhYm92ZSBtZW50aW9uZWQgc3lzdGVtcy4gT3V0c2lkZSB0aGUgc2NvcGUgb2YgSVNPL0lFQyBUUiAyNzAxOToyMDEzIGlzIHRoZSBjb252ZW50aW9uYWwgb3IgY2xhc3NpYyBjb250cm9sIGVxdWlwbWVudCB0aGF0IGlzIG5vbi1kaWdpdGFsLCBpLmUuIHB1cmVseSBlbGVjdHJvLW1lY2hhbmljYWwgb3IgZWxlY3Ryb25pYyBtb25pdG9yaW5nIGFuZCBwcm9jZXNzIGNvbnRyb2wgc3lzdGVtcy4gRnVydGhlcm1vcmUsIGVuZXJneSBwcm9jZXNzIGNvbnRyb2wgc3lzdGVtcyBpbiBwcml2YXRlIGhvdXNlaG9sZHMgYW5kIG90aGVyLCBjb21wYXJhYmxlIHJlc2lkZW50aWFsIGJ1aWxkaW5nIGluc3RhbGxhdGlvbnMgYXJlIG91dHNpZGUgdGhlIHNjb3BlIG9mIElTTy9JRUMgVFIgMjcwMTk6MjAxMy4gVGVsZWNvbW11bmljYXRpb24gc3lzdGVtcyBhbmQgY29tcG9uZW50cyB1c2VkIGluIHRoZSBwcm9jZXNzIGNvbnRyb2wgZW52aXJvbm1lbnQgYXJlIGFsc28gbm90IGRpcmVjdGx5IHBhcnQgb2YgdGhlIHNjb3BlIG9mIElTTy9JRUMgVFIgMjcwMTk6MjAxMy4gVGhlc2UgYXJlIGNvdmVyZWQgYnkgSVNPL0lFQyAyNzAxMToyMDA4LiAiLCJvYmplY3RJRCI6IjQzNzU5XzAiLCJfaGlnaGxpZ2h0UmVzdWx0Ijp7InRpdGxlIjp7InZhbHVlIjoiPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiBUUiAyNzAxOToyMDEzIEluZm9ybWF0aW9uIHRlY2hub2xvZ3kg4oCUIFNlY3VyaXR5IHRlY2huaXF1ZXMg4oCUIEluZm9ybWF0aW9uIHNlY3VyaXR5IG1hbmFnZW1lbnQgZ3VpZGVsaW5lcyBiYXNlZCBvbiA8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDI3MDAyIGZvciBwcm9jZXNzIGNvbnRyb2wgc3lzdGVtcyBzcGVjaWZpYyB0byB0aGUgZW5lcmd5IHV0aWxpdHkgaW5kdXN0cnkiLCJtYXRjaExldmVsIjoicGFydGlhbCIsImZ1bGx5SGlnaGxpZ2h0ZWQiOmZhbHNlLCJtYXRjaGVkV29yZHMiOlsiaXNvIiwiaWVjIl19LCJ0ZXh0Ijp7InZhbHVlIjoiPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiBUUiAyNzAxOToyMDEzIHByb3ZpZGVzIGd1aWRpbmcgcHJpbmNpcGxlcyBiYXNlZCBvbiA8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDI3MDAyIGZvciBpbmZvcm1hdGlvbiBzZWN1cml0eSBtYW5hZ2VtZW50IGFwcGxpZWQgdG8gcHJvY2VzcyBjb250cm9sIHN5c3RlbXMgYXMgdXNlZCBpbiB0aGUgZW5lcmd5IHV0aWxpdHkgaW5kdXN0cnkuIFRoZSBhaW0gb2YgPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiBUUiAyNzAxOToyMDEzIGlzIHRvIGV4dGVuZCB0aGUgPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiAyNzAwMCBzZXQgb2Ygc3RhbmRhcmRzIHRvIHRoZSBkb21haW4gb2YgcHJvY2VzcyBjb250cm9sIHN5c3RlbXMgYW5kIGF1dG9tYXRpb24gdGVjaG5vbG9neSwgdGh1cyBhbGxvd2luZyB0aGUgZW5lcmd5IHV0aWxpdHkgaW5kdXN0cnkgdG8gaW1wbGVtZW50IGEgc3RhbmRhcmRpemVkIGluZm9ybWF0aW9uIHNlY3VyaXR5IG1hbmFnZW1lbnQgc3lzdGVtIChJU01TKSBpbiBhY2NvcmRhbmNlIHdpdGggPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiA8ZW0+MjcwMDE8L2VtPiB0aGF0IGV4dGVuZHMgZnJvbSB0aGUgYnVzaW5lc3MgdG8gdGhlIHByb2Nlc3MgY29udHJvbCBsZXZlbC4gVGhlIHNjb3BlIG9mIDxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gVFIgMjcwMTk6MjAxMyBjb3ZlcnMgcHJvY2VzcyBjb250cm9sIHN5c3RlbXMgdXNlZCBieSB0aGUgZW5lcmd5IHV0aWxpdHkgaW5kdXN0cnkgZm9yIGNvbnRyb2xsaW5nIGFuZCBtb25pdG9yaW5nIHRoZSBnZW5lcmF0aW9uLCB0cmFuc21pc3Npb24sIHN0b3JhZ2UgYW5kIGRpc3RyaWJ1dGlvbiBvZiBlbGVjdHJpYyBwb3dlciwgZ2FzIGFuZCBoZWF0IGluIGNvbWJpbmF0aW9uIHdpdGggdGhlIGNvbnRyb2wgb2Ygc3VwcG9ydGluZyBwcm9jZXNzZXMuIFRoaXMgaW5jbHVkZXMgaW4gcGFydGljdWxhciB0aGUgZm9sbG93aW5nIHN5c3RlbXMsIGFwcGxpY2F0aW9ucyBhbmQgY29tcG9uZW50czogdGhlIG92ZXJhbGwgSVQtc3VwcG9ydGVkIGNlbnRyYWwgYW5kIGRpc3RyaWJ1dGVkIHByb2Nlc3MgY29udHJvbCwgbW9uaXRvcmluZyBhbmQgYXV0b21hdGlvbiB0ZWNobm9sb2d5IGFzIHdlbGwgYXMgSVQgc3lzdGVtcyB1c2VkIGZvciB0aGVpciBvcGVyYXRpb24sIHN1Y2ggYXMgcHJvZ3JhbW1pbmcgYW5kIHBhcmFtZXRlcml6YXRpb24gZGV2aWNlczsgZGlnaXRhbCBjb250cm9sbGVycyBhbmQgYXV0b21hdGlvbiBjb21wb25lbnRzIHN1Y2ggYXMgY29udHJvbCBhbmQgZmllbGQgZGV2aWNlcyBvciBQTENzLCBpbmNsdWRpbmcgZGlnaXRhbCBzZW5zb3IgYW5kIGFjdHVhdG9yIGVsZW1lbnRzOyBhbGwgZnVydGhlciBzdXBwb3J0aW5nIElUIHN5c3RlbXMgdXNlZCBpbiB0aGUgcHJvY2VzcyBjb250cm9sIGRvbWFpbiwgZS5nLiBmb3Igc3VwcGxlbWVudGFyeSBkYXRhIHZpc3VhbGl6YXRpb24gdGFza3MgYW5kIGZvciBjb250cm9sbGluZywgbW9uaXRvcmluZywgZGF0YSBhcmNoaXZpbmcgYW5kIGRvY3VtZW50YXRpb24gcHVycG9zZXM7IHRoZSBvdmVyYWxsIGNvbW11bmljYXRpb25zIHRlY2hub2xvZ3kgdXNlZCBpbiB0aGUgcHJvY2VzcyBjb250cm9sIGRvbWFpbiwgZS5nLiBuZXR3b3JrcywgdGVsZW1ldHJ5LCB0ZWxlY29udHJvbCBhcHBsaWNhdGlvbnMgYW5kIHJlbW90ZSBjb250cm9sIHRlY2hub2xvZ3k7IGRpZ2l0YWwgbWV0ZXJpbmcgYW5kIG1lYXN1cmVtZW50IGRldmljZXMsIGUuZy4gZm9yIG1lYXN1cmluZyBlbmVyZ3kgY29uc3VtcHRpb24sIGdlbmVyYXRpb24gb3IgZW1pc3Npb24gdmFsdWVzOyBkaWdpdGFsIHByb3RlY3Rpb24gYW5kIHNhZmV0eSBzeXN0ZW1zLCBlLmcuIHByb3RlY3Rpb24gcmVsYXlzIG9yIHNhZmV0eSBQTENzOyBkaXN0cmlidXRlZCBjb21wb25lbnRzIG9mIGZ1dHVyZSBzbWFydCBncmlkIGVudmlyb25tZW50czsgYWxsIHNvZnR3YXJlLCBmaXJtd2FyZSBhbmQgYXBwbGljYXRpb25zIGluc3RhbGxlZCBvbiBhYm92ZSBtZW50aW9uZWQgc3lzdGVtcy4gT3V0c2lkZSB0aGUgc2NvcGUgb2YgPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiBUUiAyNzAxOToyMDEzIGlzIHRoZSBjb252ZW50aW9uYWwgb3IgY2xhc3NpYyBjb250cm9sIGVxdWlwbWVudCB0aGF0IGlzIG5vbi1kaWdpdGFsLCBpLmUuIHB1cmVseSBlbGVjdHJvLW1lY2hhbmljYWwgb3IgZWxlY3Ryb25pYyBtb25pdG9yaW5nIGFuZCBwcm9jZXNzIGNvbnRyb2wgc3lzdGVtcy4gRnVydGhlcm1vcmUsIGVuZXJneSBwcm9jZXNzIGNvbnRyb2wgc3lzdGVtcyBpbiBwcml2YXRlIGhvdXNlaG9sZHMgYW5kIG90aGVyLCBjb21wYXJhYmxlIHJlc2lkZW50aWFsIGJ1aWxkaW5nIGluc3RhbGxhdGlvbnMgYXJlIG91dHNpZGUgdGhlIHNjb3BlIG9mIDxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gVFIgMjcwMTk6MjAxMy4gVGVsZWNvbW11bmljYXRpb24gc3lzdGVtcyBhbmQgY29tcG9uZW50cyB1c2VkIGluIHRoZSBwcm9jZXNzIGNvbnRyb2wgZW52aXJvbm1lbnQgYXJlIGFsc28gbm90IGRpcmVjdGx5IHBhcnQgb2YgdGhlIHNjb3BlIG9mIDxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gVFIgMjcwMTk6MjAxMy4gVGhlc2UgYXJlIGNvdmVyZWQgYnkgPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiAyNzAxMToyMDA4LiAiLCJtYXRjaExldmVsIjoiZnVsbCIsImZ1bGx5SGlnaGxpZ2h0ZWQiOmZhbHNlLCJtYXRjaGVkV29yZHMiOlsiaXNvIiwiaWVjIiwiMjcwMDEiXX19fSx7ImNhdGVnb3J5Ijoic3RhbmRhcmQiLCJwYXRoIjoiL3NpdGVzL2lzb29yZy9jb250ZW50cy9kYXRhL3N0YW5kYXJkLzA1LzY1LzU2NTkwIiwidXVpZCI6IjVkMTQyNjExLTIyMWItNDQxZC04OGEyLWJiMGU0NDgyNDQwMiIsInRpdGxlIjoiSVNPL0lFQyAyNzA5OToyMDIyIEluZm9ybWF0aW9uIHRlY2hub2xvZ3kg4oCUIFB1YmxpYyBrZXkgaW5mcmFzdHJ1Y3R1cmUg4oCUIFByYWN0aWNlcyBhbmQgcG9saWN5IGZyYW1ld29yayIsInN0YXR1cyI6IlB1Ymxpc2hlZCIsInllYXIiOjIwMjIsIm9yZGVyIjoxMSwidGV4dCI6IlRoaXMgZG9jdW1lbnQgc2V0cyBvdXQgYSBmcmFtZXdvcmsgb2YgcmVxdWlyZW1lbnRzIHRvIG1hbmFnZSBpbmZvcm1hdGlvbiBzZWN1cml0eSBmb3IgUHVibGljIGtleSBpbmZyYXN0cnVjdHVyZSAoUEtJKSB0cnVzdCBzZXJ2aWNlIHByb3ZpZGVycyB0aHJvdWdoIGNlcnRpZmljYXRlIHBvbGljaWVzLCBjZXJ0aWZpY2F0ZSBwcmFjdGljZSBzdGF0ZW1lbnRzLCBhbmQsIHdoZXJlIGFwcGxpY2FibGUsIHRoZWlyIGludGVybmFsIHVuZGVycGlubmluZyBieSBhbiBpbmZvcm1hdGlvbiBzZWN1cml0eSBtYW5hZ2VtZW50IHN5c3RlbSAoSVNNUykuIFRoZSBmcmFtZXdvcmsgb2YgcmVxdWlyZW1lbnRzIGluY2x1ZGVzIHRoZSBhc3Nlc3NtZW50IGFuZCB0cmVhdG1lbnQgb2YgaW5mb3JtYXRpb24gc2VjdXJpdHkgcmlza3MsIHRhaWxvcmVkIHRvIG1lZXQgdGhlIGFncmVlZCBzZXJ2aWNlIHJlcXVpcmVtZW50cyBvZiBpdHMgdXNlcnMgYXMgc3BlY2lmaWVkIHRocm91Z2ggdGhlIGNlcnRpZmljYXRlIHBvbGljeS4gVGhpcyBkb2N1bWVudCBpcyBhbHNvIGludGVuZGVkIHRvIGhlbHAgdHJ1c3Qgc2VydmljZSBwcm92aWRlcnMgdG8gc3VwcG9ydCBtdWx0aXBsZSBjZXJ0aWZpY2F0ZSBwb2xpY2llcy4gVGhpcyBkb2N1bWVudCBhZGRyZXNzZXMgdGhlIGxpZmUgY3ljbGUgb2YgcHVibGljIGtleSBjZXJ0aWZpY2F0ZXMgdGhhdCBhcmUgdXNlZCBmb3IgZGlnaXRhbCBzaWduYXR1cmVzLCBhdXRoZW50aWNhdGlvbiwgb3Iga2V5IGVzdGFibGlzaG1lbnQgZm9yIGRhdGEgZW5jcnlwdGlvbi4gSXQgZG9lcyBub3QgYWRkcmVzcyBhdXRoZW50aWNhdGlvbiBtZXRob2RzLCBub24tcmVwdWRpYXRpb24gcmVxdWlyZW1lbnRzLCBvciBrZXkgbWFuYWdlbWVudCBwcm90b2NvbHMgYmFzZWQgb24gdGhlIHVzZSBvZiBwdWJsaWMga2V5IGNlcnRpZmljYXRlcy4gRm9yIHRoZSBwdXJwb3NlcyBvZiB0aGlzIGRvY3VtZW50LCB0aGUgdGVybSDigJxjZXJ0aWZpY2F0ZeKAnSByZWZlcnMgdG8gcHVibGljIGtleSBjZXJ0aWZpY2F0ZXMuIFRoaXMgZG9jdW1lbnQgaXMgbm90IGFwcGxpY2FibGUgdG8gYXR0cmlidXRlIGNlcnRpZmljYXRlcy4gVGhpcyBkb2N1bWVudCB1c2VzIGNvbmNlcHRzIGFuZCByZXF1aXJlbWVudHMgb2YgYW4gSVNNUyBhcyBkZWZpbmVkIGluIHRoZSBJU08vSUVDwqAyNzAwMCBmYW1pbHkgb2Ygc3RhbmRhcmRzLiBJdCB1c2VzIHRoZSBjb2RlIG9mIHByYWN0aWNlIGZvciBpbmZvcm1hdGlvbiBzZWN1cml0eSBjb250cm9scyBhcyBkZWZpbmVkIGluIElTTy9JRUPCoDI3MDAyLiBTcGVjaWZpYyBQS0kgcmVxdWlyZW1lbnRzIChlLmcuIGNlcnRpZmljYXRlIGNvbnRlbnQsIGlkZW50aXR5IHByb29maW5nLCBjZXJ0aWZpY2F0ZSByZXZvY2F0aW9uIGhhbmRsaW5nKSBhcmUgbm90IGFkZHJlc3NlZCBkaXJlY3RseSBieSBhbiBJU01TIHN1Y2ggYXMgZGVmaW5lZCBieSBJU08vSUVDwqAyNzAwMSBbMjZdIC4gVGhlIHVzZSBvZiBhbiBJU01TIG9yIGVxdWl2YWxlbnQgaXMgYWRhcHRlZCB0byB0aGUgYXBwbGljYXRpb24gb2YgUEtJIHNlcnZpY2UgcmVxdWlyZW1lbnRzIHNwZWNpZmllZCBpbiB0aGUgY2VydGlmaWNhdGUgcG9saWN5IGFzIGRlc2NyaWJlZCBpbiB0aGlzIGRvY3VtZW50LiBBIFBLSSB0cnVzdCBzZXJ2aWNlIHByb3ZpZGVyIGlzIGEgc3BlY2lhbCBjbGFzcyBvZiB0cnVzdCBzZXJ2aWNlIGZvciB0aGUgdXNlIG9mIHB1YmxpYyBrZXkgY2VydGlmaWNhdGVzLiBUaGlzIGRvY3VtZW50IGRyYXdzIGEgZGlzdGluY3Rpb24gYmV0d2VlbiBQS0kgc3lzdGVtcyB1c2VkIGluIGNsb3NlZCwgb3BlbiBhbmQgY29udHJhY3R1YWwgZW52aXJvbm1lbnRzLiBUaGlzIGRvY3VtZW50IGlzIGludGVuZGVkIHRvIGZhY2lsaXRhdGUgdGhlIGltcGxlbWVudGF0aW9uIG9mIG9wZXJhdGlvbmFsLCBiYXNlbGluZSBjb250cm9scyBhbmQgcHJhY3RpY2VzIGluIGEgY29udHJhY3R1YWwgZW52aXJvbm1lbnQuIFdoaWxlIHRoZSBmb2N1cyBvZiB0aGlzIGRvY3VtZW50IGlzIG9uIHRoZSBjb250cmFjdHVhbCBlbnZpcm9ubWVudCwgYXBwbGljYXRpb24gb2YgdGhpcyBkb2N1bWVudCB0byBvcGVuIG9yIGNsb3NlZCBlbnZpcm9ubWVudHMgaXMgbm90IHNwZWNpZmljYWxseSBwcmVjbHVkZWQuICIsIm9iamVjdElEIjoiNTY1OTBfMCIsIl9oaWdobGlnaHRSZXN1bHQiOnsidGl0bGUiOnsidmFsdWUiOiI8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDI3MDk5OjIwMjIgSW5mb3JtYXRpb24gdGVjaG5vbG9neSDigJQgUHVibGljIGtleSBpbmZyYXN0cnVjdHVyZSDigJQgUHJhY3RpY2VzIGFuZCBwb2xpY3kgZnJhbWV3b3JrIiwibWF0Y2hMZXZlbCI6InBhcnRpYWwiLCJmdWxseUhpZ2hsaWdodGVkIjpmYWxzZSwibWF0Y2hlZFdvcmRzIjpbImlzbyIsImllYyJdfSwidGV4dCI6eyJ2YWx1ZSI6IlRoaXMgZG9jdW1lbnQgc2V0cyBvdXQgYSBmcmFtZXdvcmsgb2YgcmVxdWlyZW1lbnRzIHRvIG1hbmFnZSBpbmZvcm1hdGlvbiBzZWN1cml0eSBmb3IgUHVibGljIGtleSBpbmZyYXN0cnVjdHVyZSAoUEtJKSB0cnVzdCBzZXJ2aWNlIHByb3ZpZGVycyB0aHJvdWdoIGNlcnRpZmljYXRlIHBvbGljaWVzLCBjZXJ0aWZpY2F0ZSBwcmFjdGljZSBzdGF0ZW1lbnRzLCBhbmQsIHdoZXJlIGFwcGxpY2FibGUsIHRoZWlyIGludGVybmFsIHVuZGVycGlubmluZyBieSBhbiBpbmZvcm1hdGlvbiBzZWN1cml0eSBtYW5hZ2VtZW50IHN5c3RlbSAoSVNNUykuIFRoZSBmcmFtZXdvcmsgb2YgcmVxdWlyZW1lbnRzIGluY2x1ZGVzIHRoZSBhc3Nlc3NtZW50IGFuZCB0cmVhdG1lbnQgb2YgaW5mb3JtYXRpb24gc2VjdXJpdHkgcmlza3MsIHRhaWxvcmVkIHRvIG1lZXQgdGhlIGFncmVlZCBzZXJ2aWNlIHJlcXVpcmVtZW50cyBvZiBpdHMgdXNlcnMgYXMgc3BlY2lmaWVkIHRocm91Z2ggdGhlIGNlcnRpZmljYXRlIHBvbGljeS4gVGhpcyBkb2N1bWVudCBpcyBhbHNvIGludGVuZGVkIHRvIGhlbHAgdHJ1c3Qgc2VydmljZSBwcm92aWRlcnMgdG8gc3VwcG9ydCBtdWx0aXBsZSBjZXJ0aWZpY2F0ZSBwb2xpY2llcy4gVGhpcyBkb2N1bWVudCBhZGRyZXNzZXMgdGhlIGxpZmUgY3ljbGUgb2YgcHVibGljIGtleSBjZXJ0aWZpY2F0ZXMgdGhhdCBhcmUgdXNlZCBmb3IgZGlnaXRhbCBzaWduYXR1cmVzLCBhdXRoZW50aWNhdGlvbiwgb3Iga2V5IGVzdGFibGlzaG1lbnQgZm9yIGRhdGEgZW5jcnlwdGlvbi4gSXQgZG9lcyBub3QgYWRkcmVzcyBhdXRoZW50aWNhdGlvbiBtZXRob2RzLCBub24tcmVwdWRpYXRpb24gcmVxdWlyZW1lbnRzLCBvciBrZXkgbWFuYWdlbWVudCBwcm90b2NvbHMgYmFzZWQgb24gdGhlIHVzZSBvZiBwdWJsaWMga2V5IGNlcnRpZmljYXRlcy4gRm9yIHRoZSBwdXJwb3NlcyBvZiB0aGlzIGRvY3VtZW50LCB0aGUgdGVybSDigJxjZXJ0aWZpY2F0ZeKAnSByZWZlcnMgdG8gcHVibGljIGtleSBjZXJ0aWZpY2F0ZXMuIFRoaXMgZG9jdW1lbnQgaXMgbm90IGFwcGxpY2FibGUgdG8gYXR0cmlidXRlIGNlcnRpZmljYXRlcy4gVGhpcyBkb2N1bWVudCB1c2VzIGNvbmNlcHRzIGFuZCByZXF1aXJlbWVudHMgb2YgYW4gSVNNUyBhcyBkZWZpbmVkIGluIHRoZSA8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+wqAyNzAwMCBmYW1pbHkgb2Ygc3RhbmRhcmRzLiBJdCB1c2VzIHRoZSBjb2RlIG9mIHByYWN0aWNlIGZvciBpbmZvcm1hdGlvbiBzZWN1cml0eSBjb250cm9scyBhcyBkZWZpbmVkIGluIDxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT7CoDI3MDAyLiBTcGVjaWZpYyBQS0kgcmVxdWlyZW1lbnRzIChlLmcuIGNlcnRpZmljYXRlIGNvbnRlbnQsIGlkZW50aXR5IHByb29maW5nLCBjZXJ0aWZpY2F0ZSByZXZvY2F0aW9uIGhhbmRsaW5nKSBhcmUgbm90IGFkZHJlc3NlZCBkaXJlY3RseSBieSBhbiBJU01TIHN1Y2ggYXMgZGVmaW5lZCBieSA8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+wqA8ZW0+MjcwMDE8L2VtPiBbMjZdIC4gVGhlIHVzZSBvZiBhbiBJU01TIG9yIGVxdWl2YWxlbnQgaXMgYWRhcHRlZCB0byB0aGUgYXBwbGljYXRpb24gb2YgUEtJIHNlcnZpY2UgcmVxdWlyZW1lbnRzIHNwZWNpZmllZCBpbiB0aGUgY2VydGlmaWNhdGUgcG9saWN5IGFzIGRlc2NyaWJlZCBpbiB0aGlzIGRvY3VtZW50LiBBIFBLSSB0cnVzdCBzZXJ2aWNlIHByb3ZpZGVyIGlzIGEgc3BlY2lhbCBjbGFzcyBvZiB0cnVzdCBzZXJ2aWNlIGZvciB0aGUgdXNlIG9mIHB1YmxpYyBrZXkgY2VydGlmaWNhdGVzLiBUaGlzIGRvY3VtZW50IGRyYXdzIGEgZGlzdGluY3Rpb24gYmV0d2VlbiBQS0kgc3lzdGVtcyB1c2VkIGluIGNsb3NlZCwgb3BlbiBhbmQgY29udHJhY3R1YWwgZW52aXJvbm1lbnRzLiBUaGlzIGRvY3VtZW50IGlzIGludGVuZGVkIHRvIGZhY2lsaXRhdGUgdGhlIGltcGxlbWVudGF0aW9uIG9mIG9wZXJhdGlvbmFsLCBiYXNlbGluZSBjb250cm9scyBhbmQgcHJhY3RpY2VzIGluIGEgY29udHJhY3R1YWwgZW52aXJvbm1lbnQuIFdoaWxlIHRoZSBmb2N1cyBvZiB0aGlzIGRvY3VtZW50IGlzIG9uIHRoZSBjb250cmFjdHVhbCBlbnZpcm9ubWVudCwgYXBwbGljYXRpb24gb2YgdGhpcyBkb2N1bWVudCB0byBvcGVuIG9yIGNsb3NlZCBlbnZpcm9ubWVudHMgaXMgbm90IHNwZWNpZmljYWxseSBwcmVjbHVkZWQuICIsIm1hdGNoTGV2ZWwiOiJmdWxsIiwiZnVsbHlIaWdobGlnaHRlZCI6ZmFsc2UsIm1hdGNoZWRXb3JkcyI6WyJpc28iLCJpZWMiLCIyNzAwMSJdfX19LHsiY2F0ZWdvcnkiOiJzdGFuZGFyZCIsInBhdGgiOiIvc2l0ZXMvaXNvb3JnL2NvbnRlbnRzL2RhdGEvc3RhbmRhcmQvMDYvODAvNjgwOTEiLCJ1dWlkIjoiMzAzZGNlOTYtNDE4My00ZmRkLTg0MjItNTI1YzJlMDFkZTk5IiwidGl0bGUiOiJJU08vSUVDIDI3MDE5OjIwMTcgSW5mb3JtYXRpb24gdGVjaG5vbG9neSDigJQgU2VjdXJpdHkgdGVjaG5pcXVlcyDigJQgSW5mb3JtYXRpb24gc2VjdXJpdHkgY29udHJvbHMgZm9yIHRoZSBlbmVyZ3kgdXRpbGl0eSBpbmR1c3RyeSIsInN0YXR1cyI6IlB1Ymxpc2hlZCIsInllYXIiOjIwMjIsIm9yZGVyIjoxMSwidGV4dCI6IklTTy9JRUMgMjcwMTk6MjAxNyBwcm92aWRlcyBndWlkYW5jZSBiYXNlZCBvbiBJU08vSUVDIDI3MDAyOjIwMTMgYXBwbGllZCB0byBwcm9jZXNzIGNvbnRyb2wgc3lzdGVtcyB1c2VkIGJ5IHRoZSBlbmVyZ3kgdXRpbGl0eSBpbmR1c3RyeSBmb3IgY29udHJvbGxpbmcgYW5kIG1vbml0b3JpbmcgdGhlIHByb2R1Y3Rpb24gb3IgZ2VuZXJhdGlvbiwgdHJhbnNtaXNzaW9uLCBzdG9yYWdlIGFuZCBkaXN0cmlidXRpb24gb2YgZWxlY3RyaWMgcG93ZXIsIGdhcywgb2lsIGFuZCBoZWF0LCBhbmQgZm9yIHRoZSBjb250cm9sIG9mIGFzc29jaWF0ZWQgc3VwcG9ydGluZyBwcm9jZXNzZXMuIFRoaXMgaW5jbHVkZXMgaW4gcGFydGljdWxhciB0aGUgZm9sbG93aW5nOiAtICAgICAgY2VudHJhbCBhbmQgZGlzdHJpYnV0ZWQgcHJvY2VzcyBjb250cm9sLCBtb25pdG9yaW5nIGFuZCBhdXRvbWF0aW9uIHRlY2hub2xvZ3kgYXMgd2VsbCBhcyBpbmZvcm1hdGlvbiBzeXN0ZW1zIHVzZWQgZm9yIHRoZWlyIG9wZXJhdGlvbiwgc3VjaCBhcyBwcm9ncmFtbWluZyBhbmQgcGFyYW1ldGVyaXphdGlvbiBkZXZpY2VzOyAtICAgICAgZGlnaXRhbCBjb250cm9sbGVycyBhbmQgYXV0b21hdGlvbiBjb21wb25lbnRzIHN1Y2ggYXMgY29udHJvbCBhbmQgZmllbGQgZGV2aWNlcyBvciBQcm9ncmFtbWFibGUgTG9naWMgQ29udHJvbGxlcnMgKFBMQ3MpLCBpbmNsdWRpbmcgZGlnaXRhbCBzZW5zb3IgYW5kIGFjdHVhdG9yIGVsZW1lbnRzOyAtICAgICAgYWxsIGZ1cnRoZXIgc3VwcG9ydGluZyBpbmZvcm1hdGlvbiBzeXN0ZW1zIHVzZWQgaW4gdGhlIHByb2Nlc3MgY29udHJvbCBkb21haW4sIGUuZy4gZm9yIHN1cHBsZW1lbnRhcnkgZGF0YSB2aXN1YWxpemF0aW9uIHRhc2tzIGFuZCBmb3IgY29udHJvbGxpbmcsIG1vbml0b3JpbmcsIGRhdGEgYXJjaGl2aW5nLCBoaXN0b3JpYW4gbG9nZ2luZywgcmVwb3J0aW5nIGFuZCBkb2N1bWVudGF0aW9uIHB1cnBvc2VzOyAtICAgICAgY29tbXVuaWNhdGlvbiB0ZWNobm9sb2d5IHVzZWQgaW4gdGhlIHByb2Nlc3MgY29udHJvbCBkb21haW4sIGUuZy4gbmV0d29ya3MsIHRlbGVtZXRyeSwgdGVsZWNvbnRyb2wgYXBwbGljYXRpb25zIGFuZCByZW1vdGUgY29udHJvbCB0ZWNobm9sb2d5OyAtICAgICAgQWR2YW5jZWQgTWV0ZXJpbmcgSW5mcmFzdHJ1Y3R1cmUgKEFNSSkgY29tcG9uZW50cywgZS5nLiBzbWFydCBtZXRlcnM7IC0gICAgICBtZWFzdXJlbWVudCBkZXZpY2VzLCBlLmcuIGZvciBlbWlzc2lvbiB2YWx1ZXM7IC0gICAgICBkaWdpdGFsIHByb3RlY3Rpb24gYW5kIHNhZmV0eSBzeXN0ZW1zLCBlLmcuIHByb3RlY3Rpb24gcmVsYXlzLCBzYWZldHkgUExDcywgZW1lcmdlbmN5IGdvdmVybm9yIG1lY2hhbmlzbXM7IC0gICAgICBlbmVyZ3kgbWFuYWdlbWVudCBzeXN0ZW1zLCBlLmcuIG9mIERpc3RyaWJ1dGVkIEVuZXJneSBSZXNvdXJjZXMgKERFUiksIGVsZWN0cmljIGNoYXJnaW5nIGluZnJhc3RydWN0dXJlcywgaW4gcHJpdmF0ZSBob3VzZWhvbGRzLCByZXNpZGVudGlhbCBidWlsZGluZ3Mgb3IgaW5kdXN0cmlhbCBjdXN0b21lciBpbnN0YWxsYXRpb25zOyAtICAgICAgZGlzdHJpYnV0ZWQgY29tcG9uZW50cyBvZiBzbWFydCBncmlkIGVudmlyb25tZW50cywgZS5nLiBpbiBlbmVyZ3kgZ3JpZHMsIGluIHByaXZhdGUgaG91c2Vob2xkcywgcmVzaWRlbnRpYWwgYnVpbGRpbmdzIG9yIGluZHVzdHJpYWwgY3VzdG9tZXIgaW5zdGFsbGF0aW9uczsgLSAgICAgIGFsbCBzb2Z0d2FyZSwgZmlybXdhcmUgYW5kIGFwcGxpY2F0aW9ucyBpbnN0YWxsZWQgb24gYWJvdmUtbWVudGlvbmVkIHN5c3RlbXMsIGUuZy4gRE1TIChEaXN0cmlidXRpb24gTWFuYWdlbWVudCBTeXN0ZW0pIGFwcGxpY2F0aW9ucyBvciBPTVMgKE91dGFnZSBNYW5hZ2VtZW50IFN5c3RlbSk7IC0gICAgICBhbnkgcHJlbWlzZXMgaG91c2luZyB0aGUgYWJvdmUtbWVudGlvbmVkIGVxdWlwbWVudCBhbmQgc3lzdGVtczsgLSAgICAgIHJlbW90ZSBtYWludGVuYW5jZSBzeXN0ZW1zIGZvciBhYm92ZS1tZW50aW9uZWQgc3lzdGVtcy4gSVNPL0lFQyAyNzAxOToyMDE3IGRvZXMgbm90IGFwcGx5IHRvIHRoZSBwcm9jZXNzIGNvbnRyb2wgZG9tYWluIG9mIG51Y2xlYXIgZmFjaWxpdGllcy4gVGhpcyBkb21haW4gaXMgY292ZXJlZCBieSBJRUMgNjI2NDUuIElTTy9JRUMgMjcwMTk6MjAxNyBhbHNvIGluY2x1ZGVzIGEgcmVxdWlyZW1lbnQgdG8gYWRhcHQgdGhlIHJpc2sgYXNzZXNzbWVudCBhbmQgdHJlYXRtZW50IHByb2Nlc3NlcyBkZXNjcmliZWQgaW4gSVNPL0lFQyAyNzAwMToyMDEzIHRvIHRoZSBlbmVyZ3kgdXRpbGl0eSBpbmR1c3RyeS1zZWN0b3I/c3BlY2lmaWMgZ3VpZGFuY2UgcHJvdmlkZWQgaW4gdGhpcyBkb2N1bWVudC4gIiwib2JqZWN0SUQiOiI2ODA5MV8wIiwiX2hpZ2hsaWdodFJlc3VsdCI6eyJ0aXRsZSI6eyJ2YWx1ZSI6IjxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gMjcwMTk6MjAxNyBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBTZWN1cml0eSB0ZWNobmlxdWVzIOKAlCBJbmZvcm1hdGlvbiBzZWN1cml0eSBjb250cm9scyBmb3IgdGhlIGVuZXJneSB1dGlsaXR5IGluZHVzdHJ5IiwibWF0Y2hMZXZlbCI6InBhcnRpYWwiLCJmdWxseUhpZ2hsaWdodGVkIjpmYWxzZSwibWF0Y2hlZFdvcmRzIjpbImlzbyIsImllYyJdfSwidGV4dCI6eyJ2YWx1ZSI6IjxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gMjcwMTk6MjAxNyBwcm92aWRlcyBndWlkYW5jZSBiYXNlZCBvbiA8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDI3MDAyOjIwMTMgYXBwbGllZCB0byBwcm9jZXNzIGNvbnRyb2wgc3lzdGVtcyB1c2VkIGJ5IHRoZSBlbmVyZ3kgdXRpbGl0eSBpbmR1c3RyeSBmb3IgY29udHJvbGxpbmcgYW5kIG1vbml0b3JpbmcgdGhlIHByb2R1Y3Rpb24gb3IgZ2VuZXJhdGlvbiwgdHJhbnNtaXNzaW9uLCBzdG9yYWdlIGFuZCBkaXN0cmlidXRpb24gb2YgZWxlY3RyaWMgcG93ZXIsIGdhcywgb2lsIGFuZCBoZWF0LCBhbmQgZm9yIHRoZSBjb250cm9sIG9mIGFzc29jaWF0ZWQgc3VwcG9ydGluZyBwcm9jZXNzZXMuIFRoaXMgaW5jbHVkZXMgaW4gcGFydGljdWxhciB0aGUgZm9sbG93aW5nOiAtICAgICAgY2VudHJhbCBhbmQgZGlzdHJpYnV0ZWQgcHJvY2VzcyBjb250cm9sLCBtb25pdG9yaW5nIGFuZCBhdXRvbWF0aW9uIHRlY2hub2xvZ3kgYXMgd2VsbCBhcyBpbmZvcm1hdGlvbiBzeXN0ZW1zIHVzZWQgZm9yIHRoZWlyIG9wZXJhdGlvbiwgc3VjaCBhcyBwcm9ncmFtbWluZyBhbmQgcGFyYW1ldGVyaXphdGlvbiBkZXZpY2VzOyAtICAgICAgZGlnaXRhbCBjb250cm9sbGVycyBhbmQgYXV0b21hdGlvbiBjb21wb25lbnRzIHN1Y2ggYXMgY29udHJvbCBhbmQgZmllbGQgZGV2aWNlcyBvciBQcm9ncmFtbWFibGUgTG9naWMgQ29udHJvbGxlcnMgKFBMQ3MpLCBpbmNsdWRpbmcgZGlnaXRhbCBzZW5zb3IgYW5kIGFjdHVhdG9yIGVsZW1lbnRzOyAtICAgICAgYWxsIGZ1cnRoZXIgc3VwcG9ydGluZyBpbmZvcm1hdGlvbiBzeXN0ZW1zIHVzZWQgaW4gdGhlIHByb2Nlc3MgY29udHJvbCBkb21haW4sIGUuZy4gZm9yIHN1cHBsZW1lbnRhcnkgZGF0YSB2aXN1YWxpemF0aW9uIHRhc2tzIGFuZCBmb3IgY29udHJvbGxpbmcsIG1vbml0b3JpbmcsIGRhdGEgYXJjaGl2aW5nLCBoaXN0b3JpYW4gbG9nZ2luZywgcmVwb3J0aW5nIGFuZCBkb2N1bWVudGF0aW9uIHB1cnBvc2VzOyAtICAgICAgY29tbXVuaWNhdGlvbiB0ZWNobm9sb2d5IHVzZWQgaW4gdGhlIHByb2Nlc3MgY29udHJvbCBkb21haW4sIGUuZy4gbmV0d29ya3MsIHRlbGVtZXRyeSwgdGVsZWNvbnRyb2wgYXBwbGljYXRpb25zIGFuZCByZW1vdGUgY29udHJvbCB0ZWNobm9sb2d5OyAtICAgICAgQWR2YW5jZWQgTWV0ZXJpbmcgSW5mcmFzdHJ1Y3R1cmUgKEFNSSkgY29tcG9uZW50cywgZS5nLiBzbWFydCBtZXRlcnM7IC0gICAgICBtZWFzdXJlbWVudCBkZXZpY2VzLCBlLmcuIGZvciBlbWlzc2lvbiB2YWx1ZXM7IC0gICAgICBkaWdpdGFsIHByb3RlY3Rpb24gYW5kIHNhZmV0eSBzeXN0ZW1zLCBlLmcuIHByb3RlY3Rpb24gcmVsYXlzLCBzYWZldHkgUExDcywgZW1lcmdlbmN5IGdvdmVybm9yIG1lY2hhbmlzbXM7IC0gICAgICBlbmVyZ3kgbWFuYWdlbWVudCBzeXN0ZW1zLCBlLmcuIG9mIERpc3RyaWJ1dGVkIEVuZXJneSBSZXNvdXJjZXMgKERFUiksIGVsZWN0cmljIGNoYXJnaW5nIGluZnJhc3RydWN0dXJlcywgaW4gcHJpdmF0ZSBob3VzZWhvbGRzLCByZXNpZGVudGlhbCBidWlsZGluZ3Mgb3IgaW5kdXN0cmlhbCBjdXN0b21lciBpbnN0YWxsYXRpb25zOyAtICAgICAgZGlzdHJpYnV0ZWQgY29tcG9uZW50cyBvZiBzbWFydCBncmlkIGVudmlyb25tZW50cywgZS5nLiBpbiBlbmVyZ3kgZ3JpZHMsIGluIHByaXZhdGUgaG91c2Vob2xkcywgcmVzaWRlbnRpYWwgYnVpbGRpbmdzIG9yIGluZHVzdHJpYWwgY3VzdG9tZXIgaW5zdGFsbGF0aW9uczsgLSAgICAgIGFsbCBzb2Z0d2FyZSwgZmlybXdhcmUgYW5kIGFwcGxpY2F0aW9ucyBpbnN0YWxsZWQgb24gYWJvdmUtbWVudGlvbmVkIHN5c3RlbXMsIGUuZy4gRE1TIChEaXN0cmlidXRpb24gTWFuYWdlbWVudCBTeXN0ZW0pIGFwcGxpY2F0aW9ucyBvciBPTVMgKE91dGFnZSBNYW5hZ2VtZW50IFN5c3RlbSk7IC0gICAgICBhbnkgcHJlbWlzZXMgaG91c2luZyB0aGUgYWJvdmUtbWVudGlvbmVkIGVxdWlwbWVudCBhbmQgc3lzdGVtczsgLSAgICAgIHJlbW90ZSBtYWludGVuYW5jZSBzeXN0ZW1zIGZvciBhYm92ZS1tZW50aW9uZWQgc3lzdGVtcy4gPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiAyNzAxOToyMDE3IGRvZXMgbm90IGFwcGx5IHRvIHRoZSBwcm9jZXNzIGNvbnRyb2wgZG9tYWluIG9mIG51Y2xlYXIgZmFjaWxpdGllcy4gVGhpcyBkb21haW4gaXMgY292ZXJlZCBieSA8ZW0+SUVDPC9lbT4gNjI2NDUuIDxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gMjcwMTk6MjAxNyBhbHNvIGluY2x1ZGVzIGEgcmVxdWlyZW1lbnQgdG8gYWRhcHQgdGhlIHJpc2sgYXNzZXNzbWVudCBhbmQgdHJlYXRtZW50IHByb2Nlc3NlcyBkZXNjcmliZWQgaW4gPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiA8ZW0+MjcwMDE8L2VtPjoyMDEzIHRvIHRoZSBlbmVyZ3kgdXRpbGl0eSBpbmR1c3RyeS1zZWN0b3I/c3BlY2lmaWMgZ3VpZGFuY2UgcHJvdmlkZWQgaW4gdGhpcyBkb2N1bWVudC4gIiwibWF0Y2hMZXZlbCI6ImZ1bGwiLCJmdWxseUhpZ2hsaWdodGVkIjpmYWxzZSwibWF0Y2hlZFdvcmRzIjpbImlzbyIsImllYyIsIjI3MDAxIl19fX0seyJjYXRlZ29yeSI6InN0YW5kYXJkIiwicGF0aCI6Ii9zaXRlcy9pc29vcmcvY29udGVudHMvZGF0YS9zdGFuZGFyZC8wOC81MC84NTA1NiIsInV1aWQiOiJiMjcwYmY5MS04ZTliLTRhNmEtOTFmNi1iYzAwZDUxMzZlZTkiLCJ0aXRsZSI6IklTTy9JRUMgRElTIDI3MDE5IEluZm9ybWF0aW9uIHRlY2hub2xvZ3kg4oCUIFNlY3VyaXR5IHRlY2huaXF1ZXMg4oCUIEluZm9ybWF0aW9uIHNlY3VyaXR5IGNvbnRyb2xzIGZvciB0aGUgZW5lcmd5IHV0aWxpdHkgaW5kdXN0cnkiLCJzdGF0dXMiOiJVbmRlciBkZXZlbG9wbWVudCIsInllYXIiOjIwMjMsIm9yZGVyIjoxMiwidGV4dCI6IklTTy9JRUMgMjcwMTk6MjAxNyBwcm92aWRlcyBndWlkYW5jZSBiYXNlZCBvbiBJU08vSUVDIDI3MDAyOjIwMTMgYXBwbGllZCB0byBwcm9jZXNzIGNvbnRyb2wgc3lzdGVtcyB1c2VkIGJ5IHRoZSBlbmVyZ3kgdXRpbGl0eSBpbmR1c3RyeSBmb3IgY29udHJvbGxpbmcgYW5kIG1vbml0b3JpbmcgdGhlIHByb2R1Y3Rpb24gb3IgZ2VuZXJhdGlvbiwgdHJhbnNtaXNzaW9uLCBzdG9yYWdlIGFuZCBkaXN0cmlidXRpb24gb2YgZWxlY3RyaWMgcG93ZXIsIGdhcywgb2lsIGFuZCBoZWF0LCBhbmQgZm9yIHRoZSBjb250cm9sIG9mIGFzc29jaWF0ZWQgc3VwcG9ydGluZyBwcm9jZXNzZXMuIFRoaXMgaW5jbHVkZXMgaW4gcGFydGljdWxhciB0aGUgZm9sbG93aW5nOiAtIGNlbnRyYWwgYW5kIGRpc3RyaWJ1dGVkIHByb2Nlc3MgY29udHJvbCwgbW9uaXRvcmluZyBhbmQgYXV0b21hdGlvbiB0ZWNobm9sb2d5IGFzIHdlbGwgYXMgaW5mb3JtYXRpb24gc3lzdGVtcyB1c2VkIGZvciB0aGVpciBvcGVyYXRpb24sIHN1Y2ggYXMgcHJvZ3JhbW1pbmcgYW5kIHBhcmFtZXRlcml6YXRpb24gZGV2aWNlczsgLSBkaWdpdGFsIGNvbnRyb2xsZXJzIGFuZCBhdXRvbWF0aW9uIGNvbXBvbmVudHMgc3VjaCBhcyBjb250cm9sIGFuZCBmaWVsZCBkZXZpY2VzIG9yIFByb2dyYW1tYWJsZSBMb2dpYyBDb250cm9sbGVycyAoUExDcyksIGluY2x1ZGluZyBkaWdpdGFsIHNlbnNvciBhbmQgYWN0dWF0b3IgZWxlbWVudHM7IC0gYWxsIGZ1cnRoZXIgc3VwcG9ydGluZyBpbmZvcm1hdGlvbiBzeXN0ZW1zIHVzZWQgaW4gdGhlIHByb2Nlc3MgY29udHJvbCBkb21haW4sIGUuZy4gZm9yIHN1cHBsZW1lbnRhcnkgZGF0YSB2aXN1YWxpemF0aW9uIHRhc2tzIGFuZCBmb3IgY29udHJvbGxpbmcsIG1vbml0b3JpbmcsIGRhdGEgYXJjaGl2aW5nLCBoaXN0b3JpYW4gbG9nZ2luZywgcmVwb3J0aW5nIGFuZCBkb2N1bWVudGF0aW9uIHB1cnBvc2VzOyAtIGNvbW11bmljYXRpb24gdGVjaG5vbG9neSB1c2VkIGluIHRoZSBwcm9jZXNzIGNvbnRyb2wgZG9tYWluLCBlLmcuIG5ldHdvcmtzLCB0ZWxlbWV0cnksIHRlbGVjb250cm9sIGFwcGxpY2F0aW9ucyBhbmQgcmVtb3RlIGNvbnRyb2wgdGVjaG5vbG9neTsgLSBBZHZhbmNlZCBNZXRlcmluZyBJbmZyYXN0cnVjdHVyZSAoQU1JKSBjb21wb25lbnRzLCBlLmcuIHNtYXJ0IG1ldGVyczsgLSBtZWFzdXJlbWVudCBkZXZpY2VzLCBlLmcuIGZvciBlbWlzc2lvbiB2YWx1ZXM7IC0gZGlnaXRhbCBwcm90ZWN0aW9uIGFuZCBzYWZldHkgc3lzdGVtcywgZS5nLiBwcm90ZWN0aW9uIHJlbGF5cywgc2FmZXR5IFBMQ3MsIGVtZXJnZW5jeSBnb3Zlcm5vciBtZWNoYW5pc21zOyAtIGVuZXJneSBtYW5hZ2VtZW50IHN5c3RlbXMsIGUuZy4gb2YgRGlzdHJpYnV0ZWQgRW5lcmd5IFJlc291cmNlcyAoREVSKSwgZWxlY3RyaWMgY2hhcmdpbmcgaW5mcmFzdHJ1Y3R1cmVzLCBpbiBwcml2YXRlIGhvdXNlaG9sZHMsIHJlc2lkZW50aWFsIGJ1aWxkaW5ncyBvciBpbmR1c3RyaWFsIGN1c3RvbWVyIGluc3RhbGxhdGlvbnM7IC0gZGlzdHJpYnV0ZWQgY29tcG9uZW50cyBvZiBzbWFydCBncmlkIGVudmlyb25tZW50cywgZS5nLiBpbiBlbmVyZ3kgZ3JpZHMsIGluIHByaXZhdGUgaG91c2Vob2xkcywgcmVzaWRlbnRpYWwgYnVpbGRpbmdzIG9yIGluZHVzdHJpYWwgY3VzdG9tZXIgaW5zdGFsbGF0aW9uczsgLSBhbGwgc29mdHdhcmUsIGZpcm13YXJlIGFuZCBhcHBsaWNhdGlvbnMgaW5zdGFsbGVkIG9uIGFib3ZlLW1lbnRpb25lZCBzeXN0ZW1zLCBlLmcuIERNUyAoRGlzdHJpYnV0aW9uIE1hbmFnZW1lbnQgU3lzdGVtKSBhcHBsaWNhdGlvbnMgb3IgT01TIChPdXRhZ2UgTWFuYWdlbWVudCBTeXN0ZW0pOyAtIGFueSBwcmVtaXNlcyBob3VzaW5nIHRoZSBhYm92ZS1tZW50aW9uZWQgZXF1aXBtZW50IGFuZCBzeXN0ZW1zOyAtIHJlbW90ZSBtYWludGVuYW5jZSBzeXN0ZW1zIGZvciBhYm92ZS1tZW50aW9uZWQgc3lzdGVtcy4gSVNPL0lFQyAyNzAxOToyMDE3IGRvZXMgbm90IGFwcGx5IHRvIHRoZSBwcm9jZXNzIGNvbnRyb2wgZG9tYWluIG9mIG51Y2xlYXIgZmFjaWxpdGllcy4gVGhpcyBkb21haW4gaXMgY292ZXJlZCBieSBJRUMgNjI2NDUuIElTTy9JRUMgMjcwMTk6MjAxNyBhbHNvIGluY2x1ZGVzIGEgcmVxdWlyZW1lbnQgdG8gYWRhcHQgdGhlIHJpc2sgYXNzZXNzbWVudCBhbmQgdHJlYXRtZW50IHByb2Nlc3NlcyBkZXNjcmliZWQgaW4gSVNPL0lFQyAyNzAwMToyMDEzIHRvIHRoZSBlbmVyZ3kgdXRpbGl0eSBpbmR1c3RyeS1zZWN0b3I/c3BlY2lmaWMgZ3VpZGFuY2UgcHJvdmlkZWQgaW4gdGhpcyBkb2N1bWVudC4gIiwib2JqZWN0SUQiOiI4NTA1Nl8wIiwiX2hpZ2hsaWdodFJlc3VsdCI6eyJ0aXRsZSI6eyJ2YWx1ZSI6IjxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gRElTIDI3MDE5IEluZm9ybWF0aW9uIHRlY2hub2xvZ3kg4oCUIFNlY3VyaXR5IHRlY2huaXF1ZXMg4oCUIEluZm9ybWF0aW9uIHNlY3VyaXR5IGNvbnRyb2xzIGZvciB0aGUgZW5lcmd5IHV0aWxpdHkgaW5kdXN0cnkiLCJtYXRjaExldmVsIjoicGFydGlhbCIsImZ1bGx5SGlnaGxpZ2h0ZWQiOmZhbHNlLCJtYXRjaGVkV29yZHMiOlsiaXNvIiwiaWVjIl19LCJ0ZXh0Ijp7InZhbHVlIjoiPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiAyNzAxOToyMDE3IHByb3ZpZGVzIGd1aWRhbmNlIGJhc2VkIG9uIDxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gMjcwMDI6MjAxMyBhcHBsaWVkIHRvIHByb2Nlc3MgY29udHJvbCBzeXN0ZW1zIHVzZWQgYnkgdGhlIGVuZXJneSB1dGlsaXR5IGluZHVzdHJ5IGZvciBjb250cm9sbGluZyBhbmQgbW9uaXRvcmluZyB0aGUgcHJvZHVjdGlvbiBvciBnZW5lcmF0aW9uLCB0cmFuc21pc3Npb24sIHN0b3JhZ2UgYW5kIGRpc3RyaWJ1dGlvbiBvZiBlbGVjdHJpYyBwb3dlciwgZ2FzLCBvaWwgYW5kIGhlYXQsIGFuZCBmb3IgdGhlIGNvbnRyb2wgb2YgYXNzb2NpYXRlZCBzdXBwb3J0aW5nIHByb2Nlc3Nlcy4gVGhpcyBpbmNsdWRlcyBpbiBwYXJ0aWN1bGFyIHRoZSBmb2xsb3dpbmc6IC0gY2VudHJhbCBhbmQgZGlzdHJpYnV0ZWQgcHJvY2VzcyBjb250cm9sLCBtb25pdG9yaW5nIGFuZCBhdXRvbWF0aW9uIHRlY2hub2xvZ3kgYXMgd2VsbCBhcyBpbmZvcm1hdGlvbiBzeXN0ZW1zIHVzZWQgZm9yIHRoZWlyIG9wZXJhdGlvbiwgc3VjaCBhcyBwcm9ncmFtbWluZyBhbmQgcGFyYW1ldGVyaXphdGlvbiBkZXZpY2VzOyAtIGRpZ2l0YWwgY29udHJvbGxlcnMgYW5kIGF1dG9tYXRpb24gY29tcG9uZW50cyBzdWNoIGFzIGNvbnRyb2wgYW5kIGZpZWxkIGRldmljZXMgb3IgUHJvZ3JhbW1hYmxlIExvZ2ljIENvbnRyb2xsZXJzIChQTENzKSwgaW5jbHVkaW5nIGRpZ2l0YWwgc2Vuc29yIGFuZCBhY3R1YXRvciBlbGVtZW50czsgLSBhbGwgZnVydGhlciBzdXBwb3J0aW5nIGluZm9ybWF0aW9uIHN5c3RlbXMgdXNlZCBpbiB0aGUgcHJvY2VzcyBjb250cm9sIGRvbWFpbiwgZS5nLiBmb3Igc3VwcGxlbWVudGFyeSBkYXRhIHZpc3VhbGl6YXRpb24gdGFza3MgYW5kIGZvciBjb250cm9sbGluZywgbW9uaXRvcmluZywgZGF0YSBhcmNoaXZpbmcsIGhpc3RvcmlhbiBsb2dnaW5nLCByZXBvcnRpbmcgYW5kIGRvY3VtZW50YXRpb24gcHVycG9zZXM7IC0gY29tbXVuaWNhdGlvbiB0ZWNobm9sb2d5IHVzZWQgaW4gdGhlIHByb2Nlc3MgY29udHJvbCBkb21haW4sIGUuZy4gbmV0d29ya3MsIHRlbGVtZXRyeSwgdGVsZWNvbnRyb2wgYXBwbGljYXRpb25zIGFuZCByZW1vdGUgY29udHJvbCB0ZWNobm9sb2d5OyAtIEFkdmFuY2VkIE1ldGVyaW5nIEluZnJhc3RydWN0dXJlIChBTUkpIGNvbXBvbmVudHMsIGUuZy4gc21hcnQgbWV0ZXJzOyAtIG1lYXN1cmVtZW50IGRldmljZXMsIGUuZy4gZm9yIGVtaXNzaW9uIHZhbHVlczsgLSBkaWdpdGFsIHByb3RlY3Rpb24gYW5kIHNhZmV0eSBzeXN0ZW1zLCBlLmcuIHByb3RlY3Rpb24gcmVsYXlzLCBzYWZldHkgUExDcywgZW1lcmdlbmN5IGdvdmVybm9yIG1lY2hhbmlzbXM7IC0gZW5lcmd5IG1hbmFnZW1lbnQgc3lzdGVtcywgZS5nLiBvZiBEaXN0cmlidXRlZCBFbmVyZ3kgUmVzb3VyY2VzIChERVIpLCBlbGVjdHJpYyBjaGFyZ2luZyBpbmZyYXN0cnVjdHVyZXMsIGluIHByaXZhdGUgaG91c2Vob2xkcywgcmVzaWRlbnRpYWwgYnVpbGRpbmdzIG9yIGluZHVzdHJpYWwgY3VzdG9tZXIgaW5zdGFsbGF0aW9uczsgLSBkaXN0cmlidXRlZCBjb21wb25lbnRzIG9mIHNtYXJ0IGdyaWQgZW52aXJvbm1lbnRzLCBlLmcuIGluIGVuZXJneSBncmlkcywgaW4gcHJpdmF0ZSBob3VzZWhvbGRzLCByZXNpZGVudGlhbCBidWlsZGluZ3Mgb3IgaW5kdXN0cmlhbCBjdXN0b21lciBpbnN0YWxsYXRpb25zOyAtIGFsbCBzb2Z0d2FyZSwgZmlybXdhcmUgYW5kIGFwcGxpY2F0aW9ucyBpbnN0YWxsZWQgb24gYWJvdmUtbWVudGlvbmVkIHN5c3RlbXMsIGUuZy4gRE1TIChEaXN0cmlidXRpb24gTWFuYWdlbWVudCBTeXN0ZW0pIGFwcGxpY2F0aW9ucyBvciBPTVMgKE91dGFnZSBNYW5hZ2VtZW50IFN5c3RlbSk7IC0gYW55IHByZW1pc2VzIGhvdXNpbmcgdGhlIGFib3ZlLW1lbnRpb25lZCBlcXVpcG1lbnQgYW5kIHN5c3RlbXM7IC0gcmVtb3RlIG1haW50ZW5hbmNlIHN5c3RlbXMgZm9yIGFib3ZlLW1lbnRpb25lZCBzeXN0ZW1zLiA8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDI3MDE5OjIwMTcgZG9lcyBub3QgYXBwbHkgdG8gdGhlIHByb2Nlc3MgY29udHJvbCBkb21haW4gb2YgbnVjbGVhciBmYWNpbGl0aWVzLiBUaGlzIGRvbWFpbiBpcyBjb3ZlcmVkIGJ5IDxlbT5JRUM8L2VtPiA2MjY0NS4gPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiAyNzAxOToyMDE3IGFsc28gaW5jbHVkZXMgYSByZXF1aXJlbWVudCB0byBhZGFwdCB0aGUgcmlzayBhc3Nlc3NtZW50IGFuZCB0cmVhdG1lbnQgcHJvY2Vzc2VzIGRlc2NyaWJlZCBpbiA8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDxlbT4yNzAwMTwvZW0+OjIwMTMgdG8gdGhlIGVuZXJneSB1dGlsaXR5IGluZHVzdHJ5LXNlY3Rvcj9zcGVjaWZpYyBndWlkYW5jZSBwcm92aWRlZCBpbiB0aGlzIGRvY3VtZW50LiAiLCJtYXRjaExldmVsIjoiZnVsbCIsImZ1bGx5SGlnaGxpZ2h0ZWQiOmZhbHNlLCJtYXRjaGVkV29yZHMiOlsiaXNvIiwiaWVjIiwiMjcwMDEiXX19fV0sIm5iSGl0cyI6NDIsInBhZ2UiOjAsIm5iUGFnZXMiOjEsImhpdHNQZXJQYWdlIjoxMDAsImV4aGF1c3RpdmVOYkhpdHMiOnRydWUsImV4aGF1c3RpdmVUeXBvIjp0cnVlLCJleGhhdXN0aXZlIjp7Im5iSGl0cyI6dHJ1ZSwidHlwbyI6dHJ1ZX0sInF1ZXJ5IjoiSVNPL0lFQyAyNzAwMSIsInBhcmFtcyI6InF1ZXJ5PUlTTyUyRklFQysyNzAwMSZoaXRzUGVyUGFnZT0xMDAmZmlsdGVycz1jYXRlZ29yeSUzQXN0YW5kYXJkIiwicXVlcnlJRCI6IjFlZWI0NTJlNzI5ZmExODRlNjY3NzdkOWVmMTgxMDc4IiwiX2F1dG9tYXRpY0luc2lnaHRzIjp0cnVlLCJyZW5kZXJpbmdDb250ZW50Ijp7fSwicHJvY2Vzc2luZ1RpbWVNUyI6NCwicHJvY2Vzc2luZ1RpbWluZ3NNUyI6eyJfcmVxdWVzdCI6eyJyb3VuZFRyaXAiOjMwMn0sImFmdGVyRmV0Y2giOnsiZm9ybWF0Ijp7ImhpZ2hsaWdodGluZyI6MSwidG90YWwiOjF9LCJtZXJnZSI6eyJ0b3RhbCI6Mn0sInRvdGFsIjoyfSwiZXh0cmFjdERvY3NUb1Byb21vdGUiOjEsInRvdGFsIjo0fSwic2VydmVyVGltZU1TIjo0fQ==
  recorded_at: Thu, 28 Dec 2023 16:48:08 GMT
- request:
    method: post
    uri: https://jcl49wv5ar-dsn.algolia.net/1/indexes/all_en/query
    body:
      encoding: UTF-8
      string: '{"query":"ISO/IEC 2382","hitsPerPage":100,"filters":"category:standard"}'
    headers:
      User-Agent:
      - Algolia for Ruby (2.3.4), Ruby (3.2.2)
      X-Algolia-Api-Key:
      - dd1b9e1ab383f4d4817d29cd5e96d3f0
      X-Algolia-Application-Id:
      - JCL49WV5AR
      Content-Type:
      - application/json; charset=utf-8
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      Connection:
      - keep-alive
      Keep-Alive:
      - '30'
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Thu, 28 Dec 2023 16:48:08 GMT
      Content-Type:
      - application/json; charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      X-Alg-Pt:
      - '1'
      Accept-Encoding:
      - deflate, gzip
      Cache-Control:
      - no-store
      Access-Control-Allow-Origin:
      - "*"
      Timing-Allow-Origin:
      - "*"
      X-Content-Type-Options:
      - nosniff
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Content-Disposition:
      - inline; filename=a.txt
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJoaXRzIjpbeyJjYXRlZ29yeSI6InN0YW5kYXJkIiwicGF0aCI6Ii9zaXRlcy9pc29vcmcvY29udGVudHMvZGF0YS9zdGFuZGFyZC8wNy8zNS83MzUxNCIsInV1aWQiOiJjMWE4MmVhOS01YzQzLTRlNGMtYTk1NC01YjJlY2ZmZGQ5MzkiLCJ0aXRsZSI6IklTTy9JRUMgMjM4Mi0zNzoyMDIyIEluZm9ybWF0aW9uIHRlY2hub2xvZ3kg4oCUIFZvY2FidWxhcnkg4oCUIFBhcnQgMzc6IEJpb21ldHJpY3MiLCJzdGF0dXMiOiJQdWJsaXNoZWQiLCJ5ZWFyIjoyMDIyLCJvcmRlciI6MTEsInRleHQiOiJUaGlzIGRvY3VtZW50IGVzdGFibGlzaGVzIGEgc3lzdGVtYXRpYyBkZXNjcmlwdGlvbiBvZiB0aGUgY29uY2VwdHMgaW4gdGhlIGZpZWxkIG9mIGJpb21ldHJpY3MgcGVydGFpbmluZyB0byByZWNvZ25pdGlvbiBvZiBodW1hbiBiZWluZ3MuIFRoaXMgZG9jdW1lbnQgYWxzbyByZWNvbmNpbGVzIHZhcmlhbnQgdGVybXMgaW4gdXNlIGluIHByZS1leGlzdGluZyBJbnRlcm5hdGlvbmFsIFN0YW5kYXJkcyBvbiBiaW9tZXRyaWNzIGFnYWluc3QgdGhlIHByZWZlcnJlZCB0ZXJtcywgdGhlcmVieSBjbGFyaWZ5aW5nIHRoZSB1c2Ugb2YgdGVybXMgaW4gdGhpcyBmaWVsZC4gVGhpcyBkb2N1bWVudCBkb2VzIG5vdCBjb3ZlciBjb25jZXB0cyAocmVwcmVzZW50ZWQgYnkgdGVybXMpIGZyb20gaW5mb3JtYXRpb24gdGVjaG5vbG9neSwgcGF0dGVybiByZWNvZ25pdGlvbiwgYmlvbG9neSwgbWF0aGVtYXRpY3MsIGV0Yy4gQmlvbWV0cmljcyB1c2VzIHN1Y2ggZmllbGRzIG9mIGtub3dsZWRnZSBhcyBhIGJhc2lzLiBJbiBwcmluY2lwbGUsIG1vZGUtc3BlY2lmaWMgdGVybXMgYXJlIG91dHNpZGUgb2Ygc2NvcGUgb2YgdGhpcyBkb2N1bWVudC4gIiwib2JqZWN0SUQiOiI3MzUxNF8wIiwiX2hpZ2hsaWdodFJlc3VsdCI6eyJ0aXRsZSI6eyJ2YWx1ZSI6IjxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gPGVtPjIzODI8L2VtPi0zNzoyMDIyIEluZm9ybWF0aW9uIHRlY2hub2xvZ3kg4oCUIFZvY2FidWxhcnkg4oCUIFBhcnQgMzc6IEJpb21ldHJpY3MiLCJtYXRjaExldmVsIjoiZnVsbCIsImZ1bGx5SGlnaGxpZ2h0ZWQiOmZhbHNlLCJtYXRjaGVkV29yZHMiOlsiaXNvIiwiaWVjIiwiMjM4MiJdfSwidGV4dCI6eyJ2YWx1ZSI6IlRoaXMgZG9jdW1lbnQgZXN0YWJsaXNoZXMgYSBzeXN0ZW1hdGljIGRlc2NyaXB0aW9uIG9mIHRoZSBjb25jZXB0cyBpbiB0aGUgZmllbGQgb2YgYmlvbWV0cmljcyBwZXJ0YWluaW5nIHRvIHJlY29nbml0aW9uIG9mIGh1bWFuIGJlaW5ncy4gVGhpcyBkb2N1bWVudCBhbHNvIHJlY29uY2lsZXMgdmFyaWFudCB0ZXJtcyBpbiB1c2UgaW4gcHJlLWV4aXN0aW5nIEludGVybmF0aW9uYWwgU3RhbmRhcmRzIG9uIGJpb21ldHJpY3MgYWdhaW5zdCB0aGUgcHJlZmVycmVkIHRlcm1zLCB0aGVyZWJ5IGNsYXJpZnlpbmcgdGhlIHVzZSBvZiB0ZXJtcyBpbiB0aGlzIGZpZWxkLiBUaGlzIGRvY3VtZW50IGRvZXMgbm90IGNvdmVyIGNvbmNlcHRzIChyZXByZXNlbnRlZCBieSB0ZXJtcykgZnJvbSBpbmZvcm1hdGlvbiB0ZWNobm9sb2d5LCBwYXR0ZXJuIHJlY29nbml0aW9uLCBiaW9sb2d5LCBtYXRoZW1hdGljcywgZXRjLiBCaW9tZXRyaWNzIHVzZXMgc3VjaCBmaWVsZHMgb2Yga25vd2xlZGdlIGFzIGEgYmFzaXMuIEluIHByaW5jaXBsZSwgbW9kZS1zcGVjaWZpYyB0ZXJtcyBhcmUgb3V0c2lkZSBvZiBzY29wZSBvZiB0aGlzIGRvY3VtZW50LiAiLCJtYXRjaExldmVsIjoibm9uZSIsIm1hdGNoZWRXb3JkcyI6W119fX0seyJjYXRlZ29yeSI6InN0YW5kYXJkIiwicGF0aCI6Ii9zaXRlcy9pc29vcmcvY29udGVudHMvZGF0YS9zdGFuZGFyZC8wNi8zNS82MzU5OCIsInV1aWQiOiI2MzNkYzQ0Yy05OTg0LTQ3ZTAtODgwMy1lNDg5MmU4NDhiN2QiLCJ0aXRsZSI6IklTTy9JRUMgMjM4MjoyMDE1IEluZm9ybWF0aW9uIHRlY2hub2xvZ3kg4oCUIFZvY2FidWxhcnkiLCJzdGF0dXMiOiJQdWJsaXNoZWQiLCJ5ZWFyIjoyMDIwLCJvcmRlciI6MTEsInRleHQiOiJUaGlzIHN0YW5kYXJkIG9mIHZvY2FidWxhcnkgdGFrZW4gZnJvbSB0aGUgbXVsdGktcGFydCBJU08vSUVDIDIzODIgc3RhbmRhcmQgaXMgcHJlc2VudGVkIGluIGxhbmd1YWdlLXNwZWNpZmljIG9yZGVyIGFuZCBpcyBpbnRlbmRlZCB0byBmYWNpbGl0YXRlIGludGVybmF0aW9uYWwgY29tbXVuaWNhdGlvbiBpbiBpbmZvcm1hdGlvbiB0ZWNobm9sb2d5LiBJdCBwcmVzZW50cywgaW4gdHdvIGxhbmd1YWdlcywgdGVybXMgYW5kIGRlZmluaXRpb25zIG9mIHNlbGVjdGVkIGNvbmNlcHRzIHJlbGV2YW50IHRvIHRoaXMgZmllbGQuIEluIG9yZGVyIHRvIGZhY2lsaXRhdGUgdGhlaXIgdHJhbnNsYXRpb24gaW50byBvdGhlciBsYW5ndWFnZXMsIHRoZSBkZWZpbml0aW9ucyBhcmUgZHJhZnRlZCBzbyBhcyB0byBhdm9pZCwgYXMgZmFyIGFzIHBvc3NpYmxlLCBhbnkgcGVjdWxpYXJpdHkgYXR0YWNoZWQgdG8gYSBsYW5ndWFnZS4gIiwib2JqZWN0SUQiOiI2MzU5OF8wIiwiX2hpZ2hsaWdodFJlc3VsdCI6eyJ0aXRsZSI6eyJ2YWx1ZSI6IjxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gPGVtPjIzODI8L2VtPjoyMDE1IEluZm9ybWF0aW9uIHRlY2hub2xvZ3kg4oCUIFZvY2FidWxhcnkiLCJtYXRjaExldmVsIjoiZnVsbCIsImZ1bGx5SGlnaGxpZ2h0ZWQiOmZhbHNlLCJtYXRjaGVkV29yZHMiOlsiaXNvIiwiaWVjIiwiMjM4MiJdfSwidGV4dCI6eyJ2YWx1ZSI6IlRoaXMgc3RhbmRhcmQgb2Ygdm9jYWJ1bGFyeSB0YWtlbiBmcm9tIHRoZSBtdWx0aS1wYXJ0IDxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gPGVtPjIzODI8L2VtPiBzdGFuZGFyZCBpcyBwcmVzZW50ZWQgaW4gbGFuZ3VhZ2Utc3BlY2lmaWMgb3JkZXIgYW5kIGlzIGludGVuZGVkIHRvIGZhY2lsaXRhdGUgaW50ZXJuYXRpb25hbCBjb21tdW5pY2F0aW9uIGluIGluZm9ybWF0aW9uIHRlY2hub2xvZ3kuIEl0IHByZXNlbnRzLCBpbiB0d28gbGFuZ3VhZ2VzLCB0ZXJtcyBhbmQgZGVmaW5pdGlvbnMgb2Ygc2VsZWN0ZWQgY29uY2VwdHMgcmVsZXZhbnQgdG8gdGhpcyBmaWVsZC4gSW4gb3JkZXIgdG8gZmFjaWxpdGF0ZSB0aGVpciB0cmFuc2xhdGlvbiBpbnRvIG90aGVyIGxhbmd1YWdlcywgdGhlIGRlZmluaXRpb25zIGFyZSBkcmFmdGVkIHNvIGFzIHRvIGF2b2lkLCBhcyBmYXIgYXMgcG9zc2libGUsIGFueSBwZWN1bGlhcml0eSBhdHRhY2hlZCB0byBhIGxhbmd1YWdlLiAiLCJtYXRjaExldmVsIjoiZnVsbCIsImZ1bGx5SGlnaGxpZ2h0ZWQiOmZhbHNlLCJtYXRjaGVkV29yZHMiOlsiaXNvIiwiaWVjIiwiMjM4MiJdfX19LHsiY2F0ZWdvcnkiOiJzdGFuZGFyZCIsInBhdGgiOiIvc2l0ZXMvaXNvb3JnL2NvbnRlbnRzL2RhdGEvc3RhbmRhcmQvMDYvNjYvNjY2OTIiLCJ1dWlkIjoiZWIzY2M5ZjQtMzU5YS00YzY0LWE2ZjItNzQ3Y2M2ZWQ2ZTUxIiwidGl0bGUiOiJJU08vSUVDIDIzODItMzY6MjAxOSBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBWb2NhYnVsYXJ5IOKAlCBQYXJ0IDM2OiBMZWFybmluZywgZWR1Y2F0aW9uIGFuZCB0cmFpbmluZyIsInN0YXR1cyI6IlB1Ymxpc2hlZCIsInllYXIiOjIwMTksIm9yZGVyIjoxMSwidGV4dCI6IlRoaXMgZG9jdW1lbnQgcHJvdmlkZXMgdGVybXMgYW5kIGRlZmluaXRpb25zIGZvciB2b2NhYnVsYXJ5IHVzZWQgaW4gdGhlIGZpZWxkIG9mIGxlYXJuaW5nLCBlZHVjYXRpb24gYW5kIHRyYWluaW5nIChMRVQpIHRvIGZhY2lsaXRhdGUgaW50ZXJuYXRpb25hbCBjb21tdW5pY2F0aW9uIGluIHRoZSBmaWVsZC4gVGhpcyBkb2N1bWVudCBhbHNvIGlkZW50aWZpZXMgYW5kIHByb3ZpZGVzIHRoZSByZWxhdGlvbnNoaXBzIGFtb25nIHRoZSB2b2NhYnVsYXJ5IGVuc3VyaW5nIGEgY29oZXNpdmUgYW5kIGhhcm1vbml6ZWQgYXBwcm9hY2guICIsIm9iamVjdElEIjoiNjY2OTJfMCIsIl9oaWdobGlnaHRSZXN1bHQiOnsidGl0bGUiOnsidmFsdWUiOiI8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDxlbT4yMzgyPC9lbT4tMzY6MjAxOSBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBWb2NhYnVsYXJ5IOKAlCBQYXJ0IDM2OiBMZWFybmluZywgZWR1Y2F0aW9uIGFuZCB0cmFpbmluZyIsIm1hdGNoTGV2ZWwiOiJmdWxsIiwiZnVsbHlIaWdobGlnaHRlZCI6ZmFsc2UsIm1hdGNoZWRXb3JkcyI6WyJpc28iLCJpZWMiLCIyMzgyIl19LCJ0ZXh0Ijp7InZhbHVlIjoiVGhpcyBkb2N1bWVudCBwcm92aWRlcyB0ZXJtcyBhbmQgZGVmaW5pdGlvbnMgZm9yIHZvY2FidWxhcnkgdXNlZCBpbiB0aGUgZmllbGQgb2YgbGVhcm5pbmcsIGVkdWNhdGlvbiBhbmQgdHJhaW5pbmcgKExFVCkgdG8gZmFjaWxpdGF0ZSBpbnRlcm5hdGlvbmFsIGNvbW11bmljYXRpb24gaW4gdGhlIGZpZWxkLiBUaGlzIGRvY3VtZW50IGFsc28gaWRlbnRpZmllcyBhbmQgcHJvdmlkZXMgdGhlIHJlbGF0aW9uc2hpcHMgYW1vbmcgdGhlIHZvY2FidWxhcnkgZW5zdXJpbmcgYSBjb2hlc2l2ZSBhbmQgaGFybW9uaXplZCBhcHByb2FjaC4gIiwibWF0Y2hMZXZlbCI6Im5vbmUiLCJtYXRjaGVkV29yZHMiOltdfX19LHsiY2F0ZWdvcnkiOiJzdGFuZGFyZCIsInBhdGgiOiIvc2l0ZXMvaXNvb3JnL2NvbnRlbnRzL2RhdGEvc3RhbmRhcmQvMDYvNjYvNjY2OTMiLCJ1dWlkIjoiMGIwNjdiNzMtMWY4YS00NTQ4LWFjZDctNzBiYjlhZTFiNWZlIiwidGl0bGUiOiJJU08vSUVDIDIzODItMzc6MjAxNyBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBWb2NhYnVsYXJ5IOKAlCBQYXJ0IDM3OiBCaW9tZXRyaWNzIiwic3RhdHVzIjoiV2l0aGRyYXduIiwieWVhciI6MjAyMiwib3JkZXIiOjEwMCwidGV4dCI6IklTTy9JRUMgMjM4Mi0zNzoyMDE3IGVzdGFibGlzaGVzIGEgc3lzdGVtYXRpYyBkZXNjcmlwdGlvbiBvZiB0aGUgY29uY2VwdHMgaW4gdGhlIGZpZWxkIG9mIGJpb21ldHJpY3MgcGVydGFpbmluZyB0byByZWNvZ25pdGlvbiBvZiBodW1hbiBiZWluZ3MgYW5kIHJlY29uY2lsZXMgdmFyaWFudCB0ZXJtcyBpbiB1c2UgaW4gcHJlLWV4aXN0aW5nIGJpb21ldHJpYyBzdGFuZGFyZHMgYWdhaW5zdCB0aGUgcHJlZmVycmVkIHRlcm1zLCB0aGVyZWJ5IGNsYXJpZnlpbmcgdGhlIHVzZSBvZiB0ZXJtcyBpbiB0aGlzIGZpZWxkLiBFeGNsdWRlZCBmcm9tIHRoZSBzY29wZSBvZiB0aGlzIGRvY3VtZW50IGFyZSBjb25jZXB0cyAocmVwcmVzZW50ZWQgYnkgdGVybXMpIGZyb20gaW5mb3JtYXRpb24gdGVjaG5vbG9neSwgcGF0dGVybiByZWNvZ25pdGlvbiwgYmlvbG9neSwgbWF0aGVtYXRpY3MsIGV0Yy4gQmlvbWV0cmljcyB1c2VzIHN1Y2ggZmllbGRzIG9mIGtub3dsZWRnZSBhcyBhIGJhc2lzLiBJbiBwcmluY2lwbGUsIG1vZGUgc3BlY2lmaWMgdGVybXMgYXJlIG91dHNpZGUgb2Ygc2NvcGUgb2YgdGhpcyBkb2N1bWVudC4gV29yZHMgdGhhdCBhcmUgYm9sZGVkIGFyZSBkZWZpbmVkIGluIHRoaXMgZG9jdW1lbnQuIFdvcmRzIHRoYXQgYXJlIG5vdCBib2xkZWQgYXJlIHVuZGVyc3Rvb2QgaW4gdGhlaXIgbmF0dXJhbCBsYW5ndWFnZSBzZW5zZS4gVGhlIGF1dGhvcml0eSBmb3IgbmF0dXJhbCBsYW5ndWFnZSB1c2Ugb2YgdGVybXMgaW4gdGhpcyBkb2N1bWVudCBpcyB0aGUgQ29uY2lzZSBPeGZvcmQgRW5nbGlzaCBEaWN0aW9uYXJ5LCBUaHVtYiBJbmRleCBFZGl0aW9uICh0ZW50aCBlZGl0aW9uLCByZXZpc2VkLCAyMDAyKS4gV29yZHMgdXNlZCBpbiB0aGVpciBuYXR1cmFsIGxhbmd1YWdlIHNlbnNlIGFyZSBjb25zaWRlcmVkIG91dC1vZi1zY29wZSBmb3IgZnVydGhlciBkZWZpbml0aW9uIGluIHRoaXMgZG9jdW1lbnQuICIsIm9iamVjdElEIjoiNjY2OTNfMCIsIl9oaWdobGlnaHRSZXN1bHQiOnsidGl0bGUiOnsidmFsdWUiOiI8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDxlbT4yMzgyPC9lbT4tMzc6MjAxNyBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBWb2NhYnVsYXJ5IOKAlCBQYXJ0IDM3OiBCaW9tZXRyaWNzIiwibWF0Y2hMZXZlbCI6ImZ1bGwiLCJmdWxseUhpZ2hsaWdodGVkIjpmYWxzZSwibWF0Y2hlZFdvcmRzIjpbImlzbyIsImllYyIsIjIzODIiXX0sInRleHQiOnsidmFsdWUiOiI8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDxlbT4yMzgyPC9lbT4tMzc6MjAxNyBlc3RhYmxpc2hlcyBhIHN5c3RlbWF0aWMgZGVzY3JpcHRpb24gb2YgdGhlIGNvbmNlcHRzIGluIHRoZSBmaWVsZCBvZiBiaW9tZXRyaWNzIHBlcnRhaW5pbmcgdG8gcmVjb2duaXRpb24gb2YgaHVtYW4gYmVpbmdzIGFuZCByZWNvbmNpbGVzIHZhcmlhbnQgdGVybXMgaW4gdXNlIGluIHByZS1leGlzdGluZyBiaW9tZXRyaWMgc3RhbmRhcmRzIGFnYWluc3QgdGhlIHByZWZlcnJlZCB0ZXJtcywgdGhlcmVieSBjbGFyaWZ5aW5nIHRoZSB1c2Ugb2YgdGVybXMgaW4gdGhpcyBmaWVsZC4gRXhjbHVkZWQgZnJvbSB0aGUgc2NvcGUgb2YgdGhpcyBkb2N1bWVudCBhcmUgY29uY2VwdHMgKHJlcHJlc2VudGVkIGJ5IHRlcm1zKSBmcm9tIGluZm9ybWF0aW9uIHRlY2hub2xvZ3ksIHBhdHRlcm4gcmVjb2duaXRpb24sIGJpb2xvZ3ksIG1hdGhlbWF0aWNzLCBldGMuIEJpb21ldHJpY3MgdXNlcyBzdWNoIGZpZWxkcyBvZiBrbm93bGVkZ2UgYXMgYSBiYXNpcy4gSW4gcHJpbmNpcGxlLCBtb2RlIHNwZWNpZmljIHRlcm1zIGFyZSBvdXRzaWRlIG9mIHNjb3BlIG9mIHRoaXMgZG9jdW1lbnQuIFdvcmRzIHRoYXQgYXJlIGJvbGRlZCBhcmUgZGVmaW5lZCBpbiB0aGlzIGRvY3VtZW50LiBXb3JkcyB0aGF0IGFyZSBub3QgYm9sZGVkIGFyZSB1bmRlcnN0b29kIGluIHRoZWlyIG5hdHVyYWwgbGFuZ3VhZ2Ugc2Vuc2UuIFRoZSBhdXRob3JpdHkgZm9yIG5hdHVyYWwgbGFuZ3VhZ2UgdXNlIG9mIHRlcm1zIGluIHRoaXMgZG9jdW1lbnQgaXMgdGhlIENvbmNpc2UgT3hmb3JkIEVuZ2xpc2ggRGljdGlvbmFyeSwgVGh1bWIgSW5kZXggRWRpdGlvbiAodGVudGggZWRpdGlvbiwgcmV2aXNlZCwgMjAwMikuIFdvcmRzIHVzZWQgaW4gdGhlaXIgbmF0dXJhbCBsYW5ndWFnZSBzZW5zZSBhcmUgY29uc2lkZXJlZCBvdXQtb2Ytc2NvcGUgZm9yIGZ1cnRoZXIgZGVmaW5pdGlvbiBpbiB0aGlzIGRvY3VtZW50LiAiLCJtYXRjaExldmVsIjoiZnVsbCIsImZ1bGx5SGlnaGxpZ2h0ZWQiOmZhbHNlLCJtYXRjaGVkV29yZHMiOlsiaXNvIiwiaWVjIiwiMjM4MiJdfX19LHsiY2F0ZWdvcnkiOiJzdGFuZGFyZCIsInBhdGgiOiIvc2l0ZXMvaXNvb3JnL2NvbnRlbnRzL2RhdGEvc3RhbmRhcmQvMDYvMzkvNjM5OTYiLCJ1dWlkIjoiMWFkYzJkMzgtNTNkZi00ODRhLWFjNzEtMzMyNmUzYWZjZTAwIiwidGl0bGUiOiJJU08vSUVDIDIzODItMzY6MjAxMyBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBWb2NhYnVsYXJ5IOKAlCBQYXJ0IDM2OiBMZWFybmluZywgZWR1Y2F0aW9uIGFuZCB0cmFpbmluZyIsInN0YXR1cyI6IldpdGhkcmF3biIsInllYXIiOjIwMTksIm9yZGVyIjoxMDAsInRleHQiOiJJU08vSUVDIDIzODItMzY6MjAxMyBpcyBpbnRlbmRlZCB0byBmYWNpbGl0YXRlIGludGVybmF0aW9uYWwgY29tbXVuaWNhdGlvbiBpbiBpbmZvcm1hdGlvbiB0ZWNobm9sb2d5IGZvciBsZWFybmluZywgZWR1Y2F0aW9uLCBhbmQgdHJhaW5pbmcuIEl0IHByZXNlbnRzLCBpbiB0d28gbGFuZ3VhZ2VzLCB0ZXJtcyBhbmQgZGVmaW5pdGlvbnMgb2Ygc2VsZWN0ZWQgY29uY2VwdHMgcmVsZXZhbnQgdG8gdGhlIGZpZWxkIG9mIGluZm9ybWF0aW9uIHRlY2hub2xvZ3kgZm9yIGxlYXJuaW5nLCBlZHVjYXRpb24sIGFuZCB0cmFpbmluZyBhbmQgaWRlbnRpZmllcyByZWxhdGlvbnNoaXBzIGFtb25nIHRoZSBlbnRyaWVzLiBUcmFuc2xhdGlvbnMgaW50byBvdGhlciBsYW5ndWFnZXMgYXJlIHByb3ZpZGVkIGluIGFubmV4ZXMuICIsIm9iamVjdElEIjoiNjM5OTZfMCIsIl9oaWdobGlnaHRSZXN1bHQiOnsidGl0bGUiOnsidmFsdWUiOiI8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDxlbT4yMzgyPC9lbT4tMzY6MjAxMyBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBWb2NhYnVsYXJ5IOKAlCBQYXJ0IDM2OiBMZWFybmluZywgZWR1Y2F0aW9uIGFuZCB0cmFpbmluZyIsIm1hdGNoTGV2ZWwiOiJmdWxsIiwiZnVsbHlIaWdobGlnaHRlZCI6ZmFsc2UsIm1hdGNoZWRXb3JkcyI6WyJpc28iLCJpZWMiLCIyMzgyIl19LCJ0ZXh0Ijp7InZhbHVlIjoiPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiA8ZW0+MjM4MjwvZW0+LTM2OjIwMTMgaXMgaW50ZW5kZWQgdG8gZmFjaWxpdGF0ZSBpbnRlcm5hdGlvbmFsIGNvbW11bmljYXRpb24gaW4gaW5mb3JtYXRpb24gdGVjaG5vbG9neSBmb3IgbGVhcm5pbmcsIGVkdWNhdGlvbiwgYW5kIHRyYWluaW5nLiBJdCBwcmVzZW50cywgaW4gdHdvIGxhbmd1YWdlcywgdGVybXMgYW5kIGRlZmluaXRpb25zIG9mIHNlbGVjdGVkIGNvbmNlcHRzIHJlbGV2YW50IHRvIHRoZSBmaWVsZCBvZiBpbmZvcm1hdGlvbiB0ZWNobm9sb2d5IGZvciBsZWFybmluZywgZWR1Y2F0aW9uLCBhbmQgdHJhaW5pbmcgYW5kIGlkZW50aWZpZXMgcmVsYXRpb25zaGlwcyBhbW9uZyB0aGUgZW50cmllcy4gVHJhbnNsYXRpb25zIGludG8gb3RoZXIgbGFuZ3VhZ2VzIGFyZSBwcm92aWRlZCBpbiBhbm5leGVzLiAiLCJtYXRjaExldmVsIjoiZnVsbCIsImZ1bGx5SGlnaGxpZ2h0ZWQiOmZhbHNlLCJtYXRjaGVkV29yZHMiOlsiaXNvIiwiaWVjIiwiMjM4MiJdfX19LHsiY2F0ZWdvcnkiOiJzdGFuZGFyZCIsInBhdGgiOiIvc2l0ZXMvaXNvb3JnL2NvbnRlbnRzL2RhdGEvc3RhbmRhcmQvMDUvNTEvNTUxOTQiLCJ1dWlkIjoiYzA1NWE4ZjYtNDMyYS00YWFlLTg2YmItZjczNGUwMzZmNDIxIiwidGl0bGUiOiJJU08vSUVDIDIzODItMzc6MjAxMiBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBWb2NhYnVsYXJ5IOKAlCBQYXJ0IDM3OiBCaW9tZXRyaWNzIiwic3RhdHVzIjoiV2l0aGRyYXduIiwieWVhciI6MjAxNywib3JkZXIiOjEwMCwidGV4dCI6IklTTy9JRUMgMjM4Mi0zNzoyMDEyIGVzdGFibGlzaGVzIGEgc3lzdGVtYXRpYyBkZXNjcmlwdGlvbiBvZiB0aGUgY29uY2VwdHMgaW4gdGhlIGZpZWxkIG9mIGJpb21ldHJpY3MgcGVydGFpbmluZyB0byByZWNvZ25pdGlvbiBvZiBodW1hbiBiZWluZ3MgYW5kIHJlY29uY2lsZXMgdmFyaWFudCB0ZXJtcyBpbiB1c2UgaW4gcHJlLWV4aXN0aW5nIGJpb21ldHJpYyBzdGFuZGFyZHMgYWdhaW5zdCB0aGUgcHJlZmVycmVkIHRlcm1zLCB0aGVyZWJ5IGNsYXJpZnlpbmcgdGhlIHVzZSBvZiB0ZXJtcyBpbiB0aGlzIGZpZWxkLiAiLCJvYmplY3RJRCI6IjU1MTk0XzAiLCJfaGlnaGxpZ2h0UmVzdWx0Ijp7InRpdGxlIjp7InZhbHVlIjoiPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiA8ZW0+MjM4MjwvZW0+LTM3OjIwMTIgSW5mb3JtYXRpb24gdGVjaG5vbG9neSDigJQgVm9jYWJ1bGFyeSDigJQgUGFydCAzNzogQmlvbWV0cmljcyIsIm1hdGNoTGV2ZWwiOiJmdWxsIiwiZnVsbHlIaWdobGlnaHRlZCI6ZmFsc2UsIm1hdGNoZWRXb3JkcyI6WyJpc28iLCJpZWMiLCIyMzgyIl19LCJ0ZXh0Ijp7InZhbHVlIjoiPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiA8ZW0+MjM4MjwvZW0+LTM3OjIwMTIgZXN0YWJsaXNoZXMgYSBzeXN0ZW1hdGljIGRlc2NyaXB0aW9uIG9mIHRoZSBjb25jZXB0cyBpbiB0aGUgZmllbGQgb2YgYmlvbWV0cmljcyBwZXJ0YWluaW5nIHRvIHJlY29nbml0aW9uIG9mIGh1bWFuIGJlaW5ncyBhbmQgcmVjb25jaWxlcyB2YXJpYW50IHRlcm1zIGluIHVzZSBpbiBwcmUtZXhpc3RpbmcgYmlvbWV0cmljIHN0YW5kYXJkcyBhZ2FpbnN0IHRoZSBwcmVmZXJyZWQgdGVybXMsIHRoZXJlYnkgY2xhcmlmeWluZyB0aGUgdXNlIG9mIHRlcm1zIGluIHRoaXMgZmllbGQuICIsIm1hdGNoTGV2ZWwiOiJmdWxsIiwiZnVsbHlIaWdobGlnaHRlZCI6ZmFsc2UsIm1hdGNoZWRXb3JkcyI6WyJpc28iLCJpZWMiLCIyMzgyIl19fX0seyJjYXRlZ29yeSI6InN0YW5kYXJkIiwicGF0aCI6Ii9zaXRlcy9pc29vcmcvY29udGVudHMvZGF0YS9zdGFuZGFyZC8wMC83Mi83MjczIiwidXVpZCI6IjJiOTQwYWViLWE3NzAtNGZjMi05ZWRjLTQyMjRkMTBiMmU5MyIsInRpdGxlIjoiSVNPL0lFQyAyMzgyLTI5OjE5OTkgSW5mb3JtYXRpb24gdGVjaG5vbG9neSDigJQgVm9jYWJ1bGFyeSDigJQgUGFydCAyOTogQXJ0aWZpY2lhbCBpbnRlbGxpZ2VuY2Ug4oCUIFNwZWVjaCByZWNvZ25pdGlvbiBhbmQgc3ludGhlc2lzIiwic3RhdHVzIjoiV2l0aGRyYXduIiwieWVhciI6MjAxNSwib3JkZXIiOjEwMCwib2JqZWN0SUQiOiI3MjczXzAiLCJfaGlnaGxpZ2h0UmVzdWx0Ijp7InRpdGxlIjp7InZhbHVlIjoiPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiA8ZW0+MjM4MjwvZW0+LTI5OjE5OTkgSW5mb3JtYXRpb24gdGVjaG5vbG9neSDigJQgVm9jYWJ1bGFyeSDigJQgUGFydCAyOTogQXJ0aWZpY2lhbCBpbnRlbGxpZ2VuY2Ug4oCUIFNwZWVjaCByZWNvZ25pdGlvbiBhbmQgc3ludGhlc2lzIiwibWF0Y2hMZXZlbCI6ImZ1bGwiLCJmdWxseUhpZ2hsaWdodGVkIjpmYWxzZSwibWF0Y2hlZFdvcmRzIjpbImlzbyIsImllYyIsIjIzODIiXX19fSx7ImNhdGVnb3J5Ijoic3RhbmRhcmQiLCJwYXRoIjoiL3NpdGVzL2lzb29yZy9jb250ZW50cy9kYXRhL3N0YW5kYXJkLzAwLzcyLzcyNzIiLCJ1dWlkIjoiOTNmYjNlODktMWUxNi00YTVhLTljNTMtODcwZmVlMWM3ZDI1IiwidGl0bGUiOiJJU08vSUVDIDIzODItMjg6MTk5NSBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBWb2NhYnVsYXJ5IOKAlCBQYXJ0IDI4OiBBcnRpZmljaWFsIGludGVsbGlnZW5jZSDigJQgQmFzaWMgY29uY2VwdHMgYW5kIGV4cGVydCBzeXN0ZW1zIiwic3RhdHVzIjoiV2l0aGRyYXduIiwieWVhciI6MjAxNSwib3JkZXIiOjEwMCwidGV4dCI6IkRlZmluZXMgYmFzaWMgY29uY2VwdHMgcmVsYXRlZCB0byBhcnRpZmljaWFsIGludGVsbGlnZW5jZSBhbmQgZXhwZXJ0IHN5c3RlbXMuICIsIm9iamVjdElEIjoiNzI3Ml8wIiwiX2hpZ2hsaWdodFJlc3VsdCI6eyJ0aXRsZSI6eyJ2YWx1ZSI6IjxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gPGVtPjIzODI8L2VtPi0yODoxOTk1IEluZm9ybWF0aW9uIHRlY2hub2xvZ3kg4oCUIFZvY2FidWxhcnkg4oCUIFBhcnQgMjg6IEFydGlmaWNpYWwgaW50ZWxsaWdlbmNlIOKAlCBCYXNpYyBjb25jZXB0cyBhbmQgZXhwZXJ0IHN5c3RlbXMiLCJtYXRjaExldmVsIjoiZnVsbCIsImZ1bGx5SGlnaGxpZ2h0ZWQiOmZhbHNlLCJtYXRjaGVkV29yZHMiOlsiaXNvIiwiaWVjIiwiMjM4MiJdfSwidGV4dCI6eyJ2YWx1ZSI6IkRlZmluZXMgYmFzaWMgY29uY2VwdHMgcmVsYXRlZCB0byBhcnRpZmljaWFsIGludGVsbGlnZW5jZSBhbmQgZXhwZXJ0IHN5c3RlbXMuICIsIm1hdGNoTGV2ZWwiOiJub25lIiwibWF0Y2hlZFdvcmRzIjpbXX19fSx7ImNhdGVnb3J5Ijoic3RhbmRhcmQiLCJwYXRoIjoiL3NpdGVzL2lzb29yZy9jb250ZW50cy9kYXRhL3N0YW5kYXJkLzAwLzcyLzcyNzEiLCJ1dWlkIjoiODNmNTNkMDctNzQxZC00N2M1LWEyNGItNmFkMzIyZjMxYTlkIiwidGl0bGUiOiJJU08vSUVDIDIzODItMjc6MTk5NCBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBWb2NhYnVsYXJ5IOKAlCBQYXJ0IDI3OiBPZmZpY2UgYXV0b21hdGlvbiIsInN0YXR1cyI6IldpdGhkcmF3biIsInllYXIiOjIwMTUsIm9yZGVyIjoxMDAsInRleHQiOiJJbnRlbmRlZCB0byBmYWNpbGl0YXRlIGludGVybmF0aW9uYWwgY29tbXVuaWNhdGlvbiBpbiBvZmZpY2UgYXV0b21hdGlvbi4gUHJlc2VudHMsIGluIHR3byBsYW5ndWFnZXMsIHRlcm1zIGFuZCBkZWZpbml0aW9ucyBvZiBzZWxlY3RlZCBjb25jZXB0cyByZWxldmFudCB0byB0aGUgZmllbGQgb2Ygb2ZmaWNlIGF1dG9tYXRpb24gYW5kIGlkZW50aWZpZXMgcmVsYXRpb25zaGlwcyBiZXR3ZWVuIHRoZSBlbnRyaWVzLiBEZWZpbmVzIGNvbmNlcHRzIHJlbGF0ZWQgdG8gb2ZmaWNlIGF1dG9tYXRpb24sIGVsZWN0cm9uaWMgbWFpbCwgYW5kIHRleHQsIHZvaWNlIGFuZCBpbWFnZSB0cmFuc21pc3Npb24uICIsIm9iamVjdElEIjoiNzI3MV8wIiwiX2hpZ2hsaWdodFJlc3VsdCI6eyJ0aXRsZSI6eyJ2YWx1ZSI6IjxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gPGVtPjIzODI8L2VtPi0yNzoxOTk0IEluZm9ybWF0aW9uIHRlY2hub2xvZ3kg4oCUIFZvY2FidWxhcnkg4oCUIFBhcnQgMjc6IE9mZmljZSBhdXRvbWF0aW9uIiwibWF0Y2hMZXZlbCI6ImZ1bGwiLCJmdWxseUhpZ2hsaWdodGVkIjpmYWxzZSwibWF0Y2hlZFdvcmRzIjpbImlzbyIsImllYyIsIjIzODIiXX0sInRleHQiOnsidmFsdWUiOiJJbnRlbmRlZCB0byBmYWNpbGl0YXRlIGludGVybmF0aW9uYWwgY29tbXVuaWNhdGlvbiBpbiBvZmZpY2UgYXV0b21hdGlvbi4gUHJlc2VudHMsIGluIHR3byBsYW5ndWFnZXMsIHRlcm1zIGFuZCBkZWZpbml0aW9ucyBvZiBzZWxlY3RlZCBjb25jZXB0cyByZWxldmFudCB0byB0aGUgZmllbGQgb2Ygb2ZmaWNlIGF1dG9tYXRpb24gYW5kIGlkZW50aWZpZXMgcmVsYXRpb25zaGlwcyBiZXR3ZWVuIHRoZSBlbnRyaWVzLiBEZWZpbmVzIGNvbmNlcHRzIHJlbGF0ZWQgdG8gb2ZmaWNlIGF1dG9tYXRpb24sIGVsZWN0cm9uaWMgbWFpbCwgYW5kIHRleHQsIHZvaWNlIGFuZCBpbWFnZSB0cmFuc21pc3Npb24uICIsIm1hdGNoTGV2ZWwiOiJub25lIiwibWF0Y2hlZFdvcmRzIjpbXX19fSx7ImNhdGVnb3J5Ijoic3RhbmRhcmQiLCJwYXRoIjoiL3NpdGVzL2lzb29yZy9jb250ZW50cy9kYXRhL3N0YW5kYXJkLzAwLzcyLzcyNzAiLCJ1dWlkIjoiYjg1NjAzNzUtZmMwOS00NmYxLTgyZmItMmI2NTAwYTExMWQ4IiwidGl0bGUiOiJJU08vSUVDIDIzODItMjY6MTk5MyBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBWb2NhYnVsYXJ5IOKAlCBQYXJ0IDI2OiBPcGVuIHN5c3RlbXMgaW50ZXJjb25uZWN0aW9uIiwic3RhdHVzIjoiV2l0aGRyYXduIiwieWVhciI6MjAxNSwib3JkZXIiOjEwMCwidGV4dCI6IlByZXNlbnRzLCBpbiBFbmdsaXNoIGFuZCBGcmVuY2gsIDY2IHRlcm1zIGluIHRoZSBmb2xsb3dpbmcgZmllbGRzOiBnZW5lcmFsIHRlcm1zLCBsYXllcnMsIHNlcnZpY2VzIGFuZCBwcm90b2NvbHMsIGNvbm5lY3Rpb24sIGFwcGxpY2F0aW9uIHNlcnZpY2UgZWxlbWVudHMsIG1pc2NlbGxhbmVvdXMuIEluIG9yZGVyIHRvIGZhY2lsaXRhdGUgdGhlaXIgdHJhbnNsYXRpb24gaW50byBvdGhlciBsYW5ndWFnZXMsIHRoZSBkZWZpbml0aW9ucyBhcmUgZHJhZnRlZCBzbyBhcyB0byBhdm9pZCwgYXMgZmFyIGFzIHBvc3NpYmxlLCBhbnkgcGVjdWxpYXJpdHkgYXR0YWNoZWQgdG8gdGhlIGxhbmd1YWdlLiAiLCJvYmplY3RJRCI6IjcyNzBfMCIsIl9oaWdobGlnaHRSZXN1bHQiOnsidGl0bGUiOnsidmFsdWUiOiI8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDxlbT4yMzgyPC9lbT4tMjY6MTk5MyBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBWb2NhYnVsYXJ5IOKAlCBQYXJ0IDI2OiBPcGVuIHN5c3RlbXMgaW50ZXJjb25uZWN0aW9uIiwibWF0Y2hMZXZlbCI6ImZ1bGwiLCJmdWxseUhpZ2hsaWdodGVkIjpmYWxzZSwibWF0Y2hlZFdvcmRzIjpbImlzbyIsImllYyIsIjIzODIiXX0sInRleHQiOnsidmFsdWUiOiJQcmVzZW50cywgaW4gRW5nbGlzaCBhbmQgRnJlbmNoLCA2NiB0ZXJtcyBpbiB0aGUgZm9sbG93aW5nIGZpZWxkczogZ2VuZXJhbCB0ZXJtcywgbGF5ZXJzLCBzZXJ2aWNlcyBhbmQgcHJvdG9jb2xzLCBjb25uZWN0aW9uLCBhcHBsaWNhdGlvbiBzZXJ2aWNlIGVsZW1lbnRzLCBtaXNjZWxsYW5lb3VzLiBJbiBvcmRlciB0byBmYWNpbGl0YXRlIHRoZWlyIHRyYW5zbGF0aW9uIGludG8gb3RoZXIgbGFuZ3VhZ2VzLCB0aGUgZGVmaW5pdGlvbnMgYXJlIGRyYWZ0ZWQgc28gYXMgdG8gYXZvaWQsIGFzIGZhciBhcyBwb3NzaWJsZSwgYW55IHBlY3VsaWFyaXR5IGF0dGFjaGVkIHRvIHRoZSBsYW5ndWFnZS4gIiwibWF0Y2hMZXZlbCI6Im5vbmUiLCJtYXRjaGVkV29yZHMiOltdfX19LHsiY2F0ZWdvcnkiOiJzdGFuZGFyZCIsInBhdGgiOiIvc2l0ZXMvaXNvb3JnL2NvbnRlbnRzL2RhdGEvc3RhbmRhcmQvMDAvNzIvNzI2OSIsInV1aWQiOiI1MWEwNDM5My01MmE4LTQ0NDItODNkZi1kODZjOWQ5ZTFiZGIiLCJ0aXRsZSI6IklTTy9JRUMgMjM4Mi0yNToxOTkyIEluZm9ybWF0aW9uIHRlY2hub2xvZ3kg4oCUIFZvY2FidWxhcnkg4oCUIFBhcnQgMjU6IExvY2FsIGFyZWEgbmV0d29ya3MiLCJzdGF0dXMiOiJXaXRoZHJhd24iLCJ5ZWFyIjoyMDE1LCJvcmRlciI6MTAwLCJ0ZXh0IjoiRGVmaW5lcyBkaWZmZXJlbnQgdHlwZXMgb2YgbG9jYWwgYXJlYSBuZXR3b3JrcywgY29uY2VwdHMgcmVsYXRpbmcgdG8gZGV2aWNlcywgdG8gdHJhbnNtaXNzaW9ucyBhbmQgdGhlIHByb2JsZW1zIHRoYXQgY2FuIGFwcGVhciwgYW5kIGFsc28gcHJvdG9jb2xzIHRoYXQgZ292ZXJuIGV4Y2hhbmdlcywgaW4gdG90YWwgNzUgdGVybXMgaW4gRW5nbGlzaCBhbmQgRnJlbmNoLiBJbmNsdWRlcyBhbHBoYWJldGljIGluZGljZXMgb2YgdGhlIHRlcm1zIGluIEVuZ2xpc2ggYW5kIEZyZW5jaC4gIiwib2JqZWN0SUQiOiI3MjY5XzAiLCJfaGlnaGxpZ2h0UmVzdWx0Ijp7InRpdGxlIjp7InZhbHVlIjoiPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiA8ZW0+MjM4MjwvZW0+LTI1OjE5OTIgSW5mb3JtYXRpb24gdGVjaG5vbG9neSDigJQgVm9jYWJ1bGFyeSDigJQgUGFydCAyNTogTG9jYWwgYXJlYSBuZXR3b3JrcyIsIm1hdGNoTGV2ZWwiOiJmdWxsIiwiZnVsbHlIaWdobGlnaHRlZCI6ZmFsc2UsIm1hdGNoZWRXb3JkcyI6WyJpc28iLCJpZWMiLCIyMzgyIl19LCJ0ZXh0Ijp7InZhbHVlIjoiRGVmaW5lcyBkaWZmZXJlbnQgdHlwZXMgb2YgbG9jYWwgYXJlYSBuZXR3b3JrcywgY29uY2VwdHMgcmVsYXRpbmcgdG8gZGV2aWNlcywgdG8gdHJhbnNtaXNzaW9ucyBhbmQgdGhlIHByb2JsZW1zIHRoYXQgY2FuIGFwcGVhciwgYW5kIGFsc28gcHJvdG9jb2xzIHRoYXQgZ292ZXJuIGV4Y2hhbmdlcywgaW4gdG90YWwgNzUgdGVybXMgaW4gRW5nbGlzaCBhbmQgRnJlbmNoLiBJbmNsdWRlcyBhbHBoYWJldGljIGluZGljZXMgb2YgdGhlIHRlcm1zIGluIEVuZ2xpc2ggYW5kIEZyZW5jaC4gIiwibWF0Y2hMZXZlbCI6Im5vbmUiLCJtYXRjaGVkV29yZHMiOltdfX19LHsiY2F0ZWdvcnkiOiJzdGFuZGFyZCIsInBhdGgiOiIvc2l0ZXMvaXNvb3JnL2NvbnRlbnRzL2RhdGEvc3RhbmRhcmQvMDAvNzIvNzI2OCIsInV1aWQiOiJjNzdhZjYyZC1jYjkxLTQwMmMtODk4Ni1jNDBjZTY1ZGQ1MjAiLCJ0aXRsZSI6IklTTy9JRUMgMjM4Mi0yNDoxOTk1IEluZm9ybWF0aW9uIHRlY2hub2xvZ3kg4oCUIFZvY2FidWxhcnkg4oCUIFBhcnQgMjQ6IENvbXB1dGVyLWludGVncmF0ZWQgbWFudWZhY3R1cmluZyIsInN0YXR1cyI6IldpdGhkcmF3biIsInllYXIiOjIwMTUsIm9yZGVyIjoxMDAsInRleHQiOiJEZWZpbmVzIGNvbmNlcHRzIHJlbGF0ZWQgdG8gY29tcHV0ZXItaW50ZWdyYXRlZCBtYW51ZmFjdHVyaW5nLiAiLCJvYmplY3RJRCI6IjcyNjhfMCIsIl9oaWdobGlnaHRSZXN1bHQiOnsidGl0bGUiOnsidmFsdWUiOiI8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDxlbT4yMzgyPC9lbT4tMjQ6MTk5NSBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBWb2NhYnVsYXJ5IOKAlCBQYXJ0IDI0OiBDb21wdXRlci1pbnRlZ3JhdGVkIG1hbnVmYWN0dXJpbmciLCJtYXRjaExldmVsIjoiZnVsbCIsImZ1bGx5SGlnaGxpZ2h0ZWQiOmZhbHNlLCJtYXRjaGVkV29yZHMiOlsiaXNvIiwiaWVjIiwiMjM4MiJdfSwidGV4dCI6eyJ2YWx1ZSI6IkRlZmluZXMgY29uY2VwdHMgcmVsYXRlZCB0byBjb21wdXRlci1pbnRlZ3JhdGVkIG1hbnVmYWN0dXJpbmcuICIsIm1hdGNoTGV2ZWwiOiJub25lIiwibWF0Y2hlZFdvcmRzIjpbXX19fSx7ImNhdGVnb3J5Ijoic3RhbmRhcmQiLCJwYXRoIjoiL3NpdGVzL2lzb29yZy9jb250ZW50cy9kYXRhL3N0YW5kYXJkLzAwLzcyLzcyNjciLCJ1dWlkIjoiNjMzMDQyODMtMDVmNi00NDE0LTk2NDktNDVjYTM1ZjIxYzY5IiwidGl0bGUiOiJJU08vSUVDIDIzODItMjM6MTk5NCBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBWb2NhYnVsYXJ5IOKAlCBQYXJ0IDIzOiBUZXh0IHByb2Nlc3NpbmciLCJzdGF0dXMiOiJXaXRoZHJhd24iLCJ5ZWFyIjoyMDE1LCJvcmRlciI6MTAwLCJ0ZXh0IjoiUHJlc2VudHMsIGluIEVuZ2xpc2ggYW5kIEZyZW5jaCwgMTA2IHRlcm1zIGluIHRoZSBmb2xsb3dpbmcgZmllbGRzOiB0ZXh0IHByb2Nlc3NpbmcsIHRleHQgZWRpdG9ycywgdGV4dCBvdXRwdXQgYW5kIHRleHQgZWRpdGluZy4gSW4gb3JkZXIgdG8gZmFjaWxpdGF0ZSB0aGVpciB0cmFuc2xhdGlvbiBpbnRvIG90aGVyIGxhbmd1YWdlcywgdGhlIGRlZmluaXRpb25zIGFyZSBkcmFmdGVkIHNvIGFzIHRvIGF2b2lkLCBhcyBmYXIgYXMgcG9zc2libGUsIGFueSBwZWN1bGlhcml0eSBhdHRhY2hlZCB0byB0aGUgbGFuZ3VhZ2UuICIsIm9iamVjdElEIjoiNzI2N18wIiwiX2hpZ2hsaWdodFJlc3VsdCI6eyJ0aXRsZSI6eyJ2YWx1ZSI6IjxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gPGVtPjIzODI8L2VtPi0yMzoxOTk0IEluZm9ybWF0aW9uIHRlY2hub2xvZ3kg4oCUIFZvY2FidWxhcnkg4oCUIFBhcnQgMjM6IFRleHQgcHJvY2Vzc2luZyIsIm1hdGNoTGV2ZWwiOiJmdWxsIiwiZnVsbHlIaWdobGlnaHRlZCI6ZmFsc2UsIm1hdGNoZWRXb3JkcyI6WyJpc28iLCJpZWMiLCIyMzgyIl19LCJ0ZXh0Ijp7InZhbHVlIjoiUHJlc2VudHMsIGluIEVuZ2xpc2ggYW5kIEZyZW5jaCwgMTA2IHRlcm1zIGluIHRoZSBmb2xsb3dpbmcgZmllbGRzOiB0ZXh0IHByb2Nlc3NpbmcsIHRleHQgZWRpdG9ycywgdGV4dCBvdXRwdXQgYW5kIHRleHQgZWRpdGluZy4gSW4gb3JkZXIgdG8gZmFjaWxpdGF0ZSB0aGVpciB0cmFuc2xhdGlvbiBpbnRvIG90aGVyIGxhbmd1YWdlcywgdGhlIGRlZmluaXRpb25zIGFyZSBkcmFmdGVkIHNvIGFzIHRvIGF2b2lkLCBhcyBmYXIgYXMgcG9zc2libGUsIGFueSBwZWN1bGlhcml0eSBhdHRhY2hlZCB0byB0aGUgbGFuZ3VhZ2UuICIsIm1hdGNoTGV2ZWwiOiJub25lIiwibWF0Y2hlZFdvcmRzIjpbXX19fSx7ImNhdGVnb3J5Ijoic3RhbmRhcmQiLCJwYXRoIjoiL3NpdGVzL2lzb29yZy9jb250ZW50cy9kYXRhL3N0YW5kYXJkLzAwLzcyLzcyNjQiLCJ1dWlkIjoiNmYzZjRhOGYtZjc1Ni00NTI5LTk0ZWYtZTUwNzZmYjQ4YTEzIiwidGl0bGUiOiJJU08vSUVDIDIzODItMjA6MTk5MCBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBWb2NhYnVsYXJ5IOKAlCBQYXJ0IDIwOiBTeXN0ZW0gZGV2ZWxvcG1lbnQiLCJzdGF0dXMiOiJXaXRoZHJhd24iLCJ5ZWFyIjoyMDE1LCJvcmRlciI6MTAwLCJ0ZXh0IjoiU3JldmVzIHRvIGZhY2lsaXRhdGUgaW50ZXJuYXRpb25hbCBjb21tdW5pY2F0aW9uIGluIGluZm9ybWF0aW9uIHByb2Nlc3NpbmcuIFByZXNlbnRzIEVuZ2xpc2ggYW5kIEZyZW5jaCB0ZXJtcyBhbmQgZGVmaW5pdGlvbnMgb2Ygc2VsZWN0ZWQgY29uY2VwdHMgYXMgcmVnYXJkcyB0aGUgZmllbGQgb2YgaW5mb3JtYXRpb24gcHJvY2Vzc2luZyBhbmQgZGVmaW5lcyByZWxhdGlvbnNzaGlwcyBiZXR3ZWVuIHRoZSBlbnRyaWVzLiBUaGUgcHJvdmlkZWQgY29uY2VwdHMgY29uY2VybiBhIHN5c3RlbSBsaWZlIGN5Y2xlIHJhbmdpbmcgZnJvbSB0aGUgcmVxdWlyZW1lbnRzIGFuYWx5c2lzIHRvIHRoZSBpbXBsZW1lbnRhdGlvbiBpbmNsdWRpbmcgc3lzdGVtIGRlc2lnbiBhbmQgcXVhbGl0eSBhc3N1cmFuY2UuICIsIm9iamVjdElEIjoiNzI2NF8wIiwiX2hpZ2hsaWdodFJlc3VsdCI6eyJ0aXRsZSI6eyJ2YWx1ZSI6IjxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gPGVtPjIzODI8L2VtPi0yMDoxOTkwIEluZm9ybWF0aW9uIHRlY2hub2xvZ3kg4oCUIFZvY2FidWxhcnkg4oCUIFBhcnQgMjA6IFN5c3RlbSBkZXZlbG9wbWVudCIsIm1hdGNoTGV2ZWwiOiJmdWxsIiwiZnVsbHlIaWdobGlnaHRlZCI6ZmFsc2UsIm1hdGNoZWRXb3JkcyI6WyJpc28iLCJpZWMiLCIyMzgyIl19LCJ0ZXh0Ijp7InZhbHVlIjoiU3JldmVzIHRvIGZhY2lsaXRhdGUgaW50ZXJuYXRpb25hbCBjb21tdW5pY2F0aW9uIGluIGluZm9ybWF0aW9uIHByb2Nlc3NpbmcuIFByZXNlbnRzIEVuZ2xpc2ggYW5kIEZyZW5jaCB0ZXJtcyBhbmQgZGVmaW5pdGlvbnMgb2Ygc2VsZWN0ZWQgY29uY2VwdHMgYXMgcmVnYXJkcyB0aGUgZmllbGQgb2YgaW5mb3JtYXRpb24gcHJvY2Vzc2luZyBhbmQgZGVmaW5lcyByZWxhdGlvbnNzaGlwcyBiZXR3ZWVuIHRoZSBlbnRyaWVzLiBUaGUgcHJvdmlkZWQgY29uY2VwdHMgY29uY2VybiBhIHN5c3RlbSBsaWZlIGN5Y2xlIHJhbmdpbmcgZnJvbSB0aGUgcmVxdWlyZW1lbnRzIGFuYWx5c2lzIHRvIHRoZSBpbXBsZW1lbnRhdGlvbiBpbmNsdWRpbmcgc3lzdGVtIGRlc2lnbiBhbmQgcXVhbGl0eSBhc3N1cmFuY2UuICIsIm1hdGNoTGV2ZWwiOiJub25lIiwibWF0Y2hlZFdvcmRzIjpbXX19fSx7ImNhdGVnb3J5Ijoic3RhbmRhcmQiLCJwYXRoIjoiL3NpdGVzL2lzb29yZy9jb250ZW50cy9kYXRhL3N0YW5kYXJkLzAwLzcyLzcyNTkiLCJ1dWlkIjoiMWQyMjhjMmMtNGY0Yi00MmM4LTkwMjUtOTgwZGI0NGM3NWM1IiwidGl0bGUiOiJJU08vSUVDIDIzODItMTY6MTk5NiBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBWb2NhYnVsYXJ5IOKAlCBQYXJ0IDE2OiBJbmZvcm1hdGlvbiB0aGVvcnkiLCJzdGF0dXMiOiJXaXRoZHJhd24iLCJ5ZWFyIjoyMDE1LCJvcmRlciI6MTAwLCJvYmplY3RJRCI6IjcyNTlfMCIsIl9oaWdobGlnaHRSZXN1bHQiOnsidGl0bGUiOnsidmFsdWUiOiI8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDxlbT4yMzgyPC9lbT4tMTY6MTk5NiBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBWb2NhYnVsYXJ5IOKAlCBQYXJ0IDE2OiBJbmZvcm1hdGlvbiB0aGVvcnkiLCJtYXRjaExldmVsIjoiZnVsbCIsImZ1bGx5SGlnaGxpZ2h0ZWQiOmZhbHNlLCJtYXRjaGVkV29yZHMiOlsiaXNvIiwiaWVjIiwiMjM4MiJdfX19LHsiY2F0ZWdvcnkiOiJzdGFuZGFyZCIsInBhdGgiOiIvc2l0ZXMvaXNvb3JnL2NvbnRlbnRzL2RhdGEvc3RhbmRhcmQvMDAvNzIvNzI1NyIsInV1aWQiOiJmZTAxMWIyMC1lNmY3LTQ5OTAtYTFiMC0xMjNkMmY0NmM0ZmMiLCJ0aXRsZSI6IklTTy9JRUMgMjM4Mi0xNToxOTk5IEluZm9ybWF0aW9uIHRlY2hub2xvZ3kg4oCUIFZvY2FidWxhcnkg4oCUIFBhcnQgMTU6IFByb2dyYW1taW5nIGxhbmd1YWdlcyIsInN0YXR1cyI6IldpdGhkcmF3biIsInllYXIiOjIwMTUsIm9yZGVyIjoxMDAsIm9iamVjdElEIjoiNzI1N18wIiwiX2hpZ2hsaWdodFJlc3VsdCI6eyJ0aXRsZSI6eyJ2YWx1ZSI6IjxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gPGVtPjIzODI8L2VtPi0xNToxOTk5IEluZm9ybWF0aW9uIHRlY2hub2xvZ3kg4oCUIFZvY2FidWxhcnkg4oCUIFBhcnQgMTU6IFByb2dyYW1taW5nIGxhbmd1YWdlcyIsIm1hdGNoTGV2ZWwiOiJmdWxsIiwiZnVsbHlIaWdobGlnaHRlZCI6ZmFsc2UsIm1hdGNoZWRXb3JkcyI6WyJpc28iLCJpZWMiLCIyMzgyIl19fX0seyJjYXRlZ29yeSI6InN0YW5kYXJkIiwicGF0aCI6Ii9zaXRlcy9pc29vcmcvY29udGVudHMvZGF0YS9zdGFuZGFyZC8wMC83Mi83MjU1IiwidXVpZCI6ImQ1MTEwNTE0LTU2Y2ItNGU3Yy04YjM5LTliYzQxZDNhMGFiNCIsInRpdGxlIjoiSVNPL0lFQyAyMzgyLTE0OjE5OTcgSW5mb3JtYXRpb24gdGVjaG5vbG9neSDigJQgVm9jYWJ1bGFyeSDigJQgUGFydCAxNDogUmVsaWFiaWxpdHksIG1haW50YWluYWJpbGl0eSBhbmQgYXZhaWxhYmlsaXR5Iiwic3RhdHVzIjoiV2l0aGRyYXduIiwieWVhciI6MjAxNSwib3JkZXIiOjEwMCwib2JqZWN0SUQiOiI3MjU1XzAiLCJfaGlnaGxpZ2h0UmVzdWx0Ijp7InRpdGxlIjp7InZhbHVlIjoiPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiA8ZW0+MjM4MjwvZW0+LTE0OjE5OTcgSW5mb3JtYXRpb24gdGVjaG5vbG9neSDigJQgVm9jYWJ1bGFyeSDigJQgUGFydCAxNDogUmVsaWFiaWxpdHksIG1haW50YWluYWJpbGl0eSBhbmQgYXZhaWxhYmlsaXR5IiwibWF0Y2hMZXZlbCI6ImZ1bGwiLCJmdWxseUhpZ2hsaWdodGVkIjpmYWxzZSwibWF0Y2hlZFdvcmRzIjpbImlzbyIsImllYyIsIjIzODIiXX19fSx7ImNhdGVnb3J5Ijoic3RhbmRhcmQiLCJwYXRoIjoiL3NpdGVzL2lzb29yZy9jb250ZW50cy9kYXRhL3N0YW5kYXJkLzAwLzcyLzcyNTMiLCJ1dWlkIjoiNzI2NjNjNjItZTliMy00ZWNkLWI0OTEtYWIwZjhlNzdmMjRjIiwidGl0bGUiOiJJU08vSUVDIDIzODItMTM6MTk5NiBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBWb2NhYnVsYXJ5IOKAlCBQYXJ0IDEzOiBDb21wdXRlciBncmFwaGljcyIsInN0YXR1cyI6IldpdGhkcmF3biIsInllYXIiOjIwMTUsIm9yZGVyIjoxMDAsInRleHQiOiJEZWZpbmVzIGNvbmNlcHRzIHJlbGF0ZWQgdG8gY29tcHV0ZXIgZ3JhcGhpY3MgYW5kIHByZXNlbnRzIHRlcm1zIGFuZCBkZWZpbml0aW9ucyBvZiBzZWxlY3RlZCBjb25jZXB0cyByZWxldmFudCB0byB0aGUgZmllbGQgb2YgaW5mb3JtYXRpb24gdGVjaG5vbG9neSBhbmQgaWRlbnRpZmllcyByZWxhdGlvbnNoaXBzIGFtb25nIHRoZSBlbnRyaWVzLiBSZXBsYWNlcyB0aGUgZmlyc3QgZWRpdGlvbi4gIiwib2JqZWN0SUQiOiI3MjUzXzAiLCJfaGlnaGxpZ2h0UmVzdWx0Ijp7InRpdGxlIjp7InZhbHVlIjoiPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiA8ZW0+MjM4MjwvZW0+LTEzOjE5OTYgSW5mb3JtYXRpb24gdGVjaG5vbG9neSDigJQgVm9jYWJ1bGFyeSDigJQgUGFydCAxMzogQ29tcHV0ZXIgZ3JhcGhpY3MiLCJtYXRjaExldmVsIjoiZnVsbCIsImZ1bGx5SGlnaGxpZ2h0ZWQiOmZhbHNlLCJtYXRjaGVkV29yZHMiOlsiaXNvIiwiaWVjIiwiMjM4MiJdfSwidGV4dCI6eyJ2YWx1ZSI6IkRlZmluZXMgY29uY2VwdHMgcmVsYXRlZCB0byBjb21wdXRlciBncmFwaGljcyBhbmQgcHJlc2VudHMgdGVybXMgYW5kIGRlZmluaXRpb25zIG9mIHNlbGVjdGVkIGNvbmNlcHRzIHJlbGV2YW50IHRvIHRoZSBmaWVsZCBvZiBpbmZvcm1hdGlvbiB0ZWNobm9sb2d5IGFuZCBpZGVudGlmaWVzIHJlbGF0aW9uc2hpcHMgYW1vbmcgdGhlIGVudHJpZXMuIFJlcGxhY2VzIHRoZSBmaXJzdCBlZGl0aW9uLiAiLCJtYXRjaExldmVsIjoibm9uZSIsIm1hdGNoZWRXb3JkcyI6W119fX0seyJjYXRlZ29yeSI6InN0YW5kYXJkIiwicGF0aCI6Ii9zaXRlcy9pc29vcmcvY29udGVudHMvZGF0YS9zdGFuZGFyZC8wMC83Mi83MjQzIiwidXVpZCI6IjUyNTU2Mzg1LTQ3MDEtNGViNi04ZTY5LWYwMWY4NmEwNTM3YSIsInRpdGxlIjoiSVNPL0lFQyAyMzgyLTg6MTk5OCBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBWb2NhYnVsYXJ5IOKAlCBQYXJ0IDg6IFNlY3VyaXR5Iiwic3RhdHVzIjoiV2l0aGRyYXduIiwieWVhciI6MjAxNSwib3JkZXIiOjEwMCwib2JqZWN0SUQiOiI3MjQzXzAiLCJfaGlnaGxpZ2h0UmVzdWx0Ijp7InRpdGxlIjp7InZhbHVlIjoiPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiA8ZW0+MjM4MjwvZW0+LTg6MTk5OCBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBWb2NhYnVsYXJ5IOKAlCBQYXJ0IDg6IFNlY3VyaXR5IiwibWF0Y2hMZXZlbCI6ImZ1bGwiLCJmdWxseUhpZ2hsaWdodGVkIjpmYWxzZSwibWF0Y2hlZFdvcmRzIjpbImlzbyIsImllYyIsIjIzODIiXX19fSx7ImNhdGVnb3J5Ijoic3RhbmRhcmQiLCJwYXRoIjoiL3NpdGVzL2lzb29yZy9jb250ZW50cy9kYXRhL3N0YW5kYXJkLzAwLzcyLzcyNDEiLCJ1dWlkIjoiODkwNmZhNmItNmMzOC00NzVhLTg2YjUtZGJiYmE5YWJiOTA3IiwidGl0bGUiOiJJU08vSUVDIDIzODItNzoyMDAwIEluZm9ybWF0aW9uIHRlY2hub2xvZ3kg4oCUIFZvY2FidWxhcnkg4oCUIFBhcnQgNzogQ29tcHV0ZXIgcHJvZ3JhbW1pbmciLCJzdGF0dXMiOiJXaXRoZHJhd24iLCJ5ZWFyIjoyMDE1LCJvcmRlciI6MTAwLCJvYmplY3RJRCI6IjcyNDFfMCIsIl9oaWdobGlnaHRSZXN1bHQiOnsidGl0bGUiOnsidmFsdWUiOiI8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDxlbT4yMzgyPC9lbT4tNzoyMDAwIEluZm9ybWF0aW9uIHRlY2hub2xvZ3kg4oCUIFZvY2FidWxhcnkg4oCUIFBhcnQgNzogQ29tcHV0ZXIgcHJvZ3JhbW1pbmciLCJtYXRjaExldmVsIjoiZnVsbCIsImZ1bGx5SGlnaGxpZ2h0ZWQiOmZhbHNlLCJtYXRjaGVkV29yZHMiOlsiaXNvIiwiaWVjIiwiMjM4MiJdfX19LHsiY2F0ZWdvcnkiOiJzdGFuZGFyZCIsInBhdGgiOiIvc2l0ZXMvaXNvb3JnL2NvbnRlbnRzL2RhdGEvc3RhbmRhcmQvMDAvNzIvNzIyOSIsInV1aWQiOiJlZjcyZTc0MS0yYzc4LTRjZjAtYTc5OC1lOTlmNDU5YTM0ZDciLCJ0aXRsZSI6IklTTy9JRUMgMjM4Mi0xOjE5OTMgSW5mb3JtYXRpb24gdGVjaG5vbG9neSDigJQgVm9jYWJ1bGFyeSDigJQgUGFydCAxOiBGdW5kYW1lbnRhbCB0ZXJtcyIsInN0YXR1cyI6IldpdGhkcmF3biIsInllYXIiOjIwMTUsIm9yZGVyIjoxMDAsInRleHQiOiJQcmVzZW50cywgaW4gRW5nbGlzaCBhbmQgRnJlbmNoLCAxNDQgdGVybXMgaW4gdGhlIGZvbGxvd2luZyBmaWVsZHM6IGdlbmVyYWwgdGVybXMsIGluZm9ybWF0aW9uIHJlcHJlc2VudGF0aW9uLCBoYXJkd2FyZSwgc29mdHdhcmUsIHByb2dyYW1taW5nLCBhcHBsaWNhdGlvbnMgYW5kIGVuZCB1c2VyLCBjb21wdXRlciBzZWN1cml0eSwgZGF0YSBtYW5hZ2VtZW50LiBJbiBvcmRlciB0byBmYWNpbGl0YXRlIHRoZWlyIHRyYW5zbGF0aW9uIGludG8gb3RoZXIgbGFuZ3VhZ2VzLCB0aGUgZGVmaW5pdGlvbnMgYXJlIGRyYWZ0ZWQgc28gYXMgdG8gYXZvaWQsIGFzIGZhciBhcyBwb3NzaWJsZSwgYW55IHBlY3VsaWFyaXR5IGF0dGFjaGVkIHRvIHRoZSBsYW5ndWFnZS4gIiwib2JqZWN0SUQiOiI3MjI5XzAiLCJfaGlnaGxpZ2h0UmVzdWx0Ijp7InRpdGxlIjp7InZhbHVlIjoiPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiA8ZW0+MjM4MjwvZW0+LTE6MTk5MyBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBWb2NhYnVsYXJ5IOKAlCBQYXJ0IDE6IEZ1bmRhbWVudGFsIHRlcm1zIiwibWF0Y2hMZXZlbCI6ImZ1bGwiLCJmdWxseUhpZ2hsaWdodGVkIjpmYWxzZSwibWF0Y2hlZFdvcmRzIjpbImlzbyIsImllYyIsIjIzODIiXX0sInRleHQiOnsidmFsdWUiOiJQcmVzZW50cywgaW4gRW5nbGlzaCBhbmQgRnJlbmNoLCAxNDQgdGVybXMgaW4gdGhlIGZvbGxvd2luZyBmaWVsZHM6IGdlbmVyYWwgdGVybXMsIGluZm9ybWF0aW9uIHJlcHJlc2VudGF0aW9uLCBoYXJkd2FyZSwgc29mdHdhcmUsIHByb2dyYW1taW5nLCBhcHBsaWNhdGlvbnMgYW5kIGVuZCB1c2VyLCBjb21wdXRlciBzZWN1cml0eSwgZGF0YSBtYW5hZ2VtZW50LiBJbiBvcmRlciB0byBmYWNpbGl0YXRlIHRoZWlyIHRyYW5zbGF0aW9uIGludG8gb3RoZXIgbGFuZ3VhZ2VzLCB0aGUgZGVmaW5pdGlvbnMgYXJlIGRyYWZ0ZWQgc28gYXMgdG8gYXZvaWQsIGFzIGZhciBhcyBwb3NzaWJsZSwgYW55IHBlY3VsaWFyaXR5IGF0dGFjaGVkIHRvIHRoZSBsYW5ndWFnZS4gIiwibWF0Y2hMZXZlbCI6Im5vbmUiLCJtYXRjaGVkV29yZHMiOltdfX19LHsiY2F0ZWdvcnkiOiJzdGFuZGFyZCIsInBhdGgiOiIvc2l0ZXMvaXNvb3JnL2NvbnRlbnRzL2RhdGEvc3RhbmRhcmQvMDMvMDgvMzA4NTMiLCJ1dWlkIjoiMWZlNTJkZmQtYjU0NS00MWYzLTk1NDEtYmRkYjI0ODFhZDEzIiwidGl0bGUiOiJJU08vSUVDIDIzODItMTc6MTk5OSBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBWb2NhYnVsYXJ5IOKAlCBQYXJ0IDE3OiBEYXRhYmFzZXMiLCJzdGF0dXMiOiJXaXRoZHJhd24iLCJ5ZWFyIjoyMDE1LCJvcmRlciI6MTAwLCJvYmplY3RJRCI6IjMwODUzXzAiLCJfaGlnaGxpZ2h0UmVzdWx0Ijp7InRpdGxlIjp7InZhbHVlIjoiPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiA8ZW0+MjM4MjwvZW0+LTE3OjE5OTkgSW5mb3JtYXRpb24gdGVjaG5vbG9neSDigJQgVm9jYWJ1bGFyeSDigJQgUGFydCAxNzogRGF0YWJhc2VzIiwibWF0Y2hMZXZlbCI6ImZ1bGwiLCJmdWxseUhpZ2hsaWdodGVkIjpmYWxzZSwibWF0Y2hlZFdvcmRzIjpbImlzbyIsImllYyIsIjIzODIiXX19fSx7ImNhdGVnb3J5Ijoic3RhbmRhcmQiLCJwYXRoIjoiL3NpdGVzL2lzb29yZy9jb250ZW50cy9kYXRhL3N0YW5kYXJkLzAzLzA4LzMwODUxIiwidXVpZCI6IjFkMWJmMWUzLTMzMTItNDdjNC05YzYwLWE0MGYyM2E3OTc5YiIsInRpdGxlIjoiSVNPL0lFQyAyMzgyLTU6MTk5OSBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBWb2NhYnVsYXJ5IOKAlCBQYXJ0IDU6IFJlcHJlc2VudGF0aW9uIG9mIGRhdGEiLCJzdGF0dXMiOiJXaXRoZHJhd24iLCJ5ZWFyIjoyMDE1LCJvcmRlciI6MTAwLCJvYmplY3RJRCI6IjMwODUxXzAiLCJfaGlnaGxpZ2h0UmVzdWx0Ijp7InRpdGxlIjp7InZhbHVlIjoiPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiA8ZW0+MjM4MjwvZW0+LTU6MTk5OSBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBWb2NhYnVsYXJ5IOKAlCBQYXJ0IDU6IFJlcHJlc2VudGF0aW9uIG9mIGRhdGEiLCJtYXRjaExldmVsIjoiZnVsbCIsImZ1bGx5SGlnaGxpZ2h0ZWQiOmZhbHNlLCJtYXRjaGVkV29yZHMiOlsiaXNvIiwiaWVjIiwiMjM4MiJdfX19LHsiY2F0ZWdvcnkiOiJzdGFuZGFyZCIsInBhdGgiOiIvc2l0ZXMvaXNvb3JnL2NvbnRlbnRzL2RhdGEvc3RhbmRhcmQvMDIvNzkvMjc5MjIiLCJ1dWlkIjoiMTk5ZTc0MTctMTY4MC00Y2QwLWEyOWItNTAwNzE3MDYyODM4IiwidGl0bGUiOiJJU08vSUVDIDIzODItNDoxOTk5IEluZm9ybWF0aW9uIHRlY2hub2xvZ3kg4oCUIFZvY2FidWxhcnkg4oCUIFBhcnQgNDogT3JnYW5pemF0aW9uIG9mIGRhdGEiLCJzdGF0dXMiOiJXaXRoZHJhd24iLCJ5ZWFyIjoyMDE1LCJvcmRlciI6MTAwLCJvYmplY3RJRCI6IjI3OTIyXzAiLCJfaGlnaGxpZ2h0UmVzdWx0Ijp7InRpdGxlIjp7InZhbHVlIjoiPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiA8ZW0+MjM4MjwvZW0+LTQ6MTk5OSBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBWb2NhYnVsYXJ5IOKAlCBQYXJ0IDQ6IE9yZ2FuaXphdGlvbiBvZiBkYXRhIiwibWF0Y2hMZXZlbCI6ImZ1bGwiLCJmdWxseUhpZ2hsaWdodGVkIjpmYWxzZSwibWF0Y2hlZFdvcmRzIjpbImlzbyIsImllYyIsIjIzODIiXX19fSx7ImNhdGVnb3J5Ijoic3RhbmRhcmQiLCJwYXRoIjoiL3NpdGVzL2lzb29yZy9jb250ZW50cy9kYXRhL3N0YW5kYXJkLzAyLzY3LzI2NzM0IiwidXVpZCI6IjdhYTQ3MTA5LWQ2ODEtNDczYi1hYzdhLTlmYWNlOGViYTdlYyIsInRpdGxlIjoiSVNPL0lFQyAyMzgyLTE4OjE5OTkgSW5mb3JtYXRpb24gdGVjaG5vbG9neSDigJQgVm9jYWJ1bGFyeSDigJQgUGFydCAxODogRGlzdHJpYnV0ZWQgZGF0YSBwcm9jZXNzaW5nIiwic3RhdHVzIjoiV2l0aGRyYXduIiwieWVhciI6MjAxNSwib3JkZXIiOjEwMCwib2JqZWN0SUQiOiIyNjczNF8wIiwiX2hpZ2hsaWdodFJlc3VsdCI6eyJ0aXRsZSI6eyJ2YWx1ZSI6IjxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gPGVtPjIzODI8L2VtPi0xODoxOTk5IEluZm9ybWF0aW9uIHRlY2hub2xvZ3kg4oCUIFZvY2FidWxhcnkg4oCUIFBhcnQgMTg6IERpc3RyaWJ1dGVkIGRhdGEgcHJvY2Vzc2luZyIsIm1hdGNoTGV2ZWwiOiJmdWxsIiwiZnVsbHlIaWdobGlnaHRlZCI6ZmFsc2UsIm1hdGNoZWRXb3JkcyI6WyJpc28iLCJpZWMiLCIyMzgyIl19fX0seyJjYXRlZ29yeSI6InN0YW5kYXJkIiwicGF0aCI6Ii9zaXRlcy9pc29vcmcvY29udGVudHMvZGF0YS9zdGFuZGFyZC8wMi8xOC8yMTg0OCIsInV1aWQiOiIyM2RhMDhmNi03Nzc0LTRmMmEtYmUyZi02YmZjYWM1OTg3MGMiLCJ0aXRsZSI6IklTTy9JRUMgMjM4Mi0zNDoxOTk5IEluZm9ybWF0aW9uIHRlY2hub2xvZ3kg4oCUIFZvY2FidWxhcnkg4oCUIFBhcnQgMzQ6IEFydGlmaWNpYWwgaW50ZWxsaWdlbmNlIOKAlCBOZXVyYWwgbmV0d29ya3MiLCJzdGF0dXMiOiJXaXRoZHJhd24iLCJ5ZWFyIjoyMDE1LCJvcmRlciI6MTAwLCJvYmplY3RJRCI6IjIxODQ4XzAiLCJfaGlnaGxpZ2h0UmVzdWx0Ijp7InRpdGxlIjp7InZhbHVlIjoiPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiA8ZW0+MjM4MjwvZW0+LTM0OjE5OTkgSW5mb3JtYXRpb24gdGVjaG5vbG9neSDigJQgVm9jYWJ1bGFyeSDigJQgUGFydCAzNDogQXJ0aWZpY2lhbCBpbnRlbGxpZ2VuY2Ug4oCUIE5ldXJhbCBuZXR3b3JrcyIsIm1hdGNoTGV2ZWwiOiJmdWxsIiwiZnVsbHlIaWdobGlnaHRlZCI6ZmFsc2UsIm1hdGNoZWRXb3JkcyI6WyJpc28iLCJpZWMiLCIyMzgyIl19fX0seyJjYXRlZ29yeSI6InN0YW5kYXJkIiwicGF0aCI6Ii9zaXRlcy9pc29vcmcvY29udGVudHMvZGF0YS9zdGFuZGFyZC8wMi8xOC8yMTg0NiIsInV1aWQiOiI0NDU2ZmJhNy00MDI5LTRhMjgtOTQ0OS05NDcwNjQyYzM4ZGQiLCJ0aXRsZSI6IklTTy9JRUMgMjM4Mi0zMjoxOTk5IEluZm9ybWF0aW9uIHRlY2hub2xvZ3kg4oCUIFZvY2FidWxhcnkg4oCUIFBhcnQgMzI6IEVsZWN0cm9uaWMgTWFpbCIsInN0YXR1cyI6IldpdGhkcmF3biIsInllYXIiOjIwMTUsIm9yZGVyIjoxMDAsIm9iamVjdElEIjoiMjE4NDZfMCIsIl9oaWdobGlnaHRSZXN1bHQiOnsidGl0bGUiOnsidmFsdWUiOiI8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDxlbT4yMzgyPC9lbT4tMzI6MTk5OSBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBWb2NhYnVsYXJ5IOKAlCBQYXJ0IDMyOiBFbGVjdHJvbmljIE1haWwiLCJtYXRjaExldmVsIjoiZnVsbCIsImZ1bGx5SGlnaGxpZ2h0ZWQiOmZhbHNlLCJtYXRjaGVkV29yZHMiOlsiaXNvIiwiaWVjIiwiMjM4MiJdfX19LHsiY2F0ZWdvcnkiOiJzdGFuZGFyZCIsInBhdGgiOiIvc2l0ZXMvaXNvb3JnL2NvbnRlbnRzL2RhdGEvc3RhbmRhcmQvMDIvMTgvMjE4NDUiLCJ1dWlkIjoiYjg4OWIzMjQtNGM1MS00NGE2LTliY2MtNjM1MTRhZTRkZWNiIiwidGl0bGUiOiJJU08vSUVDIDIzODItMzE6MTk5NyBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBWb2NhYnVsYXJ5IOKAlCBQYXJ0IDMxOiBBcnRpZmljaWFsIGludGVsbGlnZW5jZSDigJQgTWFjaGluZSBsZWFybmluZyIsInN0YXR1cyI6IldpdGhkcmF3biIsInllYXIiOjIwMTUsIm9yZGVyIjoxMDAsIm9iamVjdElEIjoiMjE4NDVfMCIsIl9oaWdobGlnaHRSZXN1bHQiOnsidGl0bGUiOnsidmFsdWUiOiI8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDxlbT4yMzgyPC9lbT4tMzE6MTk5NyBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBWb2NhYnVsYXJ5IOKAlCBQYXJ0IDMxOiBBcnRpZmljaWFsIGludGVsbGlnZW5jZSDigJQgTWFjaGluZSBsZWFybmluZyIsIm1hdGNoTGV2ZWwiOiJmdWxsIiwiZnVsbHlIaWdobGlnaHRlZCI6ZmFsc2UsIm1hdGNoZWRXb3JkcyI6WyJpc28iLCJpZWMiLCIyMzgyIl19fX0seyJjYXRlZ29yeSI6InN0YW5kYXJkIiwicGF0aCI6Ii9zaXRlcy9pc29vcmcvY29udGVudHMvZGF0YS9zdGFuZGFyZC8wMi8wOS8yMDkyOSIsInV1aWQiOiJjMWJmOTFmOC0wMGE0LTRhNjctODZiZi0yMzgxYjRmODVlNDkiLCJ0aXRsZSI6IklTTy9JRUMgMjM4Mi05OjE5OTUgSW5mb3JtYXRpb24gdGVjaG5vbG9neSDigJQgVm9jYWJ1bGFyeSDigJQgUGFydCA5OiBEYXRhIGNvbW11bmljYXRpb24iLCJzdGF0dXMiOiJXaXRoZHJhd24iLCJ5ZWFyIjoyMDE1LCJvcmRlciI6MTAwLCJ0ZXh0IjoiSXMgaW50ZW5kZWQgdG8gZmFjaWxpdGF0ZSBpbnRlcm5hdGlvbmFsIGNvbW11bmljYXRpb24gaW4gZGF0YSBjb21tdW5pY2F0aW9uLiBQcmVzZW50cywgaW4gdHdvIGxhbmd1YWdlcywgdGVybXMgYW5kIGRlZmluaXRpb25zIG9mIHNlbGVjdGVkIGNvbmNlcHRzIHJlbGV2YW50IHRvIHRoZSBmaWVsZCBvZiBkYXRhIGNvbW11bmljYXRpb24gYW5kIGlkZW50aWZpZXMgcmVsYXRpb25zaGlwcyBhbW9uZyB0aGUgZW50cmllcy4gIiwib2JqZWN0SUQiOiIyMDkyOV8wIiwiX2hpZ2hsaWdodFJlc3VsdCI6eyJ0aXRsZSI6eyJ2YWx1ZSI6IjxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gPGVtPjIzODI8L2VtPi05OjE5OTUgSW5mb3JtYXRpb24gdGVjaG5vbG9neSDigJQgVm9jYWJ1bGFyeSDigJQgUGFydCA5OiBEYXRhIGNvbW11bmljYXRpb24iLCJtYXRjaExldmVsIjoiZnVsbCIsImZ1bGx5SGlnaGxpZ2h0ZWQiOmZhbHNlLCJtYXRjaGVkV29yZHMiOlsiaXNvIiwiaWVjIiwiMjM4MiJdfSwidGV4dCI6eyJ2YWx1ZSI6IklzIGludGVuZGVkIHRvIGZhY2lsaXRhdGUgaW50ZXJuYXRpb25hbCBjb21tdW5pY2F0aW9uIGluIGRhdGEgY29tbXVuaWNhdGlvbi4gUHJlc2VudHMsIGluIHR3byBsYW5ndWFnZXMsIHRlcm1zIGFuZCBkZWZpbml0aW9ucyBvZiBzZWxlY3RlZCBjb25jZXB0cyByZWxldmFudCB0byB0aGUgZmllbGQgb2YgZGF0YSBjb21tdW5pY2F0aW9uIGFuZCBpZGVudGlmaWVzIHJlbGF0aW9uc2hpcHMgYW1vbmcgdGhlIGVudHJpZXMuICIsIm1hdGNoTGV2ZWwiOiJub25lIiwibWF0Y2hlZFdvcmRzIjpbXX19fSx7ImNhdGVnb3J5Ijoic3RhbmRhcmQiLCJwYXRoIjoiL3NpdGVzL2lzb29yZy9jb250ZW50cy9kYXRhL3N0YW5kYXJkLzA1LzczLzU3MzQwIiwidXVpZCI6Ijg4ZTBlNzBkLTAyY2YtNDQwYy1hYTFmLWVkZDNiMzBmMjM2OSIsInRpdGxlIjoiSVNPL0lFQyAyMzgyLTM2OjIwMDgvQ29yIDE6MjAxMiBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBWb2NhYnVsYXJ5IOKAlCBQYXJ0IDM2OiBMZWFybmluZywgZWR1Y2F0aW9uIGFuZCB0cmFpbmluZyDigJQgVGVjaG5pY2FsIENvcnJpZ2VuZHVtIDEiLCJzdGF0dXMiOiJXaXRoZHJhd24iLCJ5ZWFyIjoyMDEzLCJvcmRlciI6MTAwLCJvYmplY3RJRCI6IjU3MzQwXzAiLCJfaGlnaGxpZ2h0UmVzdWx0Ijp7InRpdGxlIjp7InZhbHVlIjoiPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiA8ZW0+MjM4MjwvZW0+LTM2OjIwMDgvQ29yIDE6MjAxMiBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBWb2NhYnVsYXJ5IOKAlCBQYXJ0IDM2OiBMZWFybmluZywgZWR1Y2F0aW9uIGFuZCB0cmFpbmluZyDigJQgVGVjaG5pY2FsIENvcnJpZ2VuZHVtIDEiLCJtYXRjaExldmVsIjoiZnVsbCIsImZ1bGx5SGlnaGxpZ2h0ZWQiOmZhbHNlLCJtYXRjaGVkV29yZHMiOlsiaXNvIiwiaWVjIiwiMjM4MiJdfX19LHsiY2F0ZWdvcnkiOiJzdGFuZGFyZCIsInBhdGgiOiIvc2l0ZXMvaXNvb3JnL2NvbnRlbnRzL2RhdGEvc3RhbmRhcmQvMDQvNjEvNDYxNTIiLCJ1dWlkIjoiY2UwMzlhNTctYzA5ZC00NWM3LWI0YjMtYjEzNTNjMGRjM2U1IiwidGl0bGUiOiJJU08vSUVDIDIzODItMzY6MjAwOCBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBWb2NhYnVsYXJ5IOKAlCBQYXJ0IDM2OiBMZWFybmluZywgZWR1Y2F0aW9uIGFuZCB0cmFpbmluZyIsInN0YXR1cyI6IldpdGhkcmF3biIsInllYXIiOjIwMTMsIm9yZGVyIjoxMDAsInRleHQiOiJJU08vSUVDIDIzODItMzY6MjAwOCBpcyBpbnRlbmRlZCB0byBmYWNpbGl0YXRlIGludGVybmF0aW9uYWwgY29tbXVuaWNhdGlvbiBpbiBpbmZvcm1hdGlvbiB0ZWNobm9sb2d5IGZvciBsZWFybmluZywgZWR1Y2F0aW9uIGFuZCB0cmFpbmluZyAuIEl0IHByZXNlbnRzLCBpbiB0d28gbGFuZ3VhZ2VzLCB0ZXJtcyBhbmQgZGVmaW5pdGlvbnMgb2Ygc2VsZWN0ZWQgY29uY2VwdHMgcmVsZXZhbnQgdG8gdGhlIGZpZWxkIG9mIGluZm9ybWF0aW9uIHRlY2hub2xvZ3kgZm9yIGxlYXJuaW5nLCBlZHVjYXRpb24gYW5kIHRyYWluaW5nLCBhbmQgaWRlbnRpZmllcyByZWxhdGlvbnNoaXBzIGFtb25nIHRoZSBlbnRyaWVzLiAiLCJvYmplY3RJRCI6IjQ2MTUyXzAiLCJfaGlnaGxpZ2h0UmVzdWx0Ijp7InRpdGxlIjp7InZhbHVlIjoiPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiA8ZW0+MjM4MjwvZW0+LTM2OjIwMDggSW5mb3JtYXRpb24gdGVjaG5vbG9neSDigJQgVm9jYWJ1bGFyeSDigJQgUGFydCAzNjogTGVhcm5pbmcsIGVkdWNhdGlvbiBhbmQgdHJhaW5pbmciLCJtYXRjaExldmVsIjoiZnVsbCIsImZ1bGx5SGlnaGxpZ2h0ZWQiOmZhbHNlLCJtYXRjaGVkV29yZHMiOlsiaXNvIiwiaWVjIiwiMjM4MiJdfSwidGV4dCI6eyJ2YWx1ZSI6IjxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gPGVtPjIzODI8L2VtPi0zNjoyMDA4IGlzIGludGVuZGVkIHRvIGZhY2lsaXRhdGUgaW50ZXJuYXRpb25hbCBjb21tdW5pY2F0aW9uIGluIGluZm9ybWF0aW9uIHRlY2hub2xvZ3kgZm9yIGxlYXJuaW5nLCBlZHVjYXRpb24gYW5kIHRyYWluaW5nIC4gSXQgcHJlc2VudHMsIGluIHR3byBsYW5ndWFnZXMsIHRlcm1zIGFuZCBkZWZpbml0aW9ucyBvZiBzZWxlY3RlZCBjb25jZXB0cyByZWxldmFudCB0byB0aGUgZmllbGQgb2YgaW5mb3JtYXRpb24gdGVjaG5vbG9neSBmb3IgbGVhcm5pbmcsIGVkdWNhdGlvbiBhbmQgdHJhaW5pbmcsIGFuZCBpZGVudGlmaWVzIHJlbGF0aW9uc2hpcHMgYW1vbmcgdGhlIGVudHJpZXMuICIsIm1hdGNoTGV2ZWwiOiJmdWxsIiwiZnVsbHlIaWdobGlnaHRlZCI6ZmFsc2UsIm1hdGNoZWRXb3JkcyI6WyJpc28iLCJpZWMiLCIyMzgyIl19fX0seyJjYXRlZ29yeSI6InN0YW5kYXJkIiwicGF0aCI6Ii9zaXRlcy9pc29vcmcvY29udGVudHMvZGF0YS9zdGFuZGFyZC8wMC83Mi83MjQwIiwidXVpZCI6IjNlYjM0ZDU1LWFhNzgtNDQxZi1hN2YzLWFjNDVlNGJjZDhlMSIsInRpdGxlIjoiSVNPL0lFQyAyMzgyLTc6MTk4OSBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBWb2NhYnVsYXJ5IOKAlCBQYXJ0IDc6IENvbXB1dGVyIHByb2dyYW1taW5nIiwic3RhdHVzIjoiV2l0aGRyYXduIiwieWVhciI6MjAwMCwib3JkZXIiOjEwMCwib2JqZWN0SUQiOiI3MjQwXzAiLCJfaGlnaGxpZ2h0UmVzdWx0Ijp7InRpdGxlIjp7InZhbHVlIjoiPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiA8ZW0+MjM4MjwvZW0+LTc6MTk4OSBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBWb2NhYnVsYXJ5IOKAlCBQYXJ0IDc6IENvbXB1dGVyIHByb2dyYW1taW5nIiwibWF0Y2hMZXZlbCI6ImZ1bGwiLCJmdWxseUhpZ2hsaWdodGVkIjpmYWxzZSwibWF0Y2hlZFdvcmRzIjpbImlzbyIsImllYyIsIjIzODIiXX19fSx7ImNhdGVnb3J5Ijoic3RhbmRhcmQiLCJwYXRoIjoiL3NpdGVzL2lzb29yZy9jb250ZW50cy9kYXRhL3N0YW5kYXJkLzAwLzcyLzcyNjAiLCJ1dWlkIjoiNTExMTZmYTktMTIxNy00NTVkLWFiZmItM2M1ZDU1M2Y5ZjJhIiwidGl0bGUiOiJJU08vSUVDIDIzODItMTc6MTk5NiBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBWb2NhYnVsYXJ5IOKAlCBQYXJ0IDE3OiBEYXRhYmFzZXMiLCJzdGF0dXMiOiJXaXRoZHJhd24iLCJ5ZWFyIjoxOTk5LCJvcmRlciI6MTAwLCJvYmplY3RJRCI6IjcyNjBfMCIsIl9oaWdobGlnaHRSZXN1bHQiOnsidGl0bGUiOnsidmFsdWUiOiI8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDxlbT4yMzgyPC9lbT4tMTc6MTk5NiBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBWb2NhYnVsYXJ5IOKAlCBQYXJ0IDE3OiBEYXRhYmFzZXMiLCJtYXRjaExldmVsIjoiZnVsbCIsImZ1bGx5SGlnaGxpZ2h0ZWQiOmZhbHNlLCJtYXRjaGVkV29yZHMiOlsiaXNvIiwiaWVjIiwiMjM4MiJdfX19LHsiY2F0ZWdvcnkiOiJzdGFuZGFyZCIsInBhdGgiOiIvc2l0ZXMvaXNvb3JnL2NvbnRlbnRzL2RhdGEvc3RhbmRhcmQvMDUvMzIvNTMyMzAiLCJ1dWlkIjoiMWFmMzg2MDMtZDNiNS00Y2JlLTk4NDctNjYyYTBlZTJkODIwIiwidGl0bGUiOiJJU08vSUVDIFRSIDMwMTEwOjIwMTUgSW5mb3JtYXRpb24gdGVjaG5vbG9neSDigJQgQ3Jvc3MganVyaXNkaWN0aW9uYWwgYW5kIHNvY2lldGFsIGFzcGVjdHMgb2YgaW1wbGVtZW50YXRpb24gb2YgYmlvbWV0cmljIHRlY2hub2xvZ2llcyDigJQgQmlvbWV0cmljcyBhbmQgY2hpbGRyZW4iLCJzdGF0dXMiOiJQdWJsaXNoZWQiLCJ5ZWFyIjoyMDIyLCJvcmRlciI6MTEsInRleHQiOiJJU08vSUVDIFRSIDMwMTEwOjIwMTUgYnVpbGRzIHVwb24gdGhlIGdlbmVyYWwgcmVjb21tZW5kYXRpb25zIGdpdmVuIGluIElTTy9JRUMgVFIgMjQ3MTTigJExLiBJdCBwcm92aWRlcyBndWlkYW5jZSBmb3IgdXNlcnMgKGFzIGRlZmluZWQgaW4gSVNPL0lFQyAyMzgy4oCRMzcpIG9mIGJpb21ldHJpYyByZWNvZ25pdGlvbiBzeXN0ZW1zIG9uIHNwZWNpZmljIHJlcXVpcmVtZW50cyBpbiByZWxhdGlvbiB0byBkZXBsb3ltZW50cyB3aGVuIGNoaWxkcmVuIGFyZSBpbmNsdWRlZCBhcyBzdWJqZWN0cyBpbiB0aGUgYmlvbWV0cmljIHByb2Nlc3MuICIsIm9iamVjdElEIjoiNTMyMzBfMCIsIl9oaWdobGlnaHRSZXN1bHQiOnsidGl0bGUiOnsidmFsdWUiOiI8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IFRSIDMwMTEwOjIwMTUgSW5mb3JtYXRpb24gdGVjaG5vbG9neSDigJQgQ3Jvc3MganVyaXNkaWN0aW9uYWwgYW5kIHNvY2lldGFsIGFzcGVjdHMgb2YgaW1wbGVtZW50YXRpb24gb2YgYmlvbWV0cmljIHRlY2hub2xvZ2llcyDigJQgQmlvbWV0cmljcyBhbmQgY2hpbGRyZW4iLCJtYXRjaExldmVsIjoicGFydGlhbCIsImZ1bGx5SGlnaGxpZ2h0ZWQiOmZhbHNlLCJtYXRjaGVkV29yZHMiOlsiaXNvIiwiaWVjIl19LCJ0ZXh0Ijp7InZhbHVlIjoiPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiBUUiAzMDExMDoyMDE1IGJ1aWxkcyB1cG9uIHRoZSBnZW5lcmFsIHJlY29tbWVuZGF0aW9ucyBnaXZlbiBpbiA8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IFRSIDI0NzE04oCRMS4gSXQgcHJvdmlkZXMgZ3VpZGFuY2UgZm9yIHVzZXJzIChhcyBkZWZpbmVkIGluIDxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gPGVtPjIzODI8L2VtPuKAkTM3KSBvZiBiaW9tZXRyaWMgcmVjb2duaXRpb24gc3lzdGVtcyBvbiBzcGVjaWZpYyByZXF1aXJlbWVudHMgaW4gcmVsYXRpb24gdG8gZGVwbG95bWVudHMgd2hlbiBjaGlsZHJlbiBhcmUgaW5jbHVkZWQgYXMgc3ViamVjdHMgaW4gdGhlIGJpb21ldHJpYyBwcm9jZXNzLiAiLCJtYXRjaExldmVsIjoiZnVsbCIsImZ1bGx5SGlnaGxpZ2h0ZWQiOmZhbHNlLCJtYXRjaGVkV29yZHMiOlsiaXNvIiwiaWVjIiwiMjM4MiJdfX19LHsiY2F0ZWdvcnkiOiJzdGFuZGFyZCIsInBhdGgiOiIvc2l0ZXMvaXNvb3JnL2NvbnRlbnRzL2RhdGEvc3RhbmRhcmQvMDIvMTAvMjEwNzEiLCJ1dWlkIjoiM2RlZTVkNmUtM2IwYS00OGQxLThhNTgtZDY0MjQ0ODg3MmVhIiwidGl0bGUiOiJJU08vSUVDIFRSIDEyMzgyOjE5OTIgUGVybXV0ZWQgaW5kZXggb2YgdGhlIHZvY2FidWxhcnkgb2YgaW5mb3JtYXRpb24gdGVjaG5vbG9neSIsInN0YXR1cyI6IlB1Ymxpc2hlZCIsInllYXIiOjIwMTMsIm9yZGVyIjoxMSwidGV4dCI6IkNvbnRhaW5zIGEgcGVybXV0ZWQgaW5kZXggb2YgYWxsIHRlcm1zIGluY2x1ZGVkIGluIHRoZSBwYXJ0cyAxIC0gMjggb2YgSVNPIDIzODIuIElmIGFueSBvZiB0aGVzZSBwYXJ0cyBoYXMgYmVlbiByZXZpc2VkLCB0aGUgcHJlc2VudCBUUiByZWZlcnMgdG8gdGhlIHJldmlzaW9uLiAiLCJvYmplY3RJRCI6IjIxMDcxXzAiLCJfaGlnaGxpZ2h0UmVzdWx0Ijp7InRpdGxlIjp7InZhbHVlIjoiPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiBUUiAxMjM4MjoxOTkyIFBlcm11dGVkIGluZGV4IG9mIHRoZSB2b2NhYnVsYXJ5IG9mIGluZm9ybWF0aW9uIHRlY2hub2xvZ3kiLCJtYXRjaExldmVsIjoicGFydGlhbCIsImZ1bGx5SGlnaGxpZ2h0ZWQiOmZhbHNlLCJtYXRjaGVkV29yZHMiOlsiaXNvIiwiaWVjIl19LCJ0ZXh0Ijp7InZhbHVlIjoiQ29udGFpbnMgYSBwZXJtdXRlZCBpbmRleCBvZiBhbGwgdGVybXMgaW5jbHVkZWQgaW4gdGhlIHBhcnRzIDEgLSAyOCBvZiA8ZW0+SVNPPC9lbT4gPGVtPjIzODI8L2VtPi4gSWYgYW55IG9mIHRoZXNlIHBhcnRzIGhhcyBiZWVuIHJldmlzZWQsIHRoZSBwcmVzZW50IFRSIHJlZmVycyB0byB0aGUgcmV2aXNpb24uICIsIm1hdGNoTGV2ZWwiOiJwYXJ0aWFsIiwiZnVsbHlIaWdobGlnaHRlZCI6ZmFsc2UsIm1hdGNoZWRXb3JkcyI6WyJpc28iLCIyMzgyIl19fX1dLCJuYkhpdHMiOjM1LCJwYWdlIjowLCJuYlBhZ2VzIjoxLCJoaXRzUGVyUGFnZSI6MTAwLCJleGhhdXN0aXZlTmJIaXRzIjp0cnVlLCJleGhhdXN0aXZlVHlwbyI6dHJ1ZSwiZXhoYXVzdGl2ZSI6eyJuYkhpdHMiOnRydWUsInR5cG8iOnRydWV9LCJxdWVyeSI6IklTTy9JRUMgMjM4MiIsInBhcmFtcyI6InF1ZXJ5PUlTTyUyRklFQysyMzgyJmhpdHNQZXJQYWdlPTEwMCZmaWx0ZXJzPWNhdGVnb3J5JTNBc3RhbmRhcmQiLCJxdWVyeUlEIjoiOTI1ODIwMGU4OGU5N2I4Y2NkM2UzNDMxZDBiNzZmNTIiLCJfYXV0b21hdGljSW5zaWdodHMiOnRydWUsInJlbmRlcmluZ0NvbnRlbnQiOnt9LCJwcm9jZXNzaW5nVGltZU1TIjoyLCJwcm9jZXNzaW5nVGltaW5nc01TIjp7Il9yZXF1ZXN0Ijp7InJvdW5kVHJpcCI6MzE0fSwidG90YWwiOjJ9LCJzZXJ2ZXJUaW1lTVMiOjJ9
  recorded_at: Thu, 28 Dec 2023 16:48:09 GMT
- request:
    method: get
    uri: https://www.iso.org/contents/data/standard/07/25/72578.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 301
      message: ''
    headers:
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=730354058.36895.0000; path=/; Httponly;
        Secure
      - JSESSIONID=CDAD5D3644E11A1B70581939ACC53531; Path=/; Secure; HttpOnly
      Location:
      - "/standard/72578.html"
      Content-Length:
      - '0'
      Date:
      - Thu, 28 Dec 2023 16:48:08 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: UTF-8
      string: ''
  recorded_at: Thu, 28 Dec 2023 16:48:09 GMT
- request:
    method: post
    uri: https://www.itu.int/net4/ITU-T/search/GlobalSearch/RunSearch
    body:
      encoding: ASCII-8BIT
      string: json=%7B%22Input%22%3A%22ITU-T+K.20%22%2C%22Start%22%3A0%2C%22Rows%22%3A10%2C%22SortBy%22%3A%22RELEVANCE%22%2C%22ExactPhrase%22%3Afalse%2C%22CollectionName%22%3A%22General%22%2C%22CollectionGroup%22%3A%22Recommendations%22%2C%22Sector%22%3A%22t%22%2C%22Criterias%22%3A%5B%7B%22Name%22%3A%22Search+in%22%2C%22Criterias%22%3A%5B%7B%22Selected%22%3Afalse%2C%22Value%22%3A%22%22%2C%22Label%22%3A%22Name%22%2C%22Target%22%3A%22%2Fname_s%22%2C%22TypeName%22%3A%22CHECKBOX%22%2C%22GetCriteriaType%22%3A0%7D%2C%7B%22Selected%22%3Afalse%2C%22Value%22%3A%22%22%2C%22Label%22%3A%22Short+description%22%2C%22Target%22%3A%22%2Fshort_description_s%22%2C%22TypeName%22%3A%22CHECKBOX%22%2C%22GetCriteriaType%22%3A0%7D%2C%7B%22Selected%22%3Afalse%2C%22Value%22%3A%22%22%2C%22Label%22%3A%22File+content%22%2C%22Target%22%3A%22%2Ffile%22%2C%22TypeName%22%3A%22CHECKBOX%22%2C%22GetCriteriaType%22%3A0%7D%5D%2C%22ShowCheckbox%22%3Atrue%2C%22Selected%22%3Afalse%7D%5D%2C%22Topics%22%3A%22%22%2C%22ClientData%22%3A%7B%7D%2C%22Language%22%3A%22en%22%2C%22SearchType%22%3A%22All%22%7D
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_2) AppleWebKit/601.3.9 (KHTML,
        like Gecko) Version/9.0.2 Safari/601.3.9
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Host:
      - www.itu.int
      Content-Type:
      - application/x-www-form-urlencoded
      Content-Length:
      - '1059'
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=utf-8
      Set-Cookie:
      - BIGipServerV19edYz/rGMxUCJeS7ZH3w=!pjfaKUukGxkYsD+rKNZ4ylMtnsGUZCVS5ZBkywPeLy6HCCQAiZg6TPSPAh1IviPpwZis4WM/uQRz5JY=;
        path=/; Httponly; Secure
      - GSCookie_CookieId=KqONt3rpjx8PHE8%2Ba16UZJDIAcxdym3cmWoCdB2JzMcLa620HqGSpV0aIcBGLLReHbNEhd7JsJiWpuF8nmsRJg%3D%3D;
        expires=Sun, 28 Dec 2025 16:48:10 GMT; domain=www.itu.int; path=/
      - GSCookie_CookieId=PjqBsmBbwqtj2tbGuQpwONYUCmNEU3a4V7krJw6rCjHuBLdXt8Up34Kg02pAJwI5qiuFe8NgB6iIIrYU8W3JMg%3D%3D;
        expires=Sun, 28 Dec 2025 16:48:10 GMT; domain=www.itu.int; path=/
      - GSCookie_QueryId=7097884; expires=Sun, 28 Dec 2025 16:48:10 GMT; domain=www.itu.int;
        path=/
      - GSCookie_QueryId=; expires=Sun, 28 Dec 2025 16:48:10 GMT; domain=www.itu.int;
        path=/
      - TS010592a8=018bf709fc3267215b7b687e6c3ef171fcea7ec1966a9a4f295837d7b0665f1f45725648c58bc8a3120a54712803495ba23b59bbd9;
        Path=/;
      - TS0110b275=018bf709fc3267215b7b687e6c3ef171fcea7ec1966a9a4f295837d7b0665f1f45725648c58bc8a3120a54712803495ba23b59bbd9;
        path=/; domain=www.itu.int
      - TS70351561027=08b49714d4ab20004cf6f3fa8a1701f675bf3315f6d688fe75206c5638dc4aa7640c5432b1068da60825517e28113000cdb1218d98543a5c3aa79917162ee497855f56862eacd13aef4d6ed490f127d769244051b9179803aee6c96e5af5d414;
        Path=/
      Date:
      - Thu, 28 Dec 2023 16:48:10 GMT
      Transfer-Encoding:
      - chunked
    body:
      encoding: UTF-8
      string: '{"results":[{"Identifier":"11.1002/1000/15177-en","Title":"ITU-T K.20
        (11/2022): Resistibility of telecommunication equipment installed in a telecommunication
        centre to overvoltages and overcurrents","Collection":{"Name":"ITU-T Recommendations","Title":"ITU-T
        Recommendations","Description":"","Sector":"ITU-T","Group":"Recommendations"},"Redirection":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F15177-en\u0026position=10\u0026page=1","Language":"en","Dir":"ltr","Properties":[{"Title":"Publication
        date","Value":"March, 2023"}],"ExtractFileContent":"...[\r\n  \u0022    Recommendations
        Standardization Sector Recommendation ITU-T K.20 (11/2022)  SERIES K: Protection
        against interference  Resistibility of telecommunication equipment installed
        in a telecommunication cen...","Locations":[{"Id":"1","Type":"pdf","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F15177-en%3Flocatt%3Did%3A1%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-K.20-202211-I!!PDF-E\u0026type=items","Icon":"pdf-icon.png"},{"Id":"2","Type":"doc","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F15177-en%3Flocatt%3Did%3A2%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-K.20-202211-I!!MSW-E\u0026type=items","Icon":"doc-icon.png"}],"TopResult":false,"Words":{"ITU-T":true,"K.20":true},"Media":{"Identifier":"11.1002/1000/15177-en","Date":"March,
        2023","Url":null,"Name":"ITU-T K.20 (11/2022)","ParentHandleID":"","ParentName":null,"Type":null,"ContentText":null,"ImageUrl":null,"Tags":[]},"WordsMissing":false,"CollectionTypeCSSClass":"label-t-sector","LanguageCSSClass":"label-en"},{"Identifier":"11.1002/1000/14723-en","Title":"ITU-T
        K.20 (06/2021): Resistibility of telecommunication equipment installed in
        a telecommunication centre to overvoltages and overcurrents","Collection":{"Name":"ITU-T
        Recommendations","Title":"ITU-T Recommendations","Description":"","Sector":"ITU-T","Group":"Recommendations"},"Redirection":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F14723-en\u0026position=9\u0026page=1","Language":"en","Dir":"ltr","Properties":[{"Title":"Publication
        date","Value":"September, 2021"}],"ExtractFileContent":"...lecommunication
        centre to overvoltages and overcurrents  Recommendation  ITU-T  K.20           Rec.
        ITU-T K.20 (06/2021) i Recommendation ITU-T K.20 Resistibility of telecommunication
        equipment installed in a t...","Locations":[{"Id":"1","Type":"pdf","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F14723-en%3Flocatt%3Did%3A1%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-K.20-202106-S!!PDF-E\u0026type=items","Icon":"pdf-icon.png"},{"Id":"2","Type":"doc","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F14723-en%3Flocatt%3Did%3A2%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-K.20-202106-S!!MSW-E\u0026type=items","Icon":"doc-icon.png"}],"TopResult":false,"Words":{"ITU-T":true,"K.20":true},"Media":{"Identifier":"11.1002/1000/14723-en","Date":"September,
        2021","Url":null,"Name":"ITU-T K.20 (06/2021)","ParentHandleID":"","ParentName":null,"Type":null,"ContentText":null,"ImageUrl":null,"Tags":[]},"WordsMissing":false,"CollectionTypeCSSClass":"label-t-sector","LanguageCSSClass":"label-en"},{"Identifier":"11.1002/1000/14067-en","Title":"ITU-T
        K.20 (11/2019): Resistibility of telecommunication equipment installed in
        a telecommunication centre to overvoltages and overcurrents","Collection":{"Name":"ITU-T
        Recommendations","Title":"ITU-T Recommendations","Description":"","Sector":"ITU-T","Group":"Recommendations"},"Redirection":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F14067-en\u0026position=8\u0026page=1","Language":"en","Dir":"ltr","Properties":[{"Title":"Publication
        date","Value":"December, 2019"}],"ExtractFileContent":"...lecommunication
        centre to overvoltages and overcurrents  Recommendation  ITU-T  K.20           Rec.
        ITU-T K.20 (11/2019) i Recommendation ITU-T K.20 Resistibility of telecommunication
        equipment installed in a t...","Locations":[{"Id":"1","Type":"pdf","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F14067-en%3Flocatt%3Did%3A1%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-K.20-201911-S!!PDF-E\u0026type=items","Icon":"pdf-icon.png"},{"Id":"2","Type":"doc","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F14067-en%3Flocatt%3Did%3A2%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-K.20-201911-S!!MSW-E\u0026type=items","Icon":"doc-icon.png"},{"Id":"3","Type":"epu","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F14067-en%3Flocatt%3Did%3A3%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-K.20-201911-S!!EPB-E\u0026type=items","Icon":"epub-icon.png"}],"TopResult":false,"Words":{"ITU-T":true,"K.20":true},"Media":{"Identifier":"11.1002/1000/14067-en","Date":"December,
        2019","Url":null,"Name":"ITU-T K.20 (11/2019)","ParentHandleID":"","ParentName":null,"Type":null,"ContentText":null,"ImageUrl":null,"Tags":[]},"WordsMissing":false,"CollectionTypeCSSClass":"label-t-sector","LanguageCSSClass":"label-en"},{"Identifier":"11.1002/1000/13950-en","Title":"ITU-T
        K.20 (07/2019): Resistibility of telecommunication equipment installed in
        a telecommunication centre to overvoltages and overcurrents","Collection":{"Name":"ITU-T
        Recommendations","Title":"ITU-T Recommendations","Description":"","Sector":"ITU-T","Group":"Recommendations"},"Redirection":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F13950-en\u0026position=7\u0026page=1","Language":"en","Dir":"ltr","Properties":[{"Title":"Publication
        date","Value":"September, 2019"}],"ExtractFileContent":"...lecommunication
        centre to overvoltages and overcurrents  Recommendation  ITU-T  K.20           Rec.
        ITU-T K.20 (07/2019) i Recommendation ITU-T K.20 Resistibility of telecommunication
        equipment installed in a t...","Locations":[{"Id":"1","Type":"pdf","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F13950-en%3Flocatt%3Did%3A1%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-K.20-201907-S!!PDF-E\u0026type=items","Icon":"pdf-icon.png"},{"Id":"2","Type":"doc","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F13950-en%3Flocatt%3Did%3A2%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-K.20-201907-S!!MSW-E\u0026type=items","Icon":"doc-icon.png"}],"TopResult":false,"Words":{"ITU-T":true,"K.20":true},"Media":{"Identifier":"11.1002/1000/13950-en","Date":"September,
        2019","Url":null,"Name":"ITU-T K.20 (07/2019)","ParentHandleID":"","ParentName":null,"Type":null,"ContentText":null,"ImageUrl":null,"Tags":[]},"WordsMissing":false,"CollectionTypeCSSClass":"label-t-sector","LanguageCSSClass":"label-en"},{"Identifier":"11.1002/1000/13629-en","Title":"ITU-T
        K.20 (10/2018): Resistibility of telecommunication equipment installed in
        a telecommunication centre to overvoltages and overcurrents","Collection":{"Name":"ITU-T
        Recommendations","Title":"ITU-T Recommendations","Description":"","Sector":"ITU-T","Group":"Recommendations"},"Redirection":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F13629-en\u0026position=6\u0026page=1","Language":"en","Dir":"ltr","Properties":[{"Title":"Publication
        date","Value":"December, 2018"}],"ExtractFileContent":"...telecommunication
        centre to overvoltages and overcurrents  Recommendation  ITU-T  K.20         Rec.
        ITU-T K.20 (10/2018) i Recommendation ITU-T K.20 Resistibility of telecommunication
        equipment installed in a t...","Locations":[{"Id":"1","Type":"pdf","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F13629-en%3Flocatt%3Did%3A1%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-K.20-201810-S!!PDF-E\u0026type=items","Icon":"pdf-icon.png"},{"Id":"2","Type":"doc","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F13629-en%3Flocatt%3Did%3A2%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-K.20-201810-S!!MSW-E\u0026type=items","Icon":"doc-icon.png"}],"TopResult":false,"Words":{"ITU-T":true,"K.20":true},"Media":{"Identifier":"11.1002/1000/13629-en","Date":"December,
        2018","Url":null,"Name":"ITU-T K.20 (10/2018)","ParentHandleID":"","ParentName":null,"Type":null,"ContentText":null,"ImageUrl":null,"Tags":[]},"WordsMissing":false,"CollectionTypeCSSClass":"label-t-sector","LanguageCSSClass":"label-en"},{"Identifier":"11.1002/1000/13272-en","Title":"ITU-T
        K.20 (07/2017): Resistibility of telecommunication equipment installed in
        a telecommunication centre to overvoltages and overcurrents","Collection":{"Name":"ITU-T
        Recommendations","Title":"ITU-T Recommendations","Description":"","Sector":"ITU-T","Group":"Recommendations"},"Redirection":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F13272-en\u0026position=5\u0026page=1","Language":"en","Dir":"ltr","Properties":[{"Title":"Publication
        date","Value":"September, 2017"}],"ExtractFileContent":"...lecommunication
        centre to overvoltages and overcurrents  Recommendation  ITU-T  K.20           Rec.
        ITU-T K.20 (07/2017) i Recommendation ITU-T K.20 Resistibility of telecommunication
        equipment installed in a t...","Locations":[{"Id":"1","Type":"pdf","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F13272-en%3Flocatt%3Did%3A1%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-K.20-201707-S!!PDF-E\u0026type=items","Icon":"pdf-icon.png"},{"Id":"2","Type":"doc","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F13272-en%3Flocatt%3Did%3A2%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-K.20-201707-S!!MSW-E\u0026type=items","Icon":"doc-icon.png"}],"TopResult":false,"Words":{"ITU-T":true,"K.20":true},"Media":{"Identifier":"11.1002/1000/13272-en","Date":"September,
        2017","Url":null,"Name":"ITU-T K.20 (07/2017)","ParentHandleID":"","ParentName":null,"Type":null,"ContentText":null,"ImageUrl":null,"Tags":[]},"WordsMissing":false,"CollectionTypeCSSClass":"label-t-sector","LanguageCSSClass":"label-en"},{"Identifier":"11.1002/1000/13126-en","Title":"ITU-T
        K.20 (12/2016): Resistibility of telecommunication equipment installed in
        a telecommunication centre to overvoltages and overcurrents","Collection":{"Name":"ITU-T
        Recommendations","Title":"ITU-T Recommendations","Description":"","Sector":"ITU-T","Group":"Recommendations"},"Redirection":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F13126-en\u0026position=4\u0026page=1","Language":"en","Dir":"ltr","Properties":[{"Title":"Publication
        date","Value":"February, 2017"}],"ExtractFileContent":"...lecommunication
        centre to overvoltages and overcurrents  Recommendation  ITU-T  K.20           Rec.
        ITU-T K.20 (12/2016) i Recommendation ITU-T K.20 Resistibility of telecommunication
        equipment installed in a t...","Locations":[{"Id":"1","Type":"pdf","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F13126-en%3Flocatt%3Did%3A1%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-K.20-201612-S!!PDF-E\u0026type=items","Icon":"pdf-icon.png"},{"Id":"2","Type":"doc","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F13126-en%3Flocatt%3Did%3A2%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-K.20-201612-S!!MSW-E\u0026type=items","Icon":"doc-icon.png"}],"TopResult":false,"Words":{"ITU-T":true,"K.20":true},"Media":{"Identifier":"11.1002/1000/13126-en","Date":"February,
        2017","Url":null,"Name":"ITU-T K.20 (12/2016)","ParentHandleID":"","ParentName":null,"Type":null,"ContentText":null,"ImageUrl":null,"Tags":[]},"WordsMissing":false,"CollectionTypeCSSClass":"label-t-sector","LanguageCSSClass":"label-en"},{"Identifier":"11.1002/1000/12867-en","Title":"ITU-T
        K.20 (06/2016): Resistibility of telecommunication equipment installed in
        a telecommunication centre to overvoltages and overcurrents","Collection":{"Name":"ITU-T
        Recommendations","Title":"ITU-T Recommendations","Description":"","Sector":"ITU-T","Group":"Recommendations"},"Redirection":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F12867-en\u0026position=3\u0026page=1","Language":"en","Dir":"ltr","Properties":[{"Title":"Publication
        date","Value":"August, 2016"}],"ExtractFileContent":"...lecommunication centre
        to overvoltages and overcurrents  Recommendation  ITU-T  K.20           Rec.
        ITU-T K.20 (06/2016) i Recommendation ITU-T K.20 Resistibility of telecommunication
        equipment installed in a t...","Locations":[{"Id":"1","Type":"pdf","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F12867-en%3Flocatt%3Did%3A1%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-K.20-201606-S!!PDF-E\u0026type=items","Icon":"pdf-icon.png"},{"Id":"2","Type":"doc","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F12867-en%3Flocatt%3Did%3A2%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-K.20-201606-S!!MSW-E\u0026type=items","Icon":"doc-icon.png"}],"TopResult":false,"Words":{"ITU-T":true,"K.20":true},"Media":{"Identifier":"11.1002/1000/12867-en","Date":"August,
        2016","Url":null,"Name":"ITU-T K.20 (06/2016)","ParentHandleID":"","ParentName":null,"Type":null,"ContentText":null,"ImageUrl":null,"Tags":[]},"WordsMissing":false,"CollectionTypeCSSClass":"label-t-sector","LanguageCSSClass":"label-en"},{"Identifier":"11.1002/1000/12403-en","Title":"ITU-T
        K.20 (04/2015): Resistibility of telecommunication equipment installed in
        a telecommunication centre to overvoltages and overcurrents","Collection":{"Name":"ITU-T
        Recommendations","Title":"ITU-T Recommendations","Description":"","Sector":"ITU-T","Group":"Recommendations"},"Redirection":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F12403-en\u0026position=2\u0026page=1","Language":"en","Dir":"ltr","Properties":[{"Title":"Publication
        date","Value":"July, 2015"}],"ExtractFileContent":"...a telecommunication
        centre to overvoltages and overcurrents  Recommendation  ITU-T  K.20       Rec.
        ITU-T K.20 (04/2015) i Recommendation ITU-T K.20 Resistibility of telecommunication
        equipment installed in a  ...","Locations":[{"Id":"1","Type":"pdf","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F12403-en%3Flocatt%3Did%3A1%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-K.20-201504-S!!PDF-E\u0026type=items","Icon":"pdf-icon.png"},{"Id":"2","Type":"doc","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F12403-en%3Flocatt%3Did%3A2%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-K.20-201504-S!!MSW-E\u0026type=items","Icon":"doc-icon.png"}],"TopResult":false,"Words":{"ITU-T":true,"K.20":true},"Media":{"Identifier":"11.1002/1000/12403-en","Date":"July,
        2015","Url":null,"Name":"ITU-T K.20 (04/2015)","ParentHandleID":"","ParentName":null,"Type":null,"ContentText":null,"ImageUrl":null,"Tags":[]},"WordsMissing":false,"CollectionTypeCSSClass":"label-t-sector","LanguageCSSClass":"label-en"},{"Identifier":"11.1002/1000/11420-en","Title":"ITU-T
        K.20 (11/2011): Resistibility of telecommunication equipment installed in
        a telecommunications centre to overvoltages and overcurrents","Collection":{"Name":"ITU-T
        Recommendations","Title":"ITU-T Recommendations","Description":"","Sector":"ITU-T","Group":"Recommendations"},"Redirection":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F11420-en\u0026position=1\u0026page=1","Language":"en","Dir":"ltr","Properties":[{"Title":"Publication
        date","Value":"May, 2012"}],"ExtractFileContent":"...ecommunications centre
        to overvoltages and overcurrents  Recommendation  ITU-T  K.20           Rec.
        ITU-T K.20 (11/2011) i Recommendation ITU-T K.20 Resistibility of telecommunication
        equipment installed in a t...","Locations":[{"Id":"1","Type":"pdf","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F11420-en%3Flocatt%3Did%3A1%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-K.20-201111-S!!PDF-E\u0026type=items","Icon":"pdf-icon.png"},{"Id":"2","Type":"doc","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F11420-en%3Flocatt%3Did%3A2%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-K.20-201111-S!!MSW-E\u0026type=items","Icon":"doc-icon.png"}],"TopResult":false,"Words":{"ITU-T":true,"K.20":true},"Media":{"Identifier":"11.1002/1000/11420-en","Date":"May,
        2012","Url":null,"Name":"ITU-T K.20 (11/2011)","ParentHandleID":"","ParentName":null,"Type":null,"ContentText":null,"ImageUrl":null,"Tags":[]},"WordsMissing":false,"CollectionTypeCSSClass":"label-t-sector","LanguageCSSClass":"label-en"}],"input":"ITU-T
        K.20","totalAmount":5836,"collationQuery":"","attempt":0,"languageUpdated":false,"allowed":true}'
  recorded_at: Thu, 28 Dec 2023 16:48:11 GMT
- request:
    method: post
    uri: https://www.itu.int/net4/ITU-T/search/GlobalSearch/RunSearch
    body:
      encoding: ASCII-8BIT
      string: json=%7B%22Input%22%3A%22ITU-T+G.984.2%22%2C%22Start%22%3A0%2C%22Rows%22%3A10%2C%22SortBy%22%3A%22RELEVANCE%22%2C%22ExactPhrase%22%3Afalse%2C%22CollectionName%22%3A%22General%22%2C%22CollectionGroup%22%3A%22Recommendations%22%2C%22Sector%22%3A%22t%22%2C%22Criterias%22%3A%5B%7B%22Name%22%3A%22Search+in%22%2C%22Criterias%22%3A%5B%7B%22Selected%22%3Afalse%2C%22Value%22%3A%22%22%2C%22Label%22%3A%22Name%22%2C%22Target%22%3A%22%2Fname_s%22%2C%22TypeName%22%3A%22CHECKBOX%22%2C%22GetCriteriaType%22%3A0%7D%2C%7B%22Selected%22%3Afalse%2C%22Value%22%3A%22%22%2C%22Label%22%3A%22Short+description%22%2C%22Target%22%3A%22%2Fshort_description_s%22%2C%22TypeName%22%3A%22CHECKBOX%22%2C%22GetCriteriaType%22%3A0%7D%2C%7B%22Selected%22%3Afalse%2C%22Value%22%3A%22%22%2C%22Label%22%3A%22File+content%22%2C%22Target%22%3A%22%2Ffile%22%2C%22TypeName%22%3A%22CHECKBOX%22%2C%22GetCriteriaType%22%3A0%7D%5D%2C%22ShowCheckbox%22%3Atrue%2C%22Selected%22%3Afalse%7D%5D%2C%22Topics%22%3A%22%22%2C%22ClientData%22%3A%7B%7D%2C%22Language%22%3A%22en%22%2C%22SearchType%22%3A%22All%22%7D
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_2) AppleWebKit/601.3.9 (KHTML,
        like Gecko) Version/9.0.2 Safari/601.3.9
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Host:
      - www.itu.int
      Content-Type:
      - application/x-www-form-urlencoded
      Content-Length:
      - '1062'
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=utf-8
      Set-Cookie:
      - BIGipServerV19edYz/rGMxUCJeS7ZH3w=!NmVYpP6PWixOfQZkxr8wTjLVJzvC1jJZY21pbCWccWx5N1l+jm5CYcHER37Sq8qFe+O9Dy1sOXMNkn0=;
        path=/; Httponly; Secure
      - GSCookie_CookieId=5n4taaFOcKqjGcM6zuY0FcZu2zv53yQ%2Fb%2F64ugKIgaokidVgGfgLnFA61dC9q0lhB1F2PeHDkGsY3c2AZieIog%3D%3D;
        expires=Sun, 28 Dec 2025 16:48:10 GMT; domain=www.itu.int; path=/
      - GSCookie_CookieId=IRRgAaLbS5yhiBasTL1fRRXquyRGntDqC0X4XgTBpJd66xlU4l2H%2B%2BlGpFEW47GUs2t5ZuKV52gdQP0clzM82A%3D%3D;
        expires=Sun, 28 Dec 2025 16:48:10 GMT; domain=www.itu.int; path=/
      - GSCookie_QueryId=7097885; expires=Sun, 28 Dec 2025 16:48:10 GMT; domain=www.itu.int;
        path=/
      - GSCookie_QueryId=; expires=Sun, 28 Dec 2025 16:48:10 GMT; domain=www.itu.int;
        path=/
      - TS010592a8=018bf709fc8fe10d0a45ed6e382674cb69a60d8c8777aff501ac6f7a5023ddbe082b0eda96d064c1df4a1cf86f99a7853072c21bf7;
        Path=/;
      - TS0110b275=018bf709fc8fe10d0a45ed6e382674cb69a60d8c8777aff501ac6f7a5023ddbe082b0eda96d064c1df4a1cf86f99a7853072c21bf7;
        path=/; domain=www.itu.int
      - TS70351561027=08b49714d4ab2000b875427146c11e1949c6a4506c7f04960b1a7ec05686689371e1f92855a2701e08ef380ca71130008eda1a41014dc1f13aa79917162ee497d6f24ead68ff2cff0357d7acb7e85e949a6fc0bd610bbc4009640a1606b49c04;
        Path=/
      Date:
      - Thu, 28 Dec 2023 16:48:10 GMT
      Transfer-Encoding:
      - chunked
    body:
      encoding: UTF-8
      string: '{"results":[{"Identifier":"11.1002/1000/14000-en","Title":"ITU-T G.984.2
        (08/2019): Gigabit-capable Passive Optical Networks (G-PON): Physical Media
        Dependent (PMD) layer specification","Collection":{"Name":"ITU-T Recommendations","Title":"ITU-T
        Recommendations","Description":"","Sector":"ITU-T","Group":"Recommendations"},"Redirection":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F14000-en\u0026position=10\u0026page=1","Language":"en","Dir":"ltr","Properties":[{"Title":"Publication
        date","Value":"November, 2019"}],"ExtractFileContent":"...S G.9000\u2013G.9999   For
        further details, please refer to the list of ITU-T Recommendations.      Rec.
        ITU-T G.984.2 (08/2019) i Recommendation ITU-T G.984.2 Gigabit-capable passive
        optical networks (GPON): Physical ...","Locations":[{"Id":"1","Type":"pdf","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F14000-en%3Flocatt%3Did%3A1%26auth","RawHref":"http://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-G.984.2-201908-I!!PDF-E\u0026type=items","Icon":"pdf-icon.png"},{"Id":"2","Type":"doc","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F14000-en%3Flocatt%3Did%3A2%26auth","RawHref":"http://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-G.984.2-201908-I!!MSW-E\u0026type=items","Icon":"doc-icon.png"},{"Id":"3","Type":"epu","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F14000-en%3Flocatt%3Did%3A3%26auth","RawHref":"http://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-G.984.2-201908-I!!EPB-E\u0026type=items","Icon":"epub-icon.png"}],"TopResult":false,"Words":{"ITU-T":true,"G.984.2":true},"Media":{"Identifier":"11.1002/1000/14000-en","Date":"November,
        2019","Url":null,"Name":"ITU-T G.984.2 (08/2019)","ParentHandleID":"","ParentName":null,"Type":null,"ContentText":null,"ImageUrl":null,"Tags":[]},"WordsMissing":false,"CollectionTypeCSSClass":"label-t-sector","LanguageCSSClass":"label-en"},{"Identifier":"11.1002/1000/6273-en","Title":"ITU-T
        G.984.2 (03/2003): Gigabit-capable Passive Optical Networks (G-PON): Physical
        Media Dependent (PMD) layer specification","Collection":{"Name":"ITU-T Recommendations","Title":"ITU-T
        Recommendations","Description":"","Sector":"ITU-T","Group":"Recommendations"},"Redirection":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F6273-en\u0026position=9\u0026page=1","Language":"en","Dir":"ltr","Properties":[{"Title":"Publication
        date","Value":"October, 2003"}],"ExtractFileContent":"...\n  \u0022    INTERNATIONAL  TELECOMMUNICATION  UNION   ITU-T  G.984.2TELECOMMUNICATION
        STANDARDIZATION  SECTOR...... INTERNATIONAL  TELECOMMUNICATION  UNION   ITU-T  G.984.2TELECOMMUNICATION
        STANDARDIZATION  SECTOR OF  ITU ...","Locations":[{"Id":"1","Type":"zip","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F6273-en%3Flocatt%3Did%3A1%26auth","RawHref":"http://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-G.984.2-200303-S!!ZWD-E\u0026type=items","Icon":"zip-icon.png"},{"Id":"2","Type":"pdf","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F6273-en%3Flocatt%3Did%3A2%26auth","RawHref":"http://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-G.984.2-200303-S!!PDF-E\u0026type=items","Icon":"pdf-icon.png"},{"Id":"3","Type":"doc","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F6273-en%3Flocatt%3Did%3A3%26auth","RawHref":"http://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-G.984.2-200303-S!!MSW-E\u0026type=items","Icon":"doc-icon.png"}],"TopResult":false,"Words":{"ITU-T":true,"G.984.2":true},"Media":{"Identifier":"11.1002/1000/6273-en","Date":"October,
        2003","Url":null,"Name":"ITU-T G.984.2 (03/2003)","ParentHandleID":"","ParentName":null,"Type":null,"ContentText":null,"ImageUrl":null,"Tags":[]},"WordsMissing":false,"CollectionTypeCSSClass":"label-t-sector","LanguageCSSClass":"label-en"},{"Identifier":"11.1002/1000/9380-en","Title":"ITU-T
        G.984.2 (2003) Amd. 2 (03/2008)","Collection":{"Name":"ITU-T Recommendations","Title":"ITU-T
        Recommendations","Description":"","Sector":"ITU-T","Group":"Recommendations"},"Redirection":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F9380-en\u0026position=8\u0026page=1","Language":"en","Dir":"ltr","Properties":[{"Title":"Publication
        date","Value":"September, 2008"}],"ExtractFileContent":"...  T e l e c o m
        m u n i c a t i o n  U n i o n    ITU-T  G.984.2TELECOMMUNICATION STANDARDIZATION  SECTOR......
        e c o m m u n i c a t i o n  U n i o n    ITU-T  G.984.2TELECOMMUNICATION
        STANDARDIZATION  SECTOR OF  ITU ...","Locations":[{"Id":"1","Type":"zip","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F9380-en%3Flocatt%3Did%3A1%26auth","RawHref":"http://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-G.984.2-200803-S!Amd2!ZWD-E\u0026type=items","Icon":"zip-icon.png"},{"Id":"2","Type":"pdf","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F9380-en%3Flocatt%3Did%3A2%26auth","RawHref":"http://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-G.984.2-200803-S!Amd2!PDF-E\u0026type=items","Icon":"pdf-icon.png"},{"Id":"3","Type":"doc","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F9380-en%3Flocatt%3Did%3A3%26auth","RawHref":"http://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-G.984.2-200803-S!Amd2!MSW-E\u0026type=items","Icon":"doc-icon.png"}],"TopResult":false,"Words":{"ITU-T":true,"G.984.2":true},"Media":{"Identifier":"11.1002/1000/9380-en","Date":"September,
        2008","Url":null,"Name":"ITU-T G.984.2 (2003) Amd. 2 (03/2008)","ParentHandleID":"","ParentName":null,"Type":null,"ContentText":null,"ImageUrl":null,"Tags":[]},"WordsMissing":false,"CollectionTypeCSSClass":"label-t-sector","LanguageCSSClass":"label-en"},{"Identifier":"11.1002/1000/8746-en","Title":"ITU-T
        G.984.2 (2003) Amd. 1 (02/2006): New Appendix III \u2013 Industry best practice
        for 2.488 Gbit/s downstream, 1.244 Gbit/s upstream G-PON","Collection":{"Name":"ITU-T
        Recommendations","Title":"ITU-T Recommendations","Description":"","Sector":"ITU-T","Group":"Recommendations"},"Redirection":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F8746-en\u0026position=7\u0026page=1","Language":"en","Dir":"ltr","Properties":[{"Title":"Publication
        date","Value":"June, 2006"}],"ExtractFileContent":"...  T e l e c o m m u
        n i c a t i o n  U n i o n    ITU-T  G.984.2TELECOMMUNICATION STANDARDIZATION  SECTOR......
        e c o m m u n i c a t i o n  U n i o n    ITU-T  G.984.2TELECOMMUNICATION
        STANDARDIZATION  SECTOR OF  ITU ...","Locations":[{"Id":"1","Type":"zip","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F8746-en%3Flocatt%3Did%3A1%26auth","RawHref":"http://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-G.984.2-200602-S!Amd1!ZWD-E\u0026type=items","Icon":"zip-icon.png"},{"Id":"2","Type":"pdf","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F8746-en%3Flocatt%3Did%3A2%26auth","RawHref":"http://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-G.984.2-200602-S!Amd1!PDF-E\u0026type=items","Icon":"pdf-icon.png"},{"Id":"3","Type":"doc","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F8746-en%3Flocatt%3Did%3A3%26auth","RawHref":"http://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-G.984.2-200602-S!Amd1!MSW-E\u0026type=items","Icon":"doc-icon.png"}],"TopResult":false,"Words":{"ITU-T":true,"G.984.2":true},"Media":{"Identifier":"11.1002/1000/8746-en","Date":"June,
        2006","Url":null,"Name":"ITU-T G.984.2 (2003) Amd. 1 (02/2006)","ParentHandleID":"","ParentName":null,"Type":null,"ContentText":null,"ImageUrl":null,"Tags":[]},"WordsMissing":false,"CollectionTypeCSSClass":"label-t-sector","LanguageCSSClass":"label-en"},{"Identifier":"11.1002/1000/14927-en","Title":"ITU-T
        G.984.5 (02/2022): Gigabit-capable passive optical networks (G-PON): Enhancement
        band","Collection":{"Name":"ITU-T Recommendations","Title":"ITU-T Recommendations","Description":"","Sector":"ITU-T","Group":"Recommendations"},"Redirection":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F14927-en\u0026position=6\u0026page=1","Language":"en","Dir":"ltr","Properties":[{"Title":"Publication
        date","Value":"May, 2022"}],"ExtractFileContent":"... dependent (PMD) layer
        specification for G-PON in the absence of an enhancement band is defined in
        [ITU-T G.984.2]. PMD layer specifications for G-PON in the presence of enhancement
        bands are defined by the combin...","Locations":[{"Id":"1","Type":"pdf","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F14927-en%3Flocatt%3Did%3A1%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-G.984.5-202202-I!!PDF-E\u0026type=items","Icon":"pdf-icon.png"},{"Id":"2","Type":"doc","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F14927-en%3Flocatt%3Did%3A2%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-G.984.5-202202-I!!MSW-E\u0026type=items","Icon":"doc-icon.png"}],"TopResult":false,"Words":{"ITU-T":true,"G.984.2":true},"Media":{"Identifier":"11.1002/1000/14927-en","Date":"May,
        2022","Url":null,"Name":"ITU-T G.984.5 (02/2022)","ParentHandleID":"","ParentName":null,"Type":null,"ContentText":null,"ImageUrl":null,"Tags":[]},"WordsMissing":false,"CollectionTypeCSSClass":"label-t-sector","LanguageCSSClass":"label-en"},{"Identifier":"11.1002/1000/15569-en","Title":"ITU-T
        G.9805 (2022) Amd. 1 (06/2023)","Collection":{"Name":"ITU-T Recommendations","Title":"ITU-T
        Recommendations","Description":"","Sector":"ITU-T","Group":"Recommendations"},"Redirection":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F15569-en\u0026position=5\u0026page=1","Language":"en","Dir":"ltr","Properties":[{"Title":"Publication
        date","Value":"September, 2023"}],"ExtractFileContent":"...n this Recommendation
        does not give it, as a stand-alone document, the status of a Recommendation.
        [ITU-T G.984.2] Recommendation ITU-T G.984.2 (2019), Gigabit-capable Passive
        Optical Networks (G-PON): Physical Me...","Locations":[{"Id":"1","Type":"pdf","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F15569-en%3Flocatt%3Did%3A1%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-G.9805-202306-I!Amd1!PDF-E\u0026type=items","Icon":"pdf-icon.png"},{"Id":"2","Type":"doc","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F15569-en%3Flocatt%3Did%3A2%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-G.9805-202306-I!Amd1!MSW-E\u0026type=items","Icon":"doc-icon.png"}],"TopResult":false,"Words":{"ITU-T":true,"G.984.2":true},"Media":{"Identifier":"11.1002/1000/15569-en","Date":"September,
        2023","Url":null,"Name":"ITU-T G.9805 (2022) Amd. 1 (06/2023)","ParentHandleID":"","ParentName":null,"Type":null,"ContentText":null,"ImageUrl":null,"Tags":[]},"WordsMissing":false,"CollectionTypeCSSClass":"label-t-sector","LanguageCSSClass":"label-en"},{"Identifier":"11.1002/1000/15562-en","Title":"ITU-T
        G.987.2 (2023) Amd. 1 (06/2023)","Collection":{"Name":"ITU-T Recommendations","Title":"ITU-T
        Recommendations","Description":"","Sector":"ITU-T","Group":"Recommendations"},"Redirection":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F15562-en\u0026position=4\u0026page=1","Language":"en","Dir":"ltr","Properties":[{"Title":"Publication
        date","Value":"July, 2023"}],"ExtractFileContent":"...on ITU-T G.984.1 (2008),
        Gigabit-capable passive optical networks (GPON): General characteristics.
        [ITU-T G.984.2] Recommendation ITU-T G.984.2 (2003), Gigabit-capable passive
        opt...","Locations":[{"Id":"1","Type":"pdf","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F15562-en%3Flocatt%3Did%3A1%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-G.987.2-202306-I!Amd1!PDF-E\u0026type=items","Icon":"pdf-icon.png"},{"Id":"2","Type":"doc","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F15562-en%3Flocatt%3Did%3A2%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-G.987.2-202306-I!Amd1!MSW-E\u0026type=items","Icon":"doc-icon.png"}],"TopResult":false,"Words":{"ITU-T":true,"G.984.2":true},"Media":{"Identifier":"11.1002/1000/15562-en","Date":"July,
        2023","Url":null,"Name":"ITU-T G.987.2 (2023) Amd. 1 (06/2023)","ParentHandleID":"","ParentName":null,"Type":null,"ContentText":null,"ImageUrl":null,"Tags":[]},"WordsMissing":false,"CollectionTypeCSSClass":"label-t-sector","LanguageCSSClass":"label-en"},{"Identifier":"11.1002/1000/14918-en","Title":"ITU-T
        G.9805 (02/2022): Coexistence of passive optical network systems","Collection":{"Name":"ITU-T
        Recommendations","Title":"ITU-T Recommendations","Description":"","Sector":"ITU-T","Group":"Recommendations"},"Redirection":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F14918-en\u0026position=3\u0026page=1","Language":"en","Dir":"ltr","Properties":[{"Title":"Publication
        date","Value":"May, 2022"}],"ExtractFileContent":"...n this Recommendation
        does not give it, as a stand-alone document, the status of a Recommendation.
        [ITU-T G.984.2] Recommendation ITU-T G.984.2 (2019), Gigabit-capable Passive
        Optical Networks (G-PON): Physical Me...","Locations":[{"Id":"1","Type":"pdf","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F14918-en%3Flocatt%3Did%3A1%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-G.9805-202202-I!!PDF-E\u0026type=items","Icon":"pdf-icon.png"},{"Id":"2","Type":"doc","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F14918-en%3Flocatt%3Did%3A2%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-G.9805-202202-I!!MSW-E\u0026type=items","Icon":"doc-icon.png"}],"TopResult":false,"Words":{"ITU-T":true,"G.984.2":true},"Media":{"Identifier":"11.1002/1000/14918-en","Date":"May,
        2022","Url":null,"Name":"ITU-T G.9805 (02/2022)","ParentHandleID":"","ParentName":null,"Type":null,"ContentText":null,"ImageUrl":null,"Tags":[]},"WordsMissing":false,"CollectionTypeCSSClass":"label-t-sector","LanguageCSSClass":"label-en"},{"Identifier":"11.1002/1000/15160-en","Title":"ITU-T
        G.9804.3 (2021) Amd. 1 (02/2023)","Collection":{"Name":"ITU-T Recommendations","Title":"ITU-T
        Recommendations","Description":"","Sector":"ITU-T","Group":"Recommendations"},"Redirection":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F15160-en\u0026position=2\u0026page=1","Language":"en","Dir":"ltr","Properties":[{"Title":"Publication
        date","Value":"July, 2023"}],"ExtractFileContent":"...on ITU-T G.983.1 (2005),
        Broadband optical access systems based on Passive Optical Networks (PON).
        [ITU-T G.984.2] Recommendation ITU-T G.984.2 (2019), Gigabit-capable Passive
        Optical Networks (G-PON): Physical Me...","Locations":[{"Id":"1","Type":"pdf","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F15160-en%3Flocatt%3Did%3A1%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-G.9804.3-202302-I!Amd1!PDF-E\u0026type=items","Icon":"pdf-icon.png"},{"Id":"2","Type":"doc","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F15160-en%3Flocatt%3Did%3A2%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-G.9804.3-202302-I!Amd1!MSW-E\u0026type=items","Icon":"doc-icon.png"}],"TopResult":false,"Words":{"ITU-T":true,"G.984.2":true},"Media":{"Identifier":"11.1002/1000/15160-en","Date":"July,
        2023","Url":null,"Name":"ITU-T G.9804.3 (2021) Amd. 1 (02/2023)","ParentHandleID":"","ParentName":null,"Type":null,"ContentText":null,"ImageUrl":null,"Tags":[]},"WordsMissing":false,"CollectionTypeCSSClass":"label-t-sector","LanguageCSSClass":"label-en"},{"Identifier":"11.1002/1000/12184-en","Title":"ITU-T
        G.984.5 (05/2014): Gigabit-capable passive optical networks (G-PON): Enhancement
        band","Collection":{"Name":"ITU-T Recommendations","Title":"ITU-T Recommendations","Description":"","Sector":"ITU-T","Group":"Recommendations"},"Redirection":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F12184-en\u0026position=1\u0026page=1","Language":"en","Dir":"ltr","Properties":[{"Title":"Publication
        date","Value":"November, 2014"}],"ExtractFileContent":"... dependent (PMD)
        layer specification for G-PON in the absence of an enhancement band is defined
        in [ITU-T G.984.2]. PMD layer specifications for G-PON in the presence of
        enhancement bands are defined by the combin...","Locations":[{"Id":"1","Type":"pdf","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F12184-en%3Flocatt%3Did%3A1%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-G.984.5-201405-S!!PDF-E\u0026type=items","Icon":"pdf-icon.png"},{"Id":"2","Type":"doc","Href":"/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F12184-en%3Flocatt%3Did%3A2%26auth","RawHref":"https://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-G.984.5-201405-S!!MSW-E\u0026type=items","Icon":"doc-icon.png"}],"TopResult":false,"Words":{"ITU-T":true,"G.984.2":true},"Media":{"Identifier":"11.1002/1000/12184-en","Date":"November,
        2014","Url":null,"Name":"ITU-T G.984.5 (05/2014)","ParentHandleID":"","ParentName":null,"Type":null,"ContentText":null,"ImageUrl":null,"Tags":[]},"WordsMissing":false,"CollectionTypeCSSClass":"label-t-sector","LanguageCSSClass":"label-en"}],"input":"ITU-T
        G.984.2","totalAmount":73,"collationQuery":"","attempt":0,"languageUpdated":false,"allowed":true}'
  recorded_at: Thu, 28 Dec 2023 16:48:11 GMT
- request:
    method: get
    uri: https://www.iso.org/contents/data/standard/06/35/63598.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 301
      message: ''
    headers:
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=747131274.36895.0000; path=/; Httponly;
        Secure
      - JSESSIONID=6056281391C7E5F141BB364CDE4DF9F5; Path=/; Secure; HttpOnly
      Location:
      - "/standard/63598.html"
      Content-Length:
      - '0'
      Date:
      - Thu, 28 Dec 2023 16:48:12 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: UTF-8
      string: ''
  recorded_at: Thu, 28 Dec 2023 16:48:12 GMT
- request:
    method: get
    uri: https://www.iso.org/standard/72578.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 200
      message: ''
    headers:
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=747131274.36895.0000; path=/; Httponly;
        Secure
      - JSESSIONID=C42D5A0058827E7947E0983F390DDC0C; Path=/; Secure; HttpOnly
      Vary:
      - accept-encoding
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Date:
      - Thu, 28 Dec 2023 16:48:10 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 28 Dec 2023 16:48:12 GMT
- request:
    method: get
    uri: https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http://handle.itu.int/11.1002/1000/15177-en&page=1&position=10
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_2) AppleWebKit/601.3.9 (KHTML,
        like Gecko) Version/9.0.2 Safari/601.3.9
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Cookie:
      - BIGipServerV19edYz/rGMxUCJeS7ZH3w=!pjfaKUukGxkYsD+rKNZ4ylMtnsGUZCVS5ZBkywPeLy6HCCQAiZg6TPSPAh1IviPpwZis4WM/uQRz5JY=;
        GSCookie_CookieId=PjqBsmBbwqtj2tbGuQpwONYUCmNEU3a4V7krJw6rCjHuBLdXt8Up34Kg02pAJwI5qiuFe8NgB6iIIrYU8W3JMg%3D%3D;
        GSCookie_QueryId=7097884; TS010592a8=018bf709fc3267215b7b687e6c3ef171fcea7ec1966a9a4f295837d7b0665f1f45725648c58bc8a3120a54712803495ba23b59bbd9;
        TS0110b275=018bf709fc3267215b7b687e6c3ef171fcea7ec1966a9a4f295837d7b0665f1f45725648c58bc8a3120a54712803495ba23b59bbd9;
        TS70351561027=08b49714d4ab20004cf6f3fa8a1701f675bf3315f6d688fe75206c5638dc4aa7640c5432b1068da60825517e28113000cdb1218d98543a5c3aa79917162ee497855f56862eacd13aef4d6ed490f127d769244051b9179803aee6c96e5af5d414
      Host:
      - www.itu.int
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 302
      message: Found
    headers:
      Location:
      - http://handle.itu.int/11.1002/1000/15177-en
      Date:
      - Thu, 28 Dec 2023 16:48:13 GMT
      Transfer-Encoding:
      - chunked
      Set-Cookie:
      - TS70351561027=08b49714d4ab2000503246ee83e3c9d3efdf08e20142f037f8e6ab4b4f9a72ed7cf1ab35e71e625508eea60dae113000827d8db194d91a27bd162de264669c822116d09d46a195cbc7900b970cc3ac5ac84328d9b581a77cbe2729c6cea9205a;
        Path=/
    body:
      encoding: UTF-8
      string: ''
  recorded_at: Thu, 28 Dec 2023 16:48:13 GMT
- request:
    method: get
    uri: https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http://handle.itu.int/11.1002/1000/14000-en&page=1&position=10
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_2) AppleWebKit/601.3.9 (KHTML,
        like Gecko) Version/9.0.2 Safari/601.3.9
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Cookie:
      - BIGipServerV19edYz/rGMxUCJeS7ZH3w=!NmVYpP6PWixOfQZkxr8wTjLVJzvC1jJZY21pbCWccWx5N1l+jm5CYcHER37Sq8qFe+O9Dy1sOXMNkn0=;
        GSCookie_CookieId=IRRgAaLbS5yhiBasTL1fRRXquyRGntDqC0X4XgTBpJd66xlU4l2H%2B%2BlGpFEW47GUs2t5ZuKV52gdQP0clzM82A%3D%3D;
        GSCookie_QueryId=7097885; TS010592a8=018bf709fc8fe10d0a45ed6e382674cb69a60d8c8777aff501ac6f7a5023ddbe082b0eda96d064c1df4a1cf86f99a7853072c21bf7;
        TS0110b275=018bf709fc8fe10d0a45ed6e382674cb69a60d8c8777aff501ac6f7a5023ddbe082b0eda96d064c1df4a1cf86f99a7853072c21bf7;
        TS70351561027=08b49714d4ab2000b875427146c11e1949c6a4506c7f04960b1a7ec05686689371e1f92855a2701e08ef380ca71130008eda1a41014dc1f13aa79917162ee497d6f24ead68ff2cff0357d7acb7e85e949a6fc0bd610bbc4009640a1606b49c04
      Host:
      - www.itu.int
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 302
      message: Found
    headers:
      Location:
      - http://handle.itu.int/11.1002/1000/14000-en
      Date:
      - Thu, 28 Dec 2023 16:48:13 GMT
      Transfer-Encoding:
      - chunked
      Set-Cookie:
      - TS70351561027=08b49714d4ab2000431b426b2a36ebb19a47c79436b2f115c5cb388a89d760f11194606661821fa2086aaa3ae1113000a5b33bfc15c7cf7fbd162de264669c827e8a506a6e8eb8138f34e0f43cefc1d711fc6f264a0e371f3adab34b8ef2516e;
        Path=/
    body:
      encoding: UTF-8
      string: ''
  recorded_at: Thu, 28 Dec 2023 16:48:13 GMT
- request:
    method: get
    uri: https://www.iso.org/contents/data/standard/08/28/82875.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 301
      message: ''
    headers:
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=747131274.36895.0000; path=/; Httponly;
        Secure
      - JSESSIONID=F1C5AB8B1DCD7EE91E4602768CF7F1AC; Path=/; Secure; HttpOnly
      Location:
      - "/standard/27001"
      Content-Length:
      - '0'
      Date:
      - Thu, 28 Dec 2023 16:48:13 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: UTF-8
      string: ''
  recorded_at: Thu, 28 Dec 2023 16:48:13 GMT
- request:
    method: post
    uri: https://jcl49wv5ar-dsn.algolia.net/1/indexes/all_en/query
    body:
      encoding: UTF-8
      string: '{"query":"ISO 639","hitsPerPage":100,"filters":"category:standard"}'
    headers:
      User-Agent:
      - Algolia for Ruby (2.3.4), Ruby (3.2.2)
      X-Algolia-Api-Key:
      - dd1b9e1ab383f4d4817d29cd5e96d3f0
      X-Algolia-Application-Id:
      - JCL49WV5AR
      Content-Type:
      - application/json; charset=utf-8
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      Connection:
      - keep-alive
      Keep-Alive:
      - '30'
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Thu, 28 Dec 2023 16:48:13 GMT
      Content-Type:
      - application/json; charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      X-Alg-Pt:
      - '1'
      Accept-Encoding:
      - deflate, gzip
      Cache-Control:
      - no-store
      Access-Control-Allow-Origin:
      - "*"
      Timing-Allow-Origin:
      - "*"
      X-Content-Type-Options:
      - nosniff
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Content-Disposition:
      - inline; filename=a.txt
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 28 Dec 2023 16:48:13 GMT
- request:
    method: get
    uri: http://handle.itu.int/11.1002/1000/14000-en
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_2) AppleWebKit/601.3.9 (KHTML,
        like Gecko) Version/9.0.2 Safari/601.3.9
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Host:
      - handle.itu.int
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 301
      message: Moved Permanently
    headers:
      Server:
      - nginx/1.18.0 (Ubuntu)
      Date:
      - Thu, 28 Dec 2023 16:48:14 GMT
      Content-Type:
      - text/html
      Content-Length:
      - '178'
      Connection:
      - keep-alive
      Location:
      - https://handle.itu.int/11.1002/1000/14000-en
    body:
      encoding: UTF-8
      string: "<html>\r\n<head><title>301 Moved Permanently</title></head>\r\n<body>\r\n<center><h1>301
        Moved Permanently</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n"
  recorded_at: Thu, 28 Dec 2023 16:48:14 GMT
- request:
    method: get
    uri: http://handle.itu.int/11.1002/1000/15177-en
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_2) AppleWebKit/601.3.9 (KHTML,
        like Gecko) Version/9.0.2 Safari/601.3.9
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Host:
      - handle.itu.int
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 301
      message: Moved Permanently
    headers:
      Server:
      - nginx/1.18.0 (Ubuntu)
      Date:
      - Thu, 28 Dec 2023 16:48:14 GMT
      Content-Type:
      - text/html
      Content-Length:
      - '178'
      Connection:
      - keep-alive
      Location:
      - https://handle.itu.int/11.1002/1000/15177-en
    body:
      encoding: UTF-8
      string: "<html>\r\n<head><title>301 Moved Permanently</title></head>\r\n<body>\r\n<center><h1>301
        Moved Permanently</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n"
  recorded_at: Thu, 28 Dec 2023 16:48:14 GMT
- request:
    method: get
    uri: https://www.iso.org/standard/63598.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 200
      message: ''
    headers:
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=747131274.36895.0000; path=/; Httponly;
        Secure
      - JSESSIONID=3289323BC1C01B08D07265974329E9CA; Path=/; Secure; HttpOnly
      Vary:
      - accept-encoding
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Date:
      - Thu, 28 Dec 2023 16:48:13 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 28 Dec 2023 16:48:15 GMT
- request:
    method: get
    uri: https://www.iso.org/standard/27001
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 200
      message: ''
    headers:
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=730354058.36895.0000; path=/; Httponly;
        Secure
      - JSESSIONID=CE7B6144B3C6F50CAC683602162BD39D; Path=/; Secure; HttpOnly
      Vary:
      - accept-encoding
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Date:
      - Thu, 28 Dec 2023 16:48:14 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 28 Dec 2023 16:48:15 GMT
- request:
    method: get
    uri: https://handle.itu.int/11.1002/1000/14000-en
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_2) AppleWebKit/601.3.9 (KHTML,
        like Gecko) Version/9.0.2 Safari/601.3.9
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Host:
      - handle.itu.int
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 302
      message: Found
    headers:
      Server:
      - nginx/1.18.0 (Ubuntu)
      Date:
      - Thu, 28 Dec 2023 16:48:15 GMT
      Content-Type:
      - text/html;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Location:
      - http://www.itu.int/ITU-T/recommendations/rec.aspx?rec=14000&lang=en
      Expires:
      - Fri, 29 Dec 2023 16:48:15 GMT
    body:
      encoding: UTF-8
      string: |-
        <html><head><title>Handle Redirect</title></head>
        <body><a href="http://www.itu.int/ITU-T/recommendations/rec.aspx?rec=14000&amp;lang=en">http://www.itu.int/ITU-T/recommendations/rec.aspx?rec=14000&amp;lang=en</a></body></html>
  recorded_at: Thu, 28 Dec 2023 16:48:16 GMT
- request:
    method: get
    uri: https://handle.itu.int/11.1002/1000/15177-en
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_2) AppleWebKit/601.3.9 (KHTML,
        like Gecko) Version/9.0.2 Safari/601.3.9
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Host:
      - handle.itu.int
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 302
      message: Found
    headers:
      Server:
      - nginx/1.18.0 (Ubuntu)
      Date:
      - Thu, 28 Dec 2023 16:48:15 GMT
      Content-Type:
      - text/html;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Location:
      - https://www.itu.int/ITU-T/recommendations/rec.aspx?rec=15177&lang=en
      Expires:
      - Fri, 29 Dec 2023 16:48:15 GMT
    body:
      encoding: UTF-8
      string: |-
        <html><head><title>Handle Redirect</title></head>
        <body><a href="https://www.itu.int/ITU-T/recommendations/rec.aspx?rec=15177&amp;lang=en">https://www.itu.int/ITU-T/recommendations/rec.aspx?rec=15177&amp;lang=en</a></body></html>
  recorded_at: Thu, 28 Dec 2023 16:48:16 GMT
- request:
    method: get
    uri: https://www.iso.org/contents/data/standard/07/45/74575.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 301
      message: ''
    headers:
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=730354058.36895.0000; path=/; Httponly;
        Secure
      - JSESSIONID=E0B9D42AD32089C52E4898AE3CBAFCA2; Path=/; Secure; HttpOnly
      Location:
      - "/standard/74575.html"
      Content-Length:
      - '0'
      Date:
      - Thu, 28 Dec 2023 16:48:16 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: UTF-8
      string: ''
  recorded_at: Thu, 28 Dec 2023 16:48:16 GMT
- request:
    method: get
    uri: http://www.itu.int/ITU-T/recommendations/rec.aspx?lang=en&rec=14000
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_2) AppleWebKit/601.3.9 (KHTML,
        like Gecko) Version/9.0.2 Safari/601.3.9
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Cookie:
      - GSCookie_CookieId=IRRgAaLbS5yhiBasTL1fRRXquyRGntDqC0X4XgTBpJd66xlU4l2H%2B%2BlGpFEW47GUs2t5ZuKV52gdQP0clzM82A%3D%3D;
        GSCookie_QueryId=7097885; TS010592a8=018bf709fc8fe10d0a45ed6e382674cb69a60d8c8777aff501ac6f7a5023ddbe082b0eda96d064c1df4a1cf86f99a7853072c21bf7;
        TS0110b275=018bf709fc8fe10d0a45ed6e382674cb69a60d8c8777aff501ac6f7a5023ddbe082b0eda96d064c1df4a1cf86f99a7853072c21bf7;
        TS70351561027=08b49714d4ab2000431b426b2a36ebb19a47c79436b2f115c5cb388a89d760f11194606661821fa2086aaa3ae1113000a5b33bfc15c7cf7fbd162de264669c827e8a506a6e8eb8138f34e0f43cefc1d711fc6f264a0e371f3adab34b8ef2516e
      Host:
      - www.itu.int
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 302
      message: Moved Temporarily
    headers:
      Location:
      - https://www.itu.int/ITU-T/recommendations/rec.aspx?rec=14000&lang=en
      Server:
      - BigIP
      Connection:
      - Keep-Alive
      Content-Length:
      - '0'
    body:
      encoding: UTF-8
      string: ''
  recorded_at: Thu, 28 Dec 2023 16:48:16 GMT
- request:
    method: get
    uri: https://www.iso.org/standard/74575.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 200
      message: ''
    headers:
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=730354058.36895.0000; path=/; Httponly;
        Secure
      - JSESSIONID=BCF7568DE569B73CE30492A0DC3483B8; Path=/; Secure; HttpOnly
      Vary:
      - accept-encoding
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Date:
      - Thu, 28 Dec 2023 16:48:16 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 28 Dec 2023 16:48:17 GMT
- request:
    method: get
    uri: https://www.itu.int/ITU-T/recommendations/rec.aspx?lang=en&rec=15177
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_2) AppleWebKit/601.3.9 (KHTML,
        like Gecko) Version/9.0.2 Safari/601.3.9
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Cookie:
      - BIGipServerV19edYz/rGMxUCJeS7ZH3w=!pjfaKUukGxkYsD+rKNZ4ylMtnsGUZCVS5ZBkywPeLy6HCCQAiZg6TPSPAh1IviPpwZis4WM/uQRz5JY=;
        GSCookie_CookieId=PjqBsmBbwqtj2tbGuQpwONYUCmNEU3a4V7krJw6rCjHuBLdXt8Up34Kg02pAJwI5qiuFe8NgB6iIIrYU8W3JMg%3D%3D;
        GSCookie_QueryId=7097884; TS010592a8=018bf709fc3267215b7b687e6c3ef171fcea7ec1966a9a4f295837d7b0665f1f45725648c58bc8a3120a54712803495ba23b59bbd9;
        TS0110b275=018bf709fc3267215b7b687e6c3ef171fcea7ec1966a9a4f295837d7b0665f1f45725648c58bc8a3120a54712803495ba23b59bbd9;
        TS70351561027=08b49714d4ab2000503246ee83e3c9d3efdf08e20142f037f8e6ab4b4f9a72ed7cf1ab35e71e625508eea60dae113000827d8db194d91a27bd162de264669c822116d09d46a195cbc7900b970cc3ac5ac84328d9b581a77cbe2729c6cea9205a
      Host:
      - www.itu.int
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - private
      Content-Type:
      - text/html; charset=utf-8
      Content-Encoding:
      - gzip
      Vary:
      - Accept-Encoding
      Date:
      - Thu, 28 Dec 2023 16:48:20 GMT
      Content-Length:
      - '23282'
      Set-Cookie:
      - TS70351561027=08b49714d4ab20008a9a503cf15784ebc619aa8ff7165b7a5935875bd3abd4b7a67e9a58a60c4b17083eae7ae51130002fad63322ccc86921e20f18db4b12a5284c8990e564e97006c604db9a4b321e95adec687b321584493848abf4f11984b;
        Path=/
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 28 Dec 2023 16:48:20 GMT
- request:
    method: get
    uri: http://www.itu.int/dms_pubrec/itu-t/rec/k/T-REC-K.20-202211-I!!SUM-HTM-E.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_2) AppleWebKit/601.3.9 (KHTML,
        like Gecko) Version/9.0.2 Safari/601.3.9
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Cookie:
      - GSCookie_CookieId=PjqBsmBbwqtj2tbGuQpwONYUCmNEU3a4V7krJw6rCjHuBLdXt8Up34Kg02pAJwI5qiuFe8NgB6iIIrYU8W3JMg%3D%3D;
        GSCookie_QueryId=7097884; TS010592a8=018bf709fc3267215b7b687e6c3ef171fcea7ec1966a9a4f295837d7b0665f1f45725648c58bc8a3120a54712803495ba23b59bbd9;
        TS0110b275=018bf709fc3267215b7b687e6c3ef171fcea7ec1966a9a4f295837d7b0665f1f45725648c58bc8a3120a54712803495ba23b59bbd9;
        TS70351561027=08b49714d4ab20008a9a503cf15784ebc619aa8ff7165b7a5935875bd3abd4b7a67e9a58a60c4b17083eae7ae51130002fad63322ccc86921e20f18db4b12a5284c8990e564e97006c604db9a4b321e95adec687b321584493848abf4f11984b
      Host:
      - www.itu.int
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 302
      message: Moved Temporarily
    headers:
      Location:
      - https://www.itu.int/dms_pubrec/itu-t/rec/k/T-REC-K.20-202211-I!!SUM-HTM-E.htm
      Server:
      - BigIP
      Connection:
      - Keep-Alive
      Content-Length:
      - '0'
    body:
      encoding: UTF-8
      string: ''
  recorded_at: Thu, 28 Dec 2023 16:48:21 GMT
- request:
    method: get
    uri: https://www.itu.int/dms_pubrec/itu-t/rec/k/T-REC-K.20-202211-I!!SUM-HTM-E.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_2) AppleWebKit/601.3.9 (KHTML,
        like Gecko) Version/9.0.2 Safari/601.3.9
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Cookie:
      - BIGipServerV19edYz/rGMxUCJeS7ZH3w=!pjfaKUukGxkYsD+rKNZ4ylMtnsGUZCVS5ZBkywPeLy6HCCQAiZg6TPSPAh1IviPpwZis4WM/uQRz5JY=;
        GSCookie_CookieId=PjqBsmBbwqtj2tbGuQpwONYUCmNEU3a4V7krJw6rCjHuBLdXt8Up34Kg02pAJwI5qiuFe8NgB6iIIrYU8W3JMg%3D%3D;
        GSCookie_QueryId=7097884; TS010592a8=018bf709fc3267215b7b687e6c3ef171fcea7ec1966a9a4f295837d7b0665f1f45725648c58bc8a3120a54712803495ba23b59bbd9;
        TS0110b275=018bf709fc3267215b7b687e6c3ef171fcea7ec1966a9a4f295837d7b0665f1f45725648c58bc8a3120a54712803495ba23b59bbd9;
        TS70351561027=08b49714d4ab20008a9a503cf15784ebc619aa8ff7165b7a5935875bd3abd4b7a67e9a58a60c4b17083eae7ae51130002fad63322ccc86921e20f18db4b12a5284c8990e564e97006c604db9a4b321e95adec687b321584493848abf4f11984b
      Host:
      - www.itu.int
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/html
      Content-Encoding:
      - gzip
      Last-Modified:
      - Thu, 09 Feb 2023 13:58:11 GMT
      Accept-Ranges:
      - bytes
      Etag:
      - '"d5a3f98b8e3cd91:0"'
      Vary:
      - Accept-Encoding
      Date:
      - Thu, 28 Dec 2023 16:48:21 GMT
      Content-Length:
      - '1867'
      Set-Cookie:
      - BIGipServer4+IEUJs6ObMe1m0DiLXCRg=!valmL0tVfLKNzXurKNZ4ylMtnsGUZODWuLnZFe9eDuVEn+X9HKUvwBFyNSW/UY4INKwLbcVyUu/LygA=;
        path=/; Httponly; Secure
      - TS010592a8=018bf709fc3267215b7b687e6c3ef171fcea7ec1966a9a4f295837d7b0665f1f45725648c58bc8a3120a54712803495ba23b59bbd9;
        Path=/;
      - TS70351561027=08b49714d4ab200002a5a33f91cab262f8aadc7f78308c95541d6c9db61130906a6b6ec47b6cd225089c4cfbf4113000217c21634643f957e6d60a92f190ddcae519823351148d6e1dedeae70ca921f8d1c87420fd22845fc3291143ea0e2b6e;
        Path=/
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        H4sIAAAAAAAEAO29B2AcSZYlJi9tynt/SvVK1+B0oQiAYBMk2JBAEOzBiM3mkuwdaUcjKasqgcplVmVdZhZAzO2dvPfee++999577733ujudTif33/8/XGZkAWz2zkrayZ4hgKrIHz9+fB8/Ih7P20V59Bsnv3HyeJ5nM/rt8SJvs3Tetqvt/Beti8vPTqplmy/b7TfXqzydyh+ffdTm79q7ePkwnc6zusnbz66K5ay6arZ39+7vfWQhLbNF/tnn+TKvs7aqHYAvimldNdV5m363qmfp7v1067wo27zOZ3f47bZoy/zo9XqxyOrrdDs9e/PV9pv09xrv7aTp1u7u3b2dvb076au8KZq2mBRl0V6n1Xna5mU+rRaL9bKYZm1RLX/jBONYLajXtFg2bVaW+Yx+S7N+23RKreo8bau0uszry6pss4u8SbPl7DdO8Ml0XdfUpEkf3xX8CNGmvZZfftft7d84Se9+K31Gg0yf5ufFsgDUJv3WXfri9zynj7fPs2n+Gyc/9ov1j0VRXj/66CRbTOoiS7/I2vlHh/T1KltWTb69+2gv3U/vp/fo//vpp/ST/j78JQSMenmNfvvdrMZfNNWLql5k5SgtC/+vWXHp/qRefjGR9qJYbrfV6tGn451Vi671s7q4mLePdqYL77NJ1bbVovNhmZ/bduCK7awsLpaPfnpN03J+jU9X6+W0XTOBt6/qbPWoKRarMsdX8sK6rZoV0eXRslryx0ycpvhB/mh3z+DFnxmCvSkWNC0v8qv0VbXIlh+NmrwuzkGZ+T1q+4sXTbXN87JdFsu3jz76NjF3sbwgAp4QtzKJFX2M/cD0oZ+939jvPRw/kNd5NCQFxCGPtt3HK+Kh7UmdZ2+3s3Pi8EfZZVXM+JsfJmWYMUCIvDaMYf5SxpA/CWKUfnndJZ6hhuDK0w4Bymt8+CFje/ieQyM4yzFwpDm+ByTpVW8M0EEyBvo+4AHbxA2Tm/C3t+ncNLvKmWcmVTkLEMprdEatougEJLXfMy7yNb5g+DegQV2uxvlyvSjzy12eXfcHJtf8ReC6iJiv0JVMK8vEvpkC/eyDZEJ4w1MJ/GlEUj6AZ76GPDyrKmLWn3jJBHN/gGDmLwLXJZh89fv/xEv0JYM2JPgg/HffB3/TrMN3kOKT+YqMQrYuW2rUtTNlQYaGgGTLZlsg6VsvM/8tGZaZYKsfiTPz7bl0ubvz4HfHy78n1Bsb8df5FCNnJuMh7dGQpov0YN9OjcB9dH9/vH9/1aYDPwEWk9AFip4e+R+i4fY2bO9dniD6Db+rK0O/TqrZdVpmy4vPTl9sf/4k5VaffXxFMGSCRC3j74/lDeo3nZZZ03zmdyTftdmELK58SyQTO/qGP5xQ47z+bIc8iLLEFJMa0b9W2QxKhf66Kmbt/LOPdnf2fvePyFIrMvLq9rQqy2zV5I/ML0AofdzW+EE/Z+71nd/9o/SSpvJi+RmJqoHDX9O07Ix3fvdD7RSMmd4f7xNt7W8MN308v2delEkRwaVWh8yqKpz098fGCSPC3pN3V10idEARVo/uYc4/PnpMxFiar5kZmTWE2z8+esUOWL6csdAAuOfnNat8WpwXxP914ObV8OjqnF4jT4x8M3LkmjZd1dU0n62paXpekcpN6eOuf4cXxRVs5xn5g/R622bTOXmE8Plq8guNh3hVtHN4iXFAsHN1Pia+o+EdPb67+qYJ8yV5m8b/BGgMM/BAp/iL8JxckxMM5AwRfQoWy2m5nuVps64JTjpbw7cFOGKeebskDknpBRr3Ms9qoklOXyzzdEUi047SZl7V7S/88YO9nYfEFPWCwM3WLBDpeV0t0mz206TLlqQxCD/47ktCgEAqjunW8cmddFVdkZkD2AYd1VlRXmXXaXPdtPmiGaXUcTunVggLCiJYXTTkIKeKK32B11kxUeMZTfu0pbEvadbadJK3V3m+jMyP9AeiMQAA5I9G/BmatxR+tNR4SkAbxDAg0Nbp66fNnXH6hijRVOt6Sp8RMzHlzWwQFQCugKOzJIQVrsHFsRi9V2fTt/RdRjHFIiuW5TW9xiS8JD1SrVf07gWATbN1I3PpJkap2KSTnP+s+E1qRVyJ6QoaN21dvCXchPHd57cAop9VdfOzyM5fZD8tqBGllyAiTdeKyCJytoGDt/Z2dh/cIXSZkR8NYWi8GIPBeyP4Z/xF9kmfngA2qYJ1KfiQTiH1ky2nxJKkag5/KFjU+SWJAgWe0D+k3/J3+WLF6IAjLfuxkBIDkRVq3huxr4nYkvyJJTMuRdxNtRCypBwSi8AQPWpS1T8chJppTZInpGJCOFr9kEgCa4vu0AORhKnxYLy7Q6KftlfEO8Toq6yoSRvRZLU1uV+kUZr87qw4Pyc1LqoPr42g9MSneNCTx7st/Br8hFdAP9COfqPfzbA2iSoZ80PSONaFu7/zu3989AuXk2ZFVEIXMTjdBoTypf4G70p/RSro6DdO/h804mOcUBIAAA==
  recorded_at: Thu, 28 Dec 2023 16:48:21 GMT
- request:
    method: get
    uri: https://www.itu.int/ITU-T/recommendations/rec.aspx?lang=en&rec=14000
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_2) AppleWebKit/601.3.9 (KHTML,
        like Gecko) Version/9.0.2 Safari/601.3.9
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Cookie:
      - BIGipServerV19edYz/rGMxUCJeS7ZH3w=!NmVYpP6PWixOfQZkxr8wTjLVJzvC1jJZY21pbCWccWx5N1l+jm5CYcHER37Sq8qFe+O9Dy1sOXMNkn0=;
        GSCookie_CookieId=IRRgAaLbS5yhiBasTL1fRRXquyRGntDqC0X4XgTBpJd66xlU4l2H%2B%2BlGpFEW47GUs2t5ZuKV52gdQP0clzM82A%3D%3D;
        GSCookie_QueryId=7097885; TS010592a8=018bf709fc8fe10d0a45ed6e382674cb69a60d8c8777aff501ac6f7a5023ddbe082b0eda96d064c1df4a1cf86f99a7853072c21bf7;
        TS0110b275=018bf709fc8fe10d0a45ed6e382674cb69a60d8c8777aff501ac6f7a5023ddbe082b0eda96d064c1df4a1cf86f99a7853072c21bf7;
        TS70351561027=08b49714d4ab2000431b426b2a36ebb19a47c79436b2f115c5cb388a89d760f11194606661821fa2086aaa3ae1113000a5b33bfc15c7cf7fbd162de264669c827e8a506a6e8eb8138f34e0f43cefc1d711fc6f264a0e371f3adab34b8ef2516e
      Host:
      - www.itu.int
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - private
      Content-Type:
      - text/html; charset=utf-8
      Content-Encoding:
      - gzip
      Vary:
      - Accept-Encoding
      Date:
      - Thu, 28 Dec 2023 16:48:21 GMT
      Content-Length:
      - '27203'
      Set-Cookie:
      - TS70351561027=08b49714d4ab2000079bd81ac95aabd7aeaa51f6be15f2d8785ed23e1966f32ac19178016526b6df0828ed857f113000a5326fc62e319b4ee6d60a92f190ddca805e4f0b59de8676d9ccd7a0f91f79ffccf001542b108c749c38ed4ba7a2ae98;
        Path=/
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 28 Dec 2023 16:48:21 GMT
- request:
    method: get
    uri: http://www.itu.int/dms_pubrec/itu-t/rec/g/T-REC-G.984.2-201908-I!!SUM-HTM-E.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_2) AppleWebKit/601.3.9 (KHTML,
        like Gecko) Version/9.0.2 Safari/601.3.9
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Cookie:
      - GSCookie_CookieId=IRRgAaLbS5yhiBasTL1fRRXquyRGntDqC0X4XgTBpJd66xlU4l2H%2B%2BlGpFEW47GUs2t5ZuKV52gdQP0clzM82A%3D%3D;
        GSCookie_QueryId=7097885; TS010592a8=018bf709fc8fe10d0a45ed6e382674cb69a60d8c8777aff501ac6f7a5023ddbe082b0eda96d064c1df4a1cf86f99a7853072c21bf7;
        TS0110b275=018bf709fc8fe10d0a45ed6e382674cb69a60d8c8777aff501ac6f7a5023ddbe082b0eda96d064c1df4a1cf86f99a7853072c21bf7;
        TS70351561027=08b49714d4ab2000079bd81ac95aabd7aeaa51f6be15f2d8785ed23e1966f32ac19178016526b6df0828ed857f113000a5326fc62e319b4ee6d60a92f190ddca805e4f0b59de8676d9ccd7a0f91f79ffccf001542b108c749c38ed4ba7a2ae98
      Host:
      - www.itu.int
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 302
      message: Moved Temporarily
    headers:
      Location:
      - https://www.itu.int/dms_pubrec/itu-t/rec/g/T-REC-G.984.2-201908-I!!SUM-HTM-E.htm
      Server:
      - BigIP
      Connection:
      - Keep-Alive
      Content-Length:
      - '0'
    body:
      encoding: UTF-8
      string: ''
  recorded_at: Thu, 28 Dec 2023 16:48:22 GMT
- request:
    method: get
    uri: https://www.itu.int/dms_pubrec/itu-t/rec/g/T-REC-G.984.2-201908-I!!SUM-HTM-E.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_2) AppleWebKit/601.3.9 (KHTML,
        like Gecko) Version/9.0.2 Safari/601.3.9
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Cookie:
      - BIGipServerV19edYz/rGMxUCJeS7ZH3w=!NmVYpP6PWixOfQZkxr8wTjLVJzvC1jJZY21pbCWccWx5N1l+jm5CYcHER37Sq8qFe+O9Dy1sOXMNkn0=;
        GSCookie_CookieId=IRRgAaLbS5yhiBasTL1fRRXquyRGntDqC0X4XgTBpJd66xlU4l2H%2B%2BlGpFEW47GUs2t5ZuKV52gdQP0clzM82A%3D%3D;
        GSCookie_QueryId=7097885; TS010592a8=018bf709fc8fe10d0a45ed6e382674cb69a60d8c8777aff501ac6f7a5023ddbe082b0eda96d064c1df4a1cf86f99a7853072c21bf7;
        TS0110b275=018bf709fc8fe10d0a45ed6e382674cb69a60d8c8777aff501ac6f7a5023ddbe082b0eda96d064c1df4a1cf86f99a7853072c21bf7;
        TS70351561027=08b49714d4ab2000079bd81ac95aabd7aeaa51f6be15f2d8785ed23e1966f32ac19178016526b6df0828ed857f113000a5326fc62e319b4ee6d60a92f190ddca805e4f0b59de8676d9ccd7a0f91f79ffccf001542b108c749c38ed4ba7a2ae98
      Host:
      - www.itu.int
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/html
      Content-Encoding:
      - gzip
      Last-Modified:
      - Tue, 26 Nov 2019 13:24:43 GMT
      Accept-Ranges:
      - bytes
      Etag:
      - '"96af91dd5ca4d51:0"'
      Vary:
      - Accept-Encoding
      Date:
      - Thu, 28 Dec 2023 16:48:22 GMT
      Content-Length:
      - '1882'
      Set-Cookie:
      - BIGipServer4+IEUJs6ObMe1m0DiLXCRg=!I+kJZKSTb5p1EoZkxr8wTjLVJzvC1il3p7sAT9RfBeYZDPpaAPo1L9F0iaXZLuxMCRkb0OOSYgwz5ZE=;
        path=/; Httponly; Secure
      - TS010592a8=018bf709fc8fe10d0a45ed6e382674cb69a60d8c8777aff501ac6f7a5023ddbe082b0eda96d064c1df4a1cf86f99a7853072c21bf7;
        Path=/;
      - TS70351561027=08b49714d4ab20000b188a2ca3ee3d6a752defba6157f1a5056bc2f75d3185d893011ec595c9eaf40875078f6b113000851e6aaee29d29336ac8c46356b281de87f9e0a4b7d5e29f532139a6cf60e69ca9aa48a01a3df0a7312c6c7db2eb396a;
        Path=/
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        H4sIAAAAAAAEAO29B2AcSZYlJi9tynt/SvVK1+B0oQiAYBMk2JBAEOzBiM3mkuwdaUcjKasqgcplVmVdZhZAzO2dvPfee++999577733ujudTif33/8/XGZkAWz2zkrayZ4hgKrIHz9+fB8/Ih7P20V59Bsnv3HyeJ5nM/rt8SJvs3Tetqvt/Beti8vPTqplmy/b7TfXqzydyh+ffdTm79q7ePkwnc6zusnbz66K5ay6arZ39+7vfWQhLbNF/tnn+TKvs7aqHYAvimldNdV5m363qmfp7v1067wo27zOZ3f47bZoy/zo9XqxyOrrdDs9e/PV9pv0VT4dp5+PHx7sj/fSrZ2Du3s7uw/vpJ8XF9mkaLen2SqblHm6ypqmuMzTatUW06z8jZNl3l5V9dsm3fr85Zcv7jxKX86vG3yVLvJZkaWzfJUvZ4RZuvXyi6d30jK7zuu0WeXT4pyatUW1TB/fFZwIuaa9ll9+1+3t3zhJ734rfUYDS5/m58WyQOMm/dZd+uL3PKePt8+zaf4bJz/2i/WPRVFeP/roJFtMaur5i6ydf3RIX6+yZdXk27uP9tL99H56j/6/n35KP+nvw19CwKiX1+i3381q/EVTvajqRVaO0rLw/5oVl+5P6uUXEzkviuV2W60efTreWbXoWj+ri4t5+2hnuvA+m1RtWy06H5b5+UC78c7Ozq4ABYtsZ2VxsXz00+umLc6v8elqvZy2aybo9lWdrR41xWJV5vhKXli3VbMigj1aVkv+mKnWFD/IH+3uGYT5M0PJN8Uib9IX+VX6qlpky49GTV4X5yDZfJfa/uJFU23zhG2XxfLto4++TZxeLC/S3fSEWJdpr4MAUVwn+uEPhSrZRb49qfPs7XZ2TkLwKLusihl/8yH0shPMnxl6nVD3xHrpcwyMqJUtm20hGbWcVmVVP/rxvdMH+0/u4wN+9SpHW+oCXMSUvUdfDVL2XpSyBwYb/ez9CHvv4fhB8Lo27dKWtBCJ8aNt1/5nibiWT/gzQ9xhZmQhBYXy2gip+UuFVP4kiFHCkj7qULVDpgGC0GwTs02JKHmNDz9k0A/fc8wEZzkG8sQV94A9veoNDsZBBkffB1xjm7jxcxP+9jadm2bKuZOqnAUI5TU6o1ZRdAJa2+8ZF/kaXzD8G9CgLlfjZ1VFtP+Jlzzt7g/MuvmLwHURka9+/594ib5kim+c8A+Z293d95lc02yIvjRbuyAhtesOjClM3wcK2DZhIrsm/C33ZBB6D/VFCEGuTuYrMpnZumypRdcKM7AAjL71MvPfCkluVRlhm2/PhQa7Ow9+d7z8e0LhsFvzOp9iKtgKMY33iMbTRXqwb5WHwH10f3+8f3/VpgM/ARbs0gWKnh75H6Lh9jY8k7tMTvoNv6tzR79Oqtk1eTfLi89OX2x//kQ+JNDptCSf6TMflnzXskMl3xJVxJF4wx9OqHFef7aTTvOypJmf0ozpX6tshvmjv66KWTv/7KPdnb3f/SNyVRirzz6WV7dpusps1eSPzC8fU6fp47bGD/o5c6/v/O4fpZc0WxfLz8iYGDj8NVF+Z7zzux9qp5CS9P54n8hnf2O46eP5PfOi0F1MC7U6ZPFQ20F/f3z0WH3XolkvrB/6+G52RNS8J9BWXbIckXtaLRbkSbIIqs9q3NVZ3kzrYkLSlKXnZf6uAA2th5qm58SJeZpNp3nTpOqwpsajrc7TZr1aVXVLI0zbOVE/W854+Gmdk6de59Rv21BDwJqsG+JMgkON6PumwMAKcneJxS8L6mHE30yry7xu0ua6afNFQ8QmaMtqUSypJVg7Ja89bwCQ+t/9hctJszrc298f7366k35BDvdd6WBPvtk/OBjf27PfFEvGk4KCZdOS+V0AzowQZfbiF3fv3x/f39uR1+W1UfrpHknHgQEzGu4X8DZ2vV5Jx67XcfqkojE21zRLbQ3KG0CZ/9mWefOuw/5OerE5yrBzJjEGgBrCZjSxZvpn4/TNvGgQyvi8sqqrFfn/DSO+MtEJxyGAFMwxoRzGJk16TsFV8OaGuGYMgG+ocVuT1lsUNApCgEIzYoaLfDnN0603J9qW+6JmJCwXwLGtSFS5NwzSDBAAgzFiBjoD9IXh3piiqdWQFMXIYyDT4LVTGm7WEl1WxN40QPpiCXj5ZVWu8QqJK711mZfVisC06Xld4Z3cvG4gMq4OuXvjXZqgCi0B7oKmnkSgTUk/AArNUQPBHVGDPpaLrFi29H+ZxWDORC6DftK2SvNlsybCLbJ3BQ0dk0ACvi7aaxFG0hIUJBDpBWkMcmb4DfBEZxTL8zojLl2T8a/zcXpG0kWqECiN0qK1QyVJJ4LU1E++nGfLaR7AmqxnFzlhuvXkk1F6Qv9HX8QzwBKDn9GgiOLM/UVJKBKdaJTLnNRJA2qvspo0JjktHj9QpEoUJhCqvUyHyl30KRQSGHBsOeJuC2OFn7AD9APSRr/R731mEfmXd2/T4C4ZO/0NtlB/RSrj6DdO/h9ie4G9EBEAAA==
  recorded_at: Thu, 28 Dec 2023 16:48:22 GMT
recorded_with: VCR 6.1.0
